
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o lab5_impl1_mapvo.vo -w -neg -gui -msgset E:/sjtu/learning/VHDL/final/lab5/promote.xml lab5_impl1_map.ncd 
// Netlist created on Mon Dec 19 21:11:10 2022
// Netlist written on Mon Dec 19 21:11:12 2022
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module piano ( switch, mode, clk, col, row, beep );
  input  switch, mode, clk;
  input  [3:0] col;
  output [3:0] row;
  output beep;
  wire   cnt_0, n105, cnt_19__N_55, clk_c, n942, cnt_18, cnt_19, music_num, 
         \U2/mn_former_derived_1 , \U2/mn_former , n937, cnt_14, cnt_13, n91, 
         n92, n948, n949, pitch_4, cnt_4, pitch_5, cnt_5, pitch_6, cnt_6, 
         pitch_7, cnt_7, n939, n940, n86, n951, pitch_8, cnt_8, pitch_9, cnt_9, 
         pitch_10, cnt_10, pitch_11, cnt_11, n938, cnt_2, cnt_1, n103, n104, 
         n943, cnt_12, n93, n94, n947, n941, pitch_12, pitch_13, cnt_15, 
         cnt_16, cnt_17, n87, n88, n950, n95, n96, n946, n97, n98, n945, n89, 
         n90, pitch_0, pitch_1, pitch_2, pitch_3, cnt_3, n99, n100, n944, n101, 
         n102, \U1/cnt8_14 , \U1/cnt8_13 , \U1/n91 , \U1/n92 , n569, \U1/n975 , 
         \U1/n976 , \U1/cnt8_12 , \U1/cnt8_11 , \U1/n93 , \U1/n94 , \U1/n974 , 
         \U1/cnt8_10 , \U1/cnt8_9 , \U1/n95 , \U1/n96 , \U1/n973 , \U1/cnt8_8 , 
         \U1/cnt8_7 , \U1/n97 , \U1/n98 , \U1/n972 , \U1/cnt40_4 , 
         \U1/cnt40_3 , \U1/n91_adj_254 , \U1/n92_adj_253 , n1283, \U1/n953 , 
         \U1/n954 , \U1/cnt40_16 , \U1/cnt40_15 , \U1/n79 , \U1/n80 , 
         \U1/n959 , \U1/n960 , \U1/cnt40_2 , \U1/cnt40_1 , \U1/n93_adj_256 , 
         \U1/n94_adj_255 , \U1/n952 , \U1/cnt40_14 , \U1/cnt40_13 , \U1/n81 , 
         \U1/n82 , \U1/n958 , \U1/cnt40_0 , \U1/n95_adj_257 , \U1/cnt40_12 , 
         \U1/cnt40_11 , \U1/n83 , \U1/n84 , \U1/n957 , \U1/cnt8_2 , 
         \U1/cnt8_1 , \U1/n103 , \U1/n104 , \U1/n969 , \U1/n970 , \U1/cnt8_0 , 
         \U1/n105 , \U1/cnt8_6 , \U1/cnt8_5 , \U1/n99 , \U1/n100 , \U1/n971 , 
         \U1/cnt8_19 , \U1/n86 , \U1/n978 , \U1/cnt40_10 , \U1/cnt40_9 , 
         \U1/n85 , \U1/n86_adj_258 , \U1/n956 , \U1/cnt40_17 , \U1/n78 , 
         \U1/cnt40_8 , \U1/cnt40_7 , \U1/n87_adj_260 , \U1/n88_adj_259 , 
         \U1/n955 , \U1/cnt8_18 , \U1/cnt8_17 , \U1/n87 , \U1/n88 , \U1/n977 , 
         \U1/cnt8_4 , \U1/cnt8_3 , \U1/n101 , \U1/n102 , \U1/cnt8_16 , 
         \U1/cnt8_15 , \U1/n89 , \U1/n90 , \U1/cnt40_6 , \U1/cnt40_5 , 
         \U1/n89_adj_261 , \U1/n90_adj_262 , ptr2_0, \U2/n45 , clk_c_enable_20, 
         n575, \U2/n965 , ptr1_7, \U2/n38 , \U2/n572 , \U2/n964 , ptr1_6, 
         ptr1_5, \U2/n39 , \U2/n40 , \U2/n963 , ptr1_4, ptr1_3, \U2/n41 , 
         \U2/n42 , \U2/n962 , ptr1_2, ptr1_1, \U2/n43 , \U2/n44 , \U2/n961 , 
         ptr2_7, \U2/n38_adj_248 , \U2/n968 , ptr1_0, \U2/n45_adj_244 , ptr2_6, 
         ptr2_5, \U2/n39_adj_251 , \U2/n40_adj_250 , \U2/n967 , ptr2_4, ptr2_3, 
         \U2/n41_adj_249 , \U2/n42_adj_247 , \U2/n966 , ptr2_2, ptr2_1, 
         \U2/n43_adj_246 , \U2/n44_adj_245 , clk_music, \U2/n1172 , beep_c, 
         VCC_net, n985, n1285, clk40hz, \U1/clk40hz_N_194 , \U1/n6 , 
         \U1/n1128 , clk8hz, \U1/clk8hz_N_193 , clk_music_N_56, \U2/n1290 , 
         col_c_2, col_c_1, col_c_3, col_c_0, mode_num, n1291, mode_c, n651, 
         music_num_N_58, switch_c, tmp, tmp_N_62, row_c_1, n1288, n1111, 
         clk_c_enable_15, n568, tone1_0, tone1_1, n1296, n1295, tone1_3_N_31_2, 
         tone1_2, tone1_3, n4, n566, n1220, tone2_3_N_235_1, tone2_3_N_239_1, 
         tone2_3_N_235_0, tone2_3_N_239_0, \U2/tone2_3_N_195_1 , 
         \U2/tone2_3_N_195_0 , \U2/tone2_3__N_199 , tone2_0, tone2_1, 
         tone2_3_N_235_2, tone2_3_N_239_2, \U2/tone2_3_N_195_2 , tone2_2, 
         \U2/n6 , \U2/n1134 , \U2/n1029 , \U2/n1281 , \U2/n511 , tone2_3, 
         n1294, tone_3, n1292, n1293, mux_16_Mux_0_0_0_0_f5a, 
         mux_16_Mux_0_0_0_1_f5b, mux_16_Mux_0_0_0_f5a, mux_16_Mux_0_0_1_f5b, 
         mux_16_Mux_0_0_1_0_f5a, mux_16_Mux_0_0_f5a, mux_16_Mux_0_0_1_1_f5b, 
         mux_16_Mux_0_1_f5b, mux_16_Mux_0_1_0_0_f5a, mux_16_Mux_0_1_0_1_f5b, 
         mux_16_Mux_0_1_0_f5a, mux_16_Mux_0_1_1_f5b, mux_16_Mux_0_1_1_0_f5a, 
         mux_16_Mux_0_1_1_1_f5b, mux_15_Mux_0_0_0_0_f5a, 
         mux_15_Mux_0_0_0_1_f5b, mux_15_Mux_0_0_0_f5a, mux_15_Mux_0_0_1_f5b, 
         mux_15_Mux_0_0_1_0_f5a, mux_15_Mux_0_0_f5a, mux_15_Mux_0_0_1_1_f5b, 
         mux_15_Mux_0_1_f5b, mux_15_Mux_0_1_0_0_f5a, mux_15_Mux_0_1_0_1_f5b, 
         mux_15_Mux_0_1_0_f5a, mux_15_Mux_0_1_1_f5b, mux_15_Mux_0_1_1_0_f5a, 
         mux_15_Mux_0_1_1_1_f5b, mux_15_Mux_1_0_0_0_f5a, 
         mux_15_Mux_1_0_0_1_f5b, mux_15_Mux_1_0_0_f5a, mux_15_Mux_1_0_1_f5b, 
         mux_15_Mux_1_0_1_0_f5a, mux_15_Mux_1_0_f5a, mux_15_Mux_1_0_1_1_f5b, 
         mux_15_Mux_1_1_f5b, mux_15_Mux_1_1_0_0_f5a, \U2/n1154 , 
         mux_15_Mux_1_1_0_1_f5b, mux_15_Mux_1_1_0_f5a, mux_15_Mux_1_1_1_f5b, 
         mux_15_Mux_1_1_1_0_f5a, mux_15_Mux_1_1_1_1_f5b, 
         mux_15_Mux_2_0_0_0_f5a, mux_15_Mux_2_0_0_1_f5b, mux_15_Mux_2_0_0_f5a, 
         mux_15_Mux_2_0_1_f5b, mux_15_Mux_2_0_1_0_f5a, mux_15_Mux_2_0_f5a, 
         mux_15_Mux_2_0_1_1_f5b, mux_15_Mux_2_1_f5b, mux_15_Mux_2_1_0_0_f5a, 
         mux_15_Mux_2_1_0_1_f5b, mux_15_Mux_2_1_0_f5a, mux_15_Mux_2_1_1_f5b, 
         mux_15_Mux_2_1_1_0_f5a, mux_15_Mux_2_1_1_1_f5b, 
         mux_16_Mux_1_0_0_0_f5a, mux_16_Mux_1_0_0_1_f5b, mux_16_Mux_1_0_0_f5a, 
         mux_16_Mux_1_0_1_f5b, mux_16_Mux_1_0_1_0_f5a, mux_16_Mux_1_0_f5a, 
         mux_16_Mux_1_0_1_1_f5b, mux_16_Mux_1_1_f5b, mux_16_Mux_1_1_0_0_f5a, 
         mux_16_Mux_1_1_0_1_f5b, mux_16_Mux_1_1_0_f5a, mux_16_Mux_1_1_1_f5b, 
         mux_16_Mux_1_1_1_0_f5a, mux_16_Mux_1_1_1_1_f5b, 
         mux_16_Mux_2_0_0_0_f5a, mux_16_Mux_2_0_0_1_f5b, mux_16_Mux_2_0_0_f5a, 
         mux_16_Mux_2_0_1_f5b, mux_16_Mux_2_0_1_0_f5a, mux_16_Mux_2_0_f5a, 
         mux_16_Mux_2_0_1_1_f5b, mux_16_Mux_2_1_f5b, mux_16_Mux_2_1_0_0_f5a, 
         mux_16_Mux_2_1_0_1_f5b, mux_16_Mux_2_1_0_f5a, mux_16_Mux_2_1_1_f5b, 
         mux_16_Mux_2_1_1_0_f5a, mux_16_Mux_2_1_1_1_f5b, n1221, n6, n7, n1284, 
         n14, n7_adj_264, \U1/n16 , \U1/n17 , n8, \U1/n10 , \U1/n14 , \U2/n11 , 
         n1205, \U1/n18 , \U1/n1178 , \U1/n20 , \U1/n1174 , \U1/n16_adj_263 ;

  SLICE_0 SLICE_0( .A1(cnt_0), .DI1(n105), .LSR(cnt_19__N_55), .CLK(clk_c), 
    .F1(n105), .Q1(cnt_0), .FCO(n942));
  SLICE_1 SLICE_1( .B1(cnt_18), .A1(cnt_19), .M0(music_num), 
    .CLK(\U2/mn_former_derived_1 ), .Q0(\U2/mn_former ), .FCO(n937));
  SLICE_2 SLICE_2( .A1(cnt_14), .A0(cnt_13), .DI1(n91), .DI0(n92), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n948), .F0(n92), .Q0(cnt_13), 
    .F1(n91), .Q1(cnt_14), .FCO(n949));
  SLICE_3 SLICE_3( .D1(pitch_4), .C1(cnt_4), .B1(pitch_5), .A1(cnt_5), 
    .D0(pitch_6), .C0(cnt_6), .B0(pitch_7), .A0(cnt_7), .FCI(n939), .FCO(n940));
  SLICE_4 SLICE_4( .A0(cnt_19), .DI0(n86), .LSR(cnt_19__N_55), .CLK(clk_c), 
    .FCI(n951), .F0(n86), .Q0(cnt_19));
  SLICE_5 SLICE_5( .D1(pitch_8), .C1(cnt_8), .B1(pitch_9), .A1(cnt_9), 
    .D0(pitch_10), .C0(cnt_10), .B0(pitch_11), .A0(cnt_11), .FCI(n938), 
    .FCO(n939));
  SLICE_6 SLICE_6( .A1(cnt_2), .A0(cnt_1), .DI1(n103), .DI0(n104), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n942), .F0(n104), .Q0(cnt_1), 
    .F1(n103), .Q1(cnt_2), .FCO(n943));
  SLICE_7 SLICE_7( .A1(cnt_12), .A0(cnt_11), .DI1(n93), .DI0(n94), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n947), .F0(n94), .Q0(cnt_11), 
    .F1(n93), .Q1(cnt_12), .FCO(n948));
  SLICE_8 SLICE_8( .FCI(n941), .F0(cnt_19__N_55));
  SLICE_9 SLICE_9( .D1(pitch_12), .C1(cnt_12), .B1(pitch_13), .A1(cnt_13), 
    .D0(cnt_14), .C0(cnt_15), .B0(cnt_16), .A0(cnt_17), .FCI(n937), .FCO(n938));
  SLICE_10 SLICE_10( .A1(cnt_18), .A0(cnt_17), .DI1(n87), .DI0(n88), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n950), .F0(n88), .Q0(cnt_17), 
    .F1(n87), .Q1(cnt_18), .FCO(n951));
  SLICE_11 SLICE_11( .A1(cnt_10), .A0(cnt_9), .DI1(n95), .DI0(n96), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n946), .F0(n96), .Q0(cnt_9), 
    .F1(n95), .Q1(cnt_10), .FCO(n947));
  SLICE_12 SLICE_12( .A1(cnt_8), .A0(cnt_7), .DI1(n97), .DI0(n98), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n945), .F0(n98), .Q0(cnt_7), 
    .F1(n97), .Q1(cnt_8), .FCO(n946));
  SLICE_13 SLICE_13( .A1(cnt_16), .A0(cnt_15), .DI1(n89), .DI0(n90), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n949), .F0(n90), .Q0(cnt_15), 
    .F1(n89), .Q1(cnt_16), .FCO(n950));
  SLICE_14 SLICE_14( .D1(pitch_0), .C1(cnt_0), .B1(pitch_1), .A1(cnt_1), 
    .D0(pitch_2), .C0(cnt_2), .B0(pitch_3), .A0(cnt_3), .FCI(n940), .FCO(n941));
  SLICE_15 SLICE_15( .A1(cnt_6), .A0(cnt_5), .DI1(n99), .DI0(n100), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n944), .F0(n100), .Q0(cnt_5), 
    .F1(n99), .Q1(cnt_6), .FCO(n945));
  SLICE_16 SLICE_16( .A1(cnt_4), .A0(cnt_3), .DI1(n101), .DI0(n102), 
    .LSR(cnt_19__N_55), .CLK(clk_c), .FCI(n943), .F0(n102), .Q0(cnt_3), 
    .F1(n101), .Q1(cnt_4), .FCO(n944));
  U1_SLICE_17 \U1/SLICE_17 ( .A1(\U1/cnt8_14 ), .A0(\U1/cnt8_13 ), 
    .DI1(\U1/n91 ), .DI0(\U1/n92 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n975 ), 
    .F0(\U1/n92 ), .Q0(\U1/cnt8_13 ), .F1(\U1/n91 ), .Q1(\U1/cnt8_14 ), 
    .FCO(\U1/n976 ));
  U1_SLICE_18 \U1/SLICE_18 ( .A1(\U1/cnt8_12 ), .A0(\U1/cnt8_11 ), 
    .DI1(\U1/n93 ), .DI0(\U1/n94 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n974 ), 
    .F0(\U1/n94 ), .Q0(\U1/cnt8_11 ), .F1(\U1/n93 ), .Q1(\U1/cnt8_12 ), 
    .FCO(\U1/n975 ));
  U1_SLICE_19 \U1/SLICE_19 ( .A1(\U1/cnt8_10 ), .A0(\U1/cnt8_9 ), 
    .DI1(\U1/n95 ), .DI0(\U1/n96 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n973 ), 
    .F0(\U1/n96 ), .Q0(\U1/cnt8_9 ), .F1(\U1/n95 ), .Q1(\U1/cnt8_10 ), 
    .FCO(\U1/n974 ));
  U1_SLICE_20 \U1/SLICE_20 ( .A1(\U1/cnt8_8 ), .A0(\U1/cnt8_7 ), 
    .DI1(\U1/n97 ), .DI0(\U1/n98 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n972 ), 
    .F0(\U1/n98 ), .Q0(\U1/cnt8_7 ), .F1(\U1/n97 ), .Q1(\U1/cnt8_8 ), 
    .FCO(\U1/n973 ));
  U1_SLICE_21 \U1/SLICE_21 ( .A1(\U1/cnt40_4 ), .A0(\U1/cnt40_3 ), 
    .DI1(\U1/n91_adj_254 ), .DI0(\U1/n92_adj_253 ), .LSR(n1283), .CLK(clk_c), 
    .FCI(\U1/n953 ), .F0(\U1/n92_adj_253 ), .Q0(\U1/cnt40_3 ), 
    .F1(\U1/n91_adj_254 ), .Q1(\U1/cnt40_4 ), .FCO(\U1/n954 ));
  U1_SLICE_22 \U1/SLICE_22 ( .A1(\U1/cnt40_16 ), .A0(\U1/cnt40_15 ), 
    .DI1(\U1/n79 ), .DI0(\U1/n80 ), .LSR(n1283), .CLK(clk_c), .FCI(\U1/n959 ), 
    .F0(\U1/n80 ), .Q0(\U1/cnt40_15 ), .F1(\U1/n79 ), .Q1(\U1/cnt40_16 ), 
    .FCO(\U1/n960 ));
  U1_SLICE_23 \U1/SLICE_23 ( .A1(\U1/cnt40_2 ), .A0(\U1/cnt40_1 ), 
    .DI1(\U1/n93_adj_256 ), .DI0(\U1/n94_adj_255 ), .LSR(n1283), .CLK(clk_c), 
    .FCI(\U1/n952 ), .F0(\U1/n94_adj_255 ), .Q0(\U1/cnt40_1 ), 
    .F1(\U1/n93_adj_256 ), .Q1(\U1/cnt40_2 ), .FCO(\U1/n953 ));
  U1_SLICE_24 \U1/SLICE_24 ( .A1(\U1/cnt40_14 ), .A0(\U1/cnt40_13 ), 
    .DI1(\U1/n81 ), .DI0(\U1/n82 ), .LSR(n1283), .CLK(clk_c), .FCI(\U1/n958 ), 
    .F0(\U1/n82 ), .Q0(\U1/cnt40_13 ), .F1(\U1/n81 ), .Q1(\U1/cnt40_14 ), 
    .FCO(\U1/n959 ));
  U1_SLICE_25 \U1/SLICE_25 ( .A1(\U1/cnt40_0 ), .DI1(\U1/n95_adj_257 ), 
    .LSR(n1283), .CLK(clk_c), .F1(\U1/n95_adj_257 ), .Q1(\U1/cnt40_0 ), 
    .FCO(\U1/n952 ));
  U1_SLICE_26 \U1/SLICE_26 ( .A1(\U1/cnt40_12 ), .A0(\U1/cnt40_11 ), 
    .DI1(\U1/n83 ), .DI0(\U1/n84 ), .LSR(n1283), .CLK(clk_c), .FCI(\U1/n957 ), 
    .F0(\U1/n84 ), .Q0(\U1/cnt40_11 ), .F1(\U1/n83 ), .Q1(\U1/cnt40_12 ), 
    .FCO(\U1/n958 ));
  U1_SLICE_27 \U1/SLICE_27 ( .A1(\U1/cnt8_2 ), .A0(\U1/cnt8_1 ), 
    .DI1(\U1/n103 ), .DI0(\U1/n104 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n969 ), 
    .F0(\U1/n104 ), .Q0(\U1/cnt8_1 ), .F1(\U1/n103 ), .Q1(\U1/cnt8_2 ), 
    .FCO(\U1/n970 ));
  U1_SLICE_28 \U1/SLICE_28 ( .A1(\U1/cnt8_0 ), .DI1(\U1/n105 ), .LSR(n569), 
    .CLK(clk_c), .F1(\U1/n105 ), .Q1(\U1/cnt8_0 ), .FCO(\U1/n969 ));
  U1_SLICE_29 \U1/SLICE_29 ( .A1(\U1/cnt8_6 ), .A0(\U1/cnt8_5 ), 
    .DI1(\U1/n99 ), .DI0(\U1/n100 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n971 ), 
    .F0(\U1/n100 ), .Q0(\U1/cnt8_5 ), .F1(\U1/n99 ), .Q1(\U1/cnt8_6 ), 
    .FCO(\U1/n972 ));
  U1_SLICE_30 \U1/SLICE_30 ( .A0(\U1/cnt8_19 ), .DI0(\U1/n86 ), .LSR(n569), 
    .CLK(clk_c), .FCI(\U1/n978 ), .F0(\U1/n86 ), .Q0(\U1/cnt8_19 ));
  U1_SLICE_31 \U1/SLICE_31 ( .A1(\U1/cnt40_10 ), .A0(\U1/cnt40_9 ), 
    .DI1(\U1/n85 ), .DI0(\U1/n86_adj_258 ), .LSR(n1283), .CLK(clk_c), 
    .FCI(\U1/n956 ), .F0(\U1/n86_adj_258 ), .Q0(\U1/cnt40_9 ), .F1(\U1/n85 ), 
    .Q1(\U1/cnt40_10 ), .FCO(\U1/n957 ));
  U1_SLICE_32 \U1/SLICE_32 ( .A0(\U1/cnt40_17 ), .DI0(\U1/n78 ), .LSR(n1283), 
    .CLK(clk_c), .FCI(\U1/n960 ), .F0(\U1/n78 ), .Q0(\U1/cnt40_17 ));
  U1_SLICE_33 \U1/SLICE_33 ( .A1(\U1/cnt40_8 ), .A0(\U1/cnt40_7 ), 
    .DI1(\U1/n87_adj_260 ), .DI0(\U1/n88_adj_259 ), .LSR(n1283), .CLK(clk_c), 
    .FCI(\U1/n955 ), .F0(\U1/n88_adj_259 ), .Q0(\U1/cnt40_7 ), 
    .F1(\U1/n87_adj_260 ), .Q1(\U1/cnt40_8 ), .FCO(\U1/n956 ));
  U1_SLICE_34 \U1/SLICE_34 ( .A1(\U1/cnt8_18 ), .A0(\U1/cnt8_17 ), 
    .DI1(\U1/n87 ), .DI0(\U1/n88 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n977 ), 
    .F0(\U1/n88 ), .Q0(\U1/cnt8_17 ), .F1(\U1/n87 ), .Q1(\U1/cnt8_18 ), 
    .FCO(\U1/n978 ));
  U1_SLICE_35 \U1/SLICE_35 ( .A1(\U1/cnt8_4 ), .A0(\U1/cnt8_3 ), 
    .DI1(\U1/n101 ), .DI0(\U1/n102 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n970 ), 
    .F0(\U1/n102 ), .Q0(\U1/cnt8_3 ), .F1(\U1/n101 ), .Q1(\U1/cnt8_4 ), 
    .FCO(\U1/n971 ));
  U1_SLICE_36 \U1/SLICE_36 ( .A1(\U1/cnt8_16 ), .A0(\U1/cnt8_15 ), 
    .DI1(\U1/n89 ), .DI0(\U1/n90 ), .LSR(n569), .CLK(clk_c), .FCI(\U1/n976 ), 
    .F0(\U1/n90 ), .Q0(\U1/cnt8_15 ), .F1(\U1/n89 ), .Q1(\U1/cnt8_16 ), 
    .FCO(\U1/n977 ));
  U1_SLICE_37 \U1/SLICE_37 ( .A1(\U1/cnt40_6 ), .A0(\U1/cnt40_5 ), 
    .DI1(\U1/n89_adj_261 ), .DI0(\U1/n90_adj_262 ), .LSR(n1283), .CLK(clk_c), 
    .FCI(\U1/n954 ), .F0(\U1/n90_adj_262 ), .Q0(\U1/cnt40_5 ), 
    .F1(\U1/n89_adj_261 ), .Q1(\U1/cnt40_6 ), .FCO(\U1/n955 ));
  U2_SLICE_38 \U2/SLICE_38 ( .A1(ptr2_0), .DI1(\U2/n45 ), .CE(clk_c_enable_20), 
    .LSR(n575), .CLK(clk_c), .F1(\U2/n45 ), .Q1(ptr2_0), .FCO(\U2/n965 ));
  U2_SLICE_39 \U2/SLICE_39 ( .A0(ptr1_7), .DI0(\U2/n38 ), .CE(clk_c_enable_20), 
    .LSR(\U2/n572 ), .CLK(clk_c), .FCI(\U2/n964 ), .F0(\U2/n38 ), .Q0(ptr1_7));
  U2_SLICE_40 \U2/SLICE_40 ( .A1(ptr1_6), .A0(ptr1_5), .DI1(\U2/n39 ), 
    .DI0(\U2/n40 ), .CE(clk_c_enable_20), .LSR(\U2/n572 ), .CLK(clk_c), 
    .FCI(\U2/n963 ), .F0(\U2/n40 ), .Q0(ptr1_5), .F1(\U2/n39 ), .Q1(ptr1_6), 
    .FCO(\U2/n964 ));
  U2_SLICE_41 \U2/SLICE_41 ( .A1(ptr1_4), .A0(ptr1_3), .DI1(\U2/n41 ), 
    .DI0(\U2/n42 ), .CE(clk_c_enable_20), .LSR(\U2/n572 ), .CLK(clk_c), 
    .FCI(\U2/n962 ), .F0(\U2/n42 ), .Q0(ptr1_3), .F1(\U2/n41 ), .Q1(ptr1_4), 
    .FCO(\U2/n963 ));
  U2_SLICE_42 \U2/SLICE_42 ( .A1(ptr1_2), .A0(ptr1_1), .DI1(\U2/n43 ), 
    .DI0(\U2/n44 ), .CE(clk_c_enable_20), .LSR(\U2/n572 ), .CLK(clk_c), 
    .FCI(\U2/n961 ), .F0(\U2/n44 ), .Q0(ptr1_1), .F1(\U2/n43 ), .Q1(ptr1_2), 
    .FCO(\U2/n962 ));
  U2_SLICE_43 \U2/SLICE_43 ( .A0(ptr2_7), .DI0(\U2/n38_adj_248 ), 
    .CE(clk_c_enable_20), .LSR(n575), .CLK(clk_c), .FCI(\U2/n968 ), 
    .F0(\U2/n38_adj_248 ), .Q0(ptr2_7));
  U2_SLICE_44 \U2/SLICE_44 ( .A1(ptr1_0), .DI1(\U2/n45_adj_244 ), 
    .CE(clk_c_enable_20), .LSR(\U2/n572 ), .CLK(clk_c), .F1(\U2/n45_adj_244 ), 
    .Q1(ptr1_0), .FCO(\U2/n961 ));
  U2_SLICE_45 \U2/SLICE_45 ( .A1(ptr2_6), .A0(ptr2_5), .DI1(\U2/n39_adj_251 ), 
    .DI0(\U2/n40_adj_250 ), .CE(clk_c_enable_20), .LSR(n575), .CLK(clk_c), 
    .FCI(\U2/n967 ), .F0(\U2/n40_adj_250 ), .Q0(ptr2_5), .F1(\U2/n39_adj_251 ), 
    .Q1(ptr2_6), .FCO(\U2/n968 ));
  U2_SLICE_46 \U2/SLICE_46 ( .A1(ptr2_4), .A0(ptr2_3), .DI1(\U2/n41_adj_249 ), 
    .DI0(\U2/n42_adj_247 ), .CE(clk_c_enable_20), .LSR(n575), .CLK(clk_c), 
    .FCI(\U2/n966 ), .F0(\U2/n42_adj_247 ), .Q0(ptr2_3), .F1(\U2/n41_adj_249 ), 
    .Q1(ptr2_4), .FCO(\U2/n967 ));
  U2_SLICE_47 \U2/SLICE_47 ( .A1(ptr2_2), .A0(ptr2_1), .DI1(\U2/n43_adj_246 ), 
    .DI0(\U2/n44_adj_245 ), .CE(clk_c_enable_20), .LSR(n575), .CLK(clk_c), 
    .FCI(\U2/n965 ), .F0(\U2/n44_adj_245 ), .Q0(ptr2_1), .F1(\U2/n43_adj_246 ), 
    .Q1(ptr2_2), .FCO(\U2/n966 ));
  SLICE_49 SLICE_49( .D0(ptr1_2), .C0(ptr1_5), .B0(ptr1_6), .A0(ptr1_0), 
    .M0(clk_music), .CLK(clk_c), .F0(\U2/n1172 ), .Q0(beep_c), .F1(VCC_net));
  U1_SLICE_50 \U1/SLICE_50 ( .B1(n985), .A1(n1285), .C0(n985), .B0(clk40hz), 
    .A0(n1285), .DI0(\U1/clk40hz_N_194 ), .CLK(clk_c), .F0(\U1/clk40hz_N_194 ), 
    .Q0(clk40hz), .F1(n1283));
  U1_SLICE_51 \U1/SLICE_51 ( .D1(\U1/cnt8_8 ), .C1(\U1/n6 ), .B1(\U1/cnt8_16 ), 
    .A1(\U1/n1128 ), .B0(n569), .A0(clk8hz), .DI0(\U1/clk8hz_N_193 ), 
    .CLK(clk_c), .F0(\U1/clk8hz_N_193 ), .Q0(clk8hz), .F1(n569));
  SLICE_52 SLICE_52( .B1(ptr2_2), .A1(ptr2_5), .B0(cnt_19__N_55), 
    .A0(clk_music), .DI0(clk_music_N_56), .CLK(clk_c), .F0(clk_music_N_56), 
    .Q0(clk_music), .F1(\U2/n1290 ));
  SLICE_53 SLICE_53( .D1(col_c_2), .C1(col_c_1), .B1(col_c_3), .A1(col_c_0), 
    .A0(mode_num), .DI0(n1291), .CLK(mode_c), .F0(n1291), .Q0(mode_num), 
    .F1(n651));
  SLICE_54 SLICE_54( .B1(\U1/cnt8_4 ), .A1(\U1/cnt8_13 ), .A0(music_num), 
    .DI0(music_num_N_58), .CLK(switch_c), .F0(music_num_N_58), .Q0(music_num), 
    .F1(\U1/n6 ));
  SLICE_55 SLICE_55( .B1(clk40hz), .A1(tmp), .A0(tmp), .DI0(tmp_N_62), 
    .CLK(clk40hz), .F0(tmp_N_62), .Q0(tmp), .F1(row_c_1));
  SLICE_56 SLICE_56( .C1(col_c_0), .B1(col_c_2), .A1(col_c_1), .C0(col_c_2), 
    .B0(col_c_1), .A0(col_c_0), .DI1(n1288), .DI0(n1111), .CE(clk_c_enable_15), 
    .LSR(n568), .CLK(clk_c), .F0(n1111), .Q0(tone1_0), .F1(n1288), 
    .Q1(tone1_1));
  SLICE_57 SLICE_57( .B1(col_c_2), .A1(col_c_1), .D0(col_c_0), .C0(col_c_3), 
    .B0(n1296), .A0(n1295), .DI0(tone1_3_N_31_2), .CE(clk_c_enable_15), 
    .CLK(clk_c), .F0(tone1_3_N_31_2), .Q0(tone1_2), .F1(n1296));
  SLICE_58 SLICE_58( .D1(tone1_2), .C1(n1295), .B1(tone1_3), .A1(n4), 
    .B0(clk40hz), .A0(tmp), .DI0(n1295), .CE(clk_c_enable_15), .LSR(n566), 
    .CLK(clk_c), .F0(n1295), .Q0(tone1_3), .F1(n1220));
  U2_SLICE_59 \U2/SLICE_59 ( .C1(music_num), .B1(tone2_3_N_235_1), 
    .A1(tone2_3_N_239_1), .C0(music_num), .B0(tone2_3_N_235_0), 
    .A0(tone2_3_N_239_0), .DI1(\U2/tone2_3_N_195_1 ), 
    .DI0(\U2/tone2_3_N_195_0 ), .CLK(\U2/tone2_3__N_199 ), 
    .F0(\U2/tone2_3_N_195_0 ), .Q0(tone2_0), .F1(\U2/tone2_3_N_195_1 ), 
    .Q1(tone2_1));
  SLICE_60 SLICE_60( .B1(tone1_1), .A1(tone1_0), .C0(music_num), 
    .B0(tone2_3_N_235_2), .A0(tone2_3_N_239_2), .DI0(\U2/tone2_3_N_195_2 ), 
    .CLK(\U2/tone2_3__N_199 ), .F0(\U2/tone2_3_N_195_2 ), .Q0(tone2_2), 
    .F1(n4));
  U2_SLICE_61 \U2/SLICE_61 ( .D1(ptr2_1), .C1(ptr2_2), .B1(\U2/n6 ), 
    .A1(ptr2_0), .D0(ptr2_4), .C0(ptr2_6), .B0(\U2/n1134 ), .A0(\U2/n1029 ), 
    .DI0(\U2/n1281 ), .LSR(\U2/n511 ), .CLK(\U2/tone2_3__N_199 ), 
    .F0(\U2/n1281 ), .Q0(tone2_3), .F1(\U2/n1029 ));
  i1013_SLICE_62 \i1013/SLICE_62 ( .D1(tone1_1), .C1(n1294), .B1(tone_3), 
    .A1(n1292), .D0(n1294), .C0(tone_3), .B0(tone2_1), .A0(n1292), 
    .M0(mode_num), .OFX0(pitch_4));
  i1011_SLICE_63 \i1011/SLICE_63 ( .D1(tone1_0), .C1(n1293), .B1(n1294), 
    .A1(tone_3), .D0(n1293), .C0(n1294), .B0(tone_3), .A0(tone2_0), 
    .M0(mode_num), .OFX0(pitch_12));
  SLICE_64 SLICE_64( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_16_Mux_0_0_0_0_f5a));
  SLICE_65 SLICE_65( .C1(ptr2_3), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_16_Mux_0_0_0_1_f5b), .FXA(mux_16_Mux_0_0_0_0_f5a), 
    .OFX0(mux_16_Mux_0_0_0_1_f5b), .OFX1(mux_16_Mux_0_0_0_f5a));
  SLICE_66 SLICE_66( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_16_Mux_0_0_1_f5b), .FXA(mux_16_Mux_0_0_0_f5a), 
    .OFX0(mux_16_Mux_0_0_1_0_f5a), .OFX1(mux_16_Mux_0_0_f5a));
  SLICE_67 SLICE_67( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_16_Mux_0_0_1_1_f5b), 
    .FXA(mux_16_Mux_0_0_1_0_f5a), .OFX0(mux_16_Mux_0_0_1_1_f5b), 
    .OFX1(mux_16_Mux_0_0_1_f5b));
  SLICE_68 SLICE_68( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_16_Mux_0_1_f5b), .FXA(mux_16_Mux_0_0_f5a), 
    .OFX0(mux_16_Mux_0_1_0_0_f5a), .OFX1(tone2_3_N_235_0));
  SLICE_69 SLICE_69( .C1(ptr2_3), .B1(ptr2_2), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_16_Mux_0_1_0_1_f5b), .FXA(mux_16_Mux_0_1_0_0_f5a), 
    .OFX0(mux_16_Mux_0_1_0_1_f5b), .OFX1(mux_16_Mux_0_1_0_f5a));
  SLICE_70 SLICE_70( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_16_Mux_0_1_1_f5b), .FXA(mux_16_Mux_0_1_0_f5a), 
    .OFX0(mux_16_Mux_0_1_1_0_f5a), .OFX1(mux_16_Mux_0_1_f5b));
  SLICE_71 SLICE_71( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_16_Mux_0_1_1_1_f5b), 
    .FXA(mux_16_Mux_0_1_1_0_f5a), .OFX0(mux_16_Mux_0_1_1_1_f5b), 
    .OFX1(mux_16_Mux_0_1_1_f5b));
  SLICE_72 SLICE_72( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_15_Mux_0_0_0_0_f5a));
  SLICE_73 SLICE_73( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_0_0_1_f5b), .FXA(mux_15_Mux_0_0_0_0_f5a), 
    .OFX0(mux_15_Mux_0_0_0_1_f5b), .OFX1(mux_15_Mux_0_0_0_f5a));
  SLICE_74 SLICE_74( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_0_1_f5b), .FXA(mux_15_Mux_0_0_0_f5a), 
    .OFX0(mux_15_Mux_0_0_1_0_f5a), .OFX1(mux_15_Mux_0_0_f5a));
  SLICE_75 SLICE_75( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_0_1_1_f5b), .FXA(mux_15_Mux_0_0_1_0_f5a), 
    .OFX0(mux_15_Mux_0_0_1_1_f5b), .OFX1(mux_15_Mux_0_0_1_f5b));
  SLICE_76 SLICE_76( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_0), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_1_f5b), .FXA(mux_15_Mux_0_0_f5a), 
    .OFX0(mux_15_Mux_0_1_0_0_f5a), .OFX1(tone2_3_N_239_0));
  SLICE_77 SLICE_77( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_1_0_1_f5b), .FXA(mux_15_Mux_0_1_0_0_f5a), 
    .OFX0(mux_15_Mux_0_1_0_1_f5b), .OFX1(mux_15_Mux_0_1_0_f5a));
  SLICE_78 SLICE_78( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_1_1_f5b), .FXA(mux_15_Mux_0_1_0_f5a), 
    .OFX0(mux_15_Mux_0_1_1_0_f5a), .OFX1(mux_15_Mux_0_1_f5b));
  SLICE_79 SLICE_79( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_0_1_1_1_f5b), .FXA(mux_15_Mux_0_1_1_0_f5a), 
    .OFX0(mux_15_Mux_0_1_1_1_f5b), .OFX1(mux_15_Mux_0_1_1_f5b));
  SLICE_80 SLICE_80( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_15_Mux_1_0_0_0_f5a));
  SLICE_81 SLICE_81( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_1_0_0_1_f5b), .FXA(mux_15_Mux_1_0_0_0_f5a), 
    .OFX0(mux_15_Mux_1_0_0_1_f5b), .OFX1(mux_15_Mux_1_0_0_f5a));
  SLICE_82 SLICE_82( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_15_Mux_1_0_1_f5b), .FXA(mux_15_Mux_1_0_0_f5a), 
    .OFX0(mux_15_Mux_1_0_1_0_f5a), .OFX1(mux_15_Mux_1_0_f5a));
  SLICE_83 SLICE_83( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_1_0_1_1_f5b), .FXA(mux_15_Mux_1_0_1_0_f5a), 
    .OFX0(mux_15_Mux_1_0_1_1_f5b), .OFX1(mux_15_Mux_1_0_1_f5b));
  SLICE_84 SLICE_84( .C1(ptr1_1), .B1(ptr1_7), .A1(ptr1_3), .D0(ptr1_7), 
    .C0(ptr1_3), .B0(ptr1_2), .A0(ptr1_6), .M1(ptr1_0), 
    .FXB(mux_15_Mux_1_1_f5b), .FXA(mux_15_Mux_1_0_f5a), 
    .OFX0(mux_15_Mux_1_1_0_0_f5a), .F1(\U2/n1154 ), .OFX1(tone2_3_N_239_1));
  SLICE_85 SLICE_85( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_15_Mux_1_1_0_1_f5b), .FXA(mux_15_Mux_1_1_0_0_f5a), 
    .OFX0(mux_15_Mux_1_1_0_1_f5b), .OFX1(mux_15_Mux_1_1_0_f5a));
  SLICE_86 SLICE_86( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .C0(ptr1_3), .B0(ptr1_2), .A0(ptr1_6), .M1(ptr1_4), .M0(ptr1_7), 
    .FXB(mux_15_Mux_1_1_1_f5b), .FXA(mux_15_Mux_1_1_0_f5a), 
    .OFX0(mux_15_Mux_1_1_1_0_f5a), .OFX1(mux_15_Mux_1_1_f5b));
  SLICE_87 SLICE_87( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_15_Mux_1_1_1_1_f5b), .FXA(mux_15_Mux_1_1_1_0_f5a), 
    .OFX0(mux_15_Mux_1_1_1_1_f5b), .OFX1(mux_15_Mux_1_1_1_f5b));
  SLICE_88 SLICE_88( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_15_Mux_2_0_0_0_f5a));
  SLICE_89 SLICE_89( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_2_0_0_1_f5b), .FXA(mux_15_Mux_2_0_0_0_f5a), 
    .OFX0(mux_15_Mux_2_0_0_1_f5b), .OFX1(mux_15_Mux_2_0_0_f5a));
  SLICE_90 SLICE_90( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_15_Mux_2_0_1_f5b), .FXA(mux_15_Mux_2_0_0_f5a), 
    .OFX0(mux_15_Mux_2_0_1_0_f5a), .OFX1(mux_15_Mux_2_0_f5a));
  SLICE_91 SLICE_91( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_2_0_1_1_f5b), .FXA(mux_15_Mux_2_0_1_0_f5a), 
    .OFX0(mux_15_Mux_2_0_1_1_f5b), .OFX1(mux_15_Mux_2_0_1_f5b));
  SLICE_92 SLICE_92( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_0), 
    .M0(ptr1_7), .FXB(mux_15_Mux_2_1_f5b), .FXA(mux_15_Mux_2_0_f5a), 
    .OFX0(mux_15_Mux_2_1_0_0_f5a), .OFX1(tone2_3_N_239_2));
  SLICE_93 SLICE_93( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_15_Mux_2_1_0_1_f5b), .FXA(mux_15_Mux_2_1_0_0_f5a), 
    .OFX0(mux_15_Mux_2_1_0_1_f5b), .OFX1(mux_15_Mux_2_1_0_f5a));
  SLICE_94 SLICE_94( .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), 
    .M1(ptr1_4), .M0(ptr1_7), .FXB(mux_15_Mux_2_1_1_f5b), 
    .FXA(mux_15_Mux_2_1_0_f5a), .OFX0(mux_15_Mux_2_1_1_0_f5a), 
    .OFX1(mux_15_Mux_2_1_f5b));
  SLICE_95 SLICE_95( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .B0(ptr1_3), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_15_Mux_2_1_1_1_f5b), .FXA(mux_15_Mux_2_1_1_0_f5a), 
    .OFX0(mux_15_Mux_2_1_1_1_f5b), .OFX1(mux_15_Mux_2_1_1_f5b));
  SLICE_96 SLICE_96( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_16_Mux_1_0_0_0_f5a));
  SLICE_97 SLICE_97( .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_16_Mux_1_0_0_1_f5b), .FXA(mux_16_Mux_1_0_0_0_f5a), 
    .OFX0(mux_16_Mux_1_0_0_1_f5b), .OFX1(mux_16_Mux_1_0_0_f5a));
  SLICE_98 SLICE_98( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .C0(ptr2_3), .B0(ptr2_2), .A0(ptr2_6), .M1(ptr2_4), .M0(ptr2_7), 
    .FXB(mux_16_Mux_1_0_1_f5b), .FXA(mux_16_Mux_1_0_0_f5a), 
    .OFX0(mux_16_Mux_1_0_1_0_f5a), .OFX1(mux_16_Mux_1_0_f5a));
  SLICE_99 SLICE_99( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_16_Mux_1_0_1_1_f5b), 
    .FXA(mux_16_Mux_1_0_1_0_f5a), .OFX0(mux_16_Mux_1_0_1_1_f5b), 
    .OFX1(mux_16_Mux_1_0_1_f5b));
  SLICE_100 SLICE_100( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_16_Mux_1_1_f5b), .FXA(mux_16_Mux_1_0_f5a), 
    .OFX0(mux_16_Mux_1_1_0_0_f5a), .OFX1(tone2_3_N_235_1));
  SLICE_101 SLICE_101( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_16_Mux_1_1_0_1_f5b), .FXA(mux_16_Mux_1_1_0_0_f5a), 
    .OFX0(mux_16_Mux_1_1_0_1_f5b), .OFX1(mux_16_Mux_1_1_0_f5a));
  SLICE_102 SLICE_102( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_16_Mux_1_1_1_f5b), .FXA(mux_16_Mux_1_1_0_f5a), 
    .OFX0(mux_16_Mux_1_1_1_0_f5a), .OFX1(mux_16_Mux_1_1_f5b));
  SLICE_103 SLICE_103( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_16_Mux_1_1_1_1_f5b), 
    .FXA(mux_16_Mux_1_1_1_0_f5a), .OFX0(mux_16_Mux_1_1_1_1_f5b), 
    .OFX1(mux_16_Mux_1_1_1_f5b));
  SLICE_104 SLICE_104( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_16_Mux_2_0_0_0_f5a));
  SLICE_105 SLICE_105( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_16_Mux_2_0_0_1_f5b), .FXA(mux_16_Mux_2_0_0_0_f5a), 
    .OFX0(mux_16_Mux_2_0_0_1_f5b), .OFX1(mux_16_Mux_2_0_0_f5a));
  SLICE_106 SLICE_106( .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), .M0(ptr2_7), 
    .FXB(mux_16_Mux_2_0_1_f5b), .FXA(mux_16_Mux_2_0_0_f5a), 
    .OFX0(mux_16_Mux_2_0_1_0_f5a), .OFX1(mux_16_Mux_2_0_f5a));
  SLICE_107 SLICE_107( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_16_Mux_2_0_1_1_f5b), .FXA(mux_16_Mux_2_0_1_0_f5a), 
    .OFX0(mux_16_Mux_2_0_1_1_f5b), .OFX1(mux_16_Mux_2_0_1_f5b));
  SLICE_108 SLICE_108( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_16_Mux_2_1_f5b), .FXA(mux_16_Mux_2_0_f5a), 
    .OFX0(mux_16_Mux_2_1_0_0_f5a), .OFX1(tone2_3_N_235_2));
  SLICE_109 SLICE_109( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_16_Mux_2_1_0_1_f5b), .FXA(mux_16_Mux_2_1_0_0_f5a), 
    .OFX0(mux_16_Mux_2_1_0_1_f5b), .OFX1(mux_16_Mux_2_1_0_f5a));
  SLICE_110 SLICE_110( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_16_Mux_2_1_1_f5b), .FXA(mux_16_Mux_2_1_0_f5a), 
    .OFX0(mux_16_Mux_2_1_1_0_f5a), .OFX1(mux_16_Mux_2_1_f5b));
  SLICE_111 SLICE_111( .C1(ptr2_3), .B1(ptr2_2), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_16_Mux_2_1_1_1_f5b), .FXA(mux_16_Mux_2_1_1_0_f5a), 
    .OFX0(mux_16_Mux_2_1_1_1_f5b), .OFX1(mux_16_Mux_2_1_1_f5b));
  SLICE_112 SLICE_112( .D1(col_c_3), .C1(col_c_0), .B1(n1221), .A1(clk40hz), 
    .D0(col_c_0), .C0(n1220), .B0(col_c_2), .A0(col_c_1), .F0(n1221), .F1(n6));
  SLICE_113 SLICE_113( .C1(n1294), .B1(n1293), .A1(n1292), .D0(n1292), 
    .C0(tone_3), .B0(n7), .A0(n1284), .F0(pitch_3), .F1(n7));
  SLICE_114 SLICE_114( .D1(n1292), .C1(tone_3), .B1(n14), .A1(n1284), 
    .C0(n1294), .B0(n1293), .A0(n1292), .F0(n14), .F1(pitch_7));
  SLICE_115 SLICE_115( .C1(mode_num), .B1(tone1_2), .A1(tone2_2), .D0(n1294), 
    .C0(mode_num), .B0(tone1_1), .A0(tone2_1), .F0(n1284), .F1(n1294));
  SLICE_116 SLICE_116( .C1(n1294), .B1(n1293), .A1(n1292), .D0(n1292), 
    .C0(tone_3), .B0(n7_adj_264), .A0(n1284), .F0(pitch_10), .F1(n7_adj_264));
  SLICE_117 SLICE_117( .C1(mode_num), .B1(tone1_1), .A1(tone2_1), .C0(n1293), 
    .B0(tone_3), .A0(n1294), .F0(pitch_9), .F1(n1293));
  SLICE_118 SLICE_118( .C1(mode_num), .B1(tone1_0), .A1(tone2_0), .D0(n1292), 
    .C0(n1294), .B0(tone_3), .A0(n1293), .F0(pitch_5), .F1(n1292));
  SLICE_119 SLICE_119( .D1(\U2/n1172 ), .C1(\U2/n1154 ), .B1(ptr1_4), 
    .A1(clk_c_enable_20), .B0(n569), .A0(clk8hz), .F0(clk_c_enable_20), 
    .F1(\U2/n572 ));
  SLICE_120 SLICE_120( .C1(mode_num), .B1(tone1_3), .A1(tone2_3), .D0(tone_3), 
    .C0(n1294), .B0(n1293), .A0(n1292), .F0(pitch_13), .F1(tone_3));
  SLICE_121 SLICE_121( .D1(\U1/cnt40_10 ), .C1(\U1/n16 ), .B1(\U1/cnt40_9 ), 
    .A1(\U1/n17 ), .D0(n651), .C0(n8), .B0(n1285), .A0(mode_num), .F0(n568), 
    .F1(n1285));
  SLICE_122 SLICE_122( .D1(\U1/cnt40_14 ), .C1(\U1/n10 ), .B1(\U1/n14 ), 
    .A1(\U1/cnt40_4 ), .C0(col_c_3), .B0(clk40hz), .A0(n985), .F0(n8), 
    .F1(n985));
  SLICE_123 SLICE_123( .D1(n1283), .C1(n651), .B1(n6), .A1(mode_num), 
    .B0(col_c_3), .A0(clk_c_enable_15), .F0(n566), .F1(clk_c_enable_15));
  SLICE_124 SLICE_124( .D1(ptr2_1), .C1(\U2/n1290 ), .B1(ptr2_4), 
    .A1(\U2/n11 ), .C0(n1205), .B0(n569), .A0(clk8hz), .F0(n575), .F1(n1205));
  U1_SLICE_125 \U1/SLICE_125 ( .D1(\U1/cnt8_3 ), .C1(\U1/cnt8_18 ), 
    .B1(\U1/n18 ), .A1(\U1/n1178 ), .D0(\U1/cnt8_1 ), .C0(\U1/cnt8_0 ), 
    .B0(\U1/cnt8_9 ), .A0(\U1/cnt8_6 ), .F0(\U1/n18 ), .F1(\U1/n20 ));
  U1_SLICE_126 \U1/SLICE_126 ( .C1(\U1/cnt8_12 ), .B1(\U1/n1174 ), 
    .A1(\U1/cnt8_19 ), .D0(\U1/cnt8_5 ), .C0(\U1/cnt8_14 ), .B0(\U1/cnt8_17 ), 
    .A0(\U1/cnt8_7 ), .F0(\U1/n1174 ), .F1(\U1/n1178 ));
  U1_SLICE_127 \U1/SLICE_127 ( .D1(\U1/cnt8_15 ), .C1(\U1/n16_adj_263 ), 
    .B1(\U1/n20 ), .A1(\U1/cnt8_10 ), .B0(\U1/cnt8_11 ), .A0(\U1/cnt8_2 ), 
    .F0(\U1/n16_adj_263 ), .F1(\U1/n1128 ));
  SLICE_128 SLICE_128( .D1(n1293), .C1(n1292), .B1(tone_3), .A1(n1294), 
    .D0(tone_3), .C0(n1292), .B0(n1294), .A0(n1293), .F0(pitch_0), 
    .F1(pitch_1));
  SLICE_129 SLICE_129( .D1(n1292), .C1(n1294), .B1(n1293), .A1(tone_3), 
    .D0(n1294), .C0(n1292), .B0(tone_3), .A0(n1293), .F0(pitch_8), 
    .F1(pitch_2));
  SLICE_130 SLICE_130( .D1(n1292), .C1(n1294), .B1(tone_3), .A1(n1293), 
    .D0(tone_3), .C0(n1294), .B0(n1293), .A0(n1292), .F0(pitch_6), 
    .F1(pitch_11));
  U2_SLICE_131 \U2/SLICE_131 ( .B1(music_num), .A1(\U2/mn_former ), 
    .B0(music_num), .A0(\U2/mn_former ), .F0(\U2/mn_former_derived_1 ), 
    .F1(\U2/tone2_3__N_199 ));
  U2_SLICE_132 \U2/SLICE_132 ( .D1(ptr2_1), .C1(ptr2_3), .B1(ptr2_2), 
    .A1(ptr2_5), .B0(ptr2_3), .A0(ptr2_5), .F0(\U2/n6 ), .F1(\U2/n1134 ));
  U2_SLICE_133 \U2/SLICE_133 ( .B1(music_num), .A1(ptr2_7), .D0(ptr2_3), 
    .C0(ptr2_7), .B0(ptr2_6), .A0(ptr2_0), .F0(\U2/n11 ), .F1(\U2/n511 ));
  U1_SLICE_134 \U1/SLICE_134 ( .D1(\U1/cnt40_17 ), .C1(\U1/cnt40_7 ), 
    .B1(\U1/cnt40_5 ), .A1(\U1/cnt40_8 ), .B0(\U1/cnt40_11 ), 
    .A0(\U1/cnt40_6 ), .F0(\U1/n10 ), .F1(\U1/n14 ));
  U1_SLICE_135 \U1/SLICE_135 ( .D1(\U1/cnt40_1 ), .C1(\U1/cnt40_16 ), 
    .B1(\U1/cnt40_13 ), .A1(\U1/cnt40_0 ), .D0(\U1/cnt40_2 ), 
    .C0(\U1/cnt40_12 ), .B0(\U1/cnt40_15 ), .A0(\U1/cnt40_3 ), .F0(\U1/n16 ), 
    .F1(\U1/n17 ));
  beep beep_I( .PADDO(beep_c), .beep(beep));
  col_2_ \col[2]_I ( .PADDI(col_c_2), .col2(col[2]));
  col_3_ \col[3]_I ( .PADDI(col_c_3), .col3(col[3]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  mode mode_I( .PADDI(mode_c), .mode(mode));
  switch switch_I( .PADDI(switch_c), .switch(switch));
  row_0_ \row[0]_I ( .PADDO(n1295), .row0(row[0]));
  row_1_ \row[1]_I ( .PADDO(row_c_1), .row1(row[1]));
  row_2_ \row[2]_I ( .PADDO(VCC_net), .row2(row[2]));
  row_3_ \row[3]_I ( .PADDO(VCC_net), .row3(row[3]));
  col_0_ \col[0]_I ( .PADDI(col_c_0), .col0(col[0]));
  col_1_ \col[1]_I ( .PADDI(col_c_1), .col1(col[1]));
  GSR_INST GSR_INST( .GSRNET(\U2/tone2_3__N_199 ));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module SLICE_0 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_235__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 cnt_235_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input B1, A1, M0, CLK, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre0001 \U2/music_num_I_0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 equal_74_0( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0001 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   GATE;

  AND2 INST50( .A(SP), .B(CK), .Z(GATE));
  FL1S1D INST01( .D0(D0), .D1(D1), .CK(GATE), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h1111;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_3 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_18( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_4 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_235__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 cnt_235_add_4_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_5 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_16( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_8 ( input FCI, output F0 );
  wire   GNDI;

  ccu20006 equal_74_20( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hFFFF;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_9 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20007 equal_74_14( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_10 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_11 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_12 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_13 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_20_758( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_16 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_235__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_235__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 cnt_235_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_17 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_18 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_19 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_20 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_21 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_22 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_23 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_24 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_25 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \U1/cnt40_238_239_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_26 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_27 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_28 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \U1/cnt8_236_237_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_29 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_30 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \U1/cnt8_236_237_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_31 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_32 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \U1/cnt40_238_239_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_33 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_34 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_35 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_236_237__i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_236_237__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt8_236_237_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_37 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_238_239__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_238_239__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U1/cnt40_238_239_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_38 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr2_241__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \U2/ptr2_241_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0008 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module U2_SLICE_39 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr1_240__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \U2/ptr1_240_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_40 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr1_240__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr1_240__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr1_240_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_41 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr1_240__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr1_240__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr1_240_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_42 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr1_240__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr1_240__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr1_240_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_43 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr2_241__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \U2/ptr2_241_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_44 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr1_240__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \U2/ptr1_240_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_45 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr2_241__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr2_241__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr2_241_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_46 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr2_241__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr2_241__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr2_241_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_47 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 \U2/ptr2_241__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/ptr2_241__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20003 \U2/ptr2_241_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_49 ( input D0, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut4 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \U2/i952_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 beep_68( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0010 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module U1_SLICE_50 ( input B1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40011 \U1/i987_2_lut_rep_12_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \U1/i1_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \U1/clk40hz_28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9C9C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_51 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40013 \U1/i983_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 \U1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \U1/clk8hz_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_52 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40015 \U2/i946_2_lut_rep_19 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 clk_music_I_0_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0010 clk_music_67( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_53 ( input D1, C1, B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40016 col_c_0_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 mode_num_I_0_1_lut_rep_20( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 mode_num_62( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_54 ( input B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40015 \U1/i2_2_lut_adj_8 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \U2/music_num_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0010 music_num_63( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_55 ( input B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40018 row_num_I_0_1_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 tmp_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0001 tmp_I_0_72( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_56 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40019 i316_2_lut_rep_17_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre tone1_i0_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre tone1_i0_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_57 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40014 i20_2_lut_rep_25( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 i318_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 tone1_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h85A5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_58 ( input D1, C1, B1, A1, B0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40022 n4_bdd_4_lut_996( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 tmp_I_1_2_lut_rep_24( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre tone1_i0_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2142) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_59 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 \U2/tone2_3__I_4_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \U2/tone2_3__I_4_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0001 \U2/tone2_3__I_0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0001 \U2/tone2_3__I_0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_60 ( input B1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40024 i267_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \U2/tone2_3__I_4_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0001 \U2/tone2_3__I_0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_61 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40025 \U2/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \U2/n1029_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0027 \U2/tone2_3__I_0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0408) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0027 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   Q_INT, D_INT, LSRB, L_IN;

  MUX41 INST10( .D0(Q_INT), .D1(Q_INT), .D2(D0), .D3(D1), .SD1(SD), .SD2(SP), 
    .Z(D_INT));
  INV INST20( .A(LSR), .Z(LSRB));
  AND2 INST30( .A(LSRB), .B(D_INT), .Z(L_IN));
  FD1S1A INST50( .D(L_IN), .CK(CK), .Q(Q_INT));
  defparam INST50.GSR = "DISABLED";
  BUFBA INST80( .A(Q_INT), .Z(Q));
endmodule

module i1013_SLICE_62 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1013/SLICE_62/i1013/SLICE_62_K1_H1 , \i1013/SLICE_62/i1013/GATE_H0 ;

  lut40028 \i1013/SLICE_62_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1013/SLICE_62/i1013/SLICE_62_K1_H1 ));
  lut40029 \i1013/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1013/SLICE_62/i1013/GATE_H0 ));
  selmux2 \i1013/SLICE_62_K0K1MUX ( .D0(\i1013/SLICE_62/i1013/GATE_H0 ), 
    .D1(\i1013/SLICE_62/i1013/SLICE_62_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0820) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module i1011_SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1011/SLICE_63/i1011/SLICE_63_K1_H1 , \i1011/SLICE_63/i1011/GATE_H0 ;

  lut40030 \i1011/SLICE_63_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1011/SLICE_63/i1011/SLICE_63_K1_H1 ));
  lut40031 \i1011/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1011/SLICE_63/i1011/GATE_H0 ));
  selmux2 \i1011/SLICE_63_K0K1MUX ( .D0(\i1011/SLICE_63/i1011/GATE_H0 ), 
    .D1(\i1011/SLICE_63/i1011/SLICE_63_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4662) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h342C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_64/SLICE_64_K1_H1 , \SLICE_64/mux_16_Mux_0_0_0_0_H0 ;

  lut40032 SLICE_64_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_64/SLICE_64_K1_H1 ));
  lut40033 mux_16_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_64/mux_16_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_64_K0K1MUX( .D0(\SLICE_64/mux_16_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_64/SLICE_64_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8018) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_65 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_65/SLICE_65_K1_H1 , \SLICE_65/mux_16_Mux_0_0_0_1_H0 ;

  lut40034 SLICE_65_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_65/SLICE_65_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 mux_16_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_65/mux_16_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_65_K0K1MUX( .D0(\SLICE_65/mux_16_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_65/SLICE_65_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_65_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_66/SLICE_66_K1_H1 , \SLICE_66/mux_16_Mux_0_0_1_0_H0 ;

  lut40036 SLICE_66_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_66/SLICE_66_K1_H1 ));
  lut40037 mux_16_Mux_0_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_66/mux_16_Mux_0_0_1_0_H0 ));
  selmux2 SLICE_66_K0K1MUX( .D0(\SLICE_66/mux_16_Mux_0_0_1_0_H0 ), 
    .D1(\SLICE_66/SLICE_66_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_66_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h96D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_67 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_67/SLICE_67_K1_H1 , \SLICE_67/mux_16_Mux_0_0_1_1_H0 ;

  lut40038 SLICE_67_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_67/SLICE_67_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 mux_16_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_67/mux_16_Mux_0_0_1_1_H0 ));
  selmux2 SLICE_67_K0K1MUX( .D0(\SLICE_67/mux_16_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_67/SLICE_67_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_67_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0280) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_68/SLICE_68_K1_H1 , \SLICE_68/mux_16_Mux_0_1_0_0_H0 ;

  lut40040 SLICE_68_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_68/SLICE_68_K1_H1 ));
  lut40041 mux_16_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_68/mux_16_Mux_0_1_0_0_H0 ));
  selmux2 SLICE_68_K0K1MUX( .D0(\SLICE_68/mux_16_Mux_0_1_0_0_H0 ), 
    .D1(\SLICE_68/SLICE_68_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_68_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h200E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_69 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_69/SLICE_69_K1_H1 , \SLICE_69/mux_16_Mux_0_1_0_1_H0 ;

  lut40034 SLICE_69_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_69/SLICE_69_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 mux_16_Mux_0_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_69/mux_16_Mux_0_1_0_1_H0 ));
  selmux2 SLICE_69_K0K1MUX( .D0(\SLICE_69/mux_16_Mux_0_1_0_1_H0 ), 
    .D1(\SLICE_69/SLICE_69_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_69_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_70/SLICE_70_K1_H1 , \SLICE_70/mux_16_Mux_0_1_1_0_H0 ;

  lut40043 SLICE_70_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_70/SLICE_70_K1_H1 ));
  lut40044 mux_16_Mux_0_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_70/mux_16_Mux_0_1_1_0_H0 ));
  selmux2 SLICE_70_K0K1MUX( .D0(\SLICE_70/mux_16_Mux_0_1_1_0_H0 ), 
    .D1(\SLICE_70/SLICE_70_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_70_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9682) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_71 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_71/SLICE_71_K1_H1 , \SLICE_71/mux_16_Mux_0_1_1_1_H0 ;

  lut40038 SLICE_71_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_71/SLICE_71_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40045 mux_16_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_71/mux_16_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_71_K0K1MUX( .D0(\SLICE_71/mux_16_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_71/SLICE_71_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_71_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_72/SLICE_72_K1_H1 , \SLICE_72/mux_15_Mux_0_0_0_0_H0 ;

  lut40046 SLICE_72_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_72/SLICE_72_K1_H1 ));
  lut40047 mux_15_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_72/mux_15_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_72_K0K1MUX( .D0(\SLICE_72/mux_15_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_72/SLICE_72_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5003) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h17C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_73/SLICE_73_K1_H1 , \SLICE_73/mux_15_Mux_0_0_0_1_H0 ;

  lut40047 SLICE_73_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_73/SLICE_73_K1_H1 ));
  lut40048 mux_15_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_73/mux_15_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_73_K0K1MUX( .D0(\SLICE_73/mux_15_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_73/SLICE_73_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_73_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h28A1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_74/SLICE_74_K1_H1 , \SLICE_74/mux_15_Mux_0_0_1_0_H0 ;

  lut40049 SLICE_74_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_74/SLICE_74_K1_H1 ));
  lut40050 mux_15_Mux_0_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_74/mux_15_Mux_0_0_1_0_H0 ));
  selmux2 SLICE_74_K0K1MUX( .D0(\SLICE_74/mux_15_Mux_0_0_1_0_H0 ), 
    .D1(\SLICE_74/SLICE_74_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_74_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h428F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_75/SLICE_75_K1_H1 , \SLICE_75/mux_15_Mux_0_0_1_1_H0 ;

  lut40051 SLICE_75_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_75/SLICE_75_K1_H1 ));
  lut40052 mux_15_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_75/mux_15_Mux_0_0_1_1_H0 ));
  selmux2 SLICE_75_K0K1MUX( .D0(\SLICE_75/mux_15_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_75/SLICE_75_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_75_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F14) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_76/SLICE_76_K1_H1 , \SLICE_76/mux_15_Mux_0_1_0_0_H0 ;

  lut40053 SLICE_76_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_76/SLICE_76_K1_H1 ));
  lut40054 mux_15_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_76/mux_15_Mux_0_1_0_0_H0 ));
  selmux2 SLICE_76_K0K1MUX( .D0(\SLICE_76/mux_15_Mux_0_1_0_0_H0 ), 
    .D1(\SLICE_76/SLICE_76_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_76_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_77/SLICE_77_K1_H1 , \SLICE_77/mux_15_Mux_0_1_0_1_H0 ;

  lut40055 SLICE_77_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_77/SLICE_77_K1_H1 ));
  lut40056 mux_15_Mux_0_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_77/mux_15_Mux_0_1_0_1_H0 ));
  selmux2 SLICE_77_K0K1MUX( .D0(\SLICE_77/mux_15_Mux_0_1_0_1_H0 ), 
    .D1(\SLICE_77/SLICE_77_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_77_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0AA1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_78/SLICE_78_K1_H1 , \SLICE_78/mux_15_Mux_0_1_1_0_H0 ;

  lut40057 SLICE_78_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_78/SLICE_78_K1_H1 ));
  lut40058 mux_15_Mux_0_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_78/mux_15_Mux_0_1_1_0_H0 ));
  selmux2 SLICE_78_K0K1MUX( .D0(\SLICE_78/mux_15_Mux_0_1_1_0_H0 ), 
    .D1(\SLICE_78/SLICE_78_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_78_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h02AD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40AB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_79/SLICE_79_K1_H1 , \SLICE_79/mux_15_Mux_0_1_1_1_H0 ;

  lut40059 SLICE_79_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_79/SLICE_79_K1_H1 ));
  lut40060 mux_15_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_79/mux_15_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_79_K0K1MUX( .D0(\SLICE_79/mux_15_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_79/SLICE_79_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_79_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_80 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SLICE_80/SLICE_80_K1_H1 , \SLICE_80/mux_15_Mux_1_0_0_0_H0 ;

  lut40061 SLICE_80_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_80/SLICE_80_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 mux_15_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_80/mux_15_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_80_K0K1MUX( .D0(\SLICE_80/mux_15_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_80/SLICE_80_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0028) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_81/SLICE_81_K1_H1 , \SLICE_81/mux_15_Mux_1_0_0_1_H0 ;

  lut40062 SLICE_81_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_81/SLICE_81_K1_H1 ));
  lut40063 mux_15_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_81/mux_15_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_81_K0K1MUX( .D0(\SLICE_81/mux_15_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_81/SLICE_81_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_81_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_82/SLICE_82_K1_H1 , \SLICE_82/mux_15_Mux_1_0_1_0_H0 ;

  lut40064 SLICE_82_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_82/SLICE_82_K1_H1 ));
  lut40065 mux_15_Mux_1_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_82/mux_15_Mux_1_0_1_0_H0 ));
  selmux2 SLICE_82_K0K1MUX( .D0(\SLICE_82/mux_15_Mux_1_0_1_0_H0 ), 
    .D1(\SLICE_82/SLICE_82_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_82_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1450) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_83/SLICE_83_K1_H1 , \SLICE_83/mux_15_Mux_1_0_1_1_H0 ;

  lut40065 SLICE_83_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_83/SLICE_83_K1_H1 ));
  lut40066 mux_15_Mux_1_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_83/mux_15_Mux_1_0_1_1_H0 ));
  selmux2 SLICE_83_K0K1MUX( .D0(\SLICE_83/mux_15_Mux_1_0_1_1_H0 ), 
    .D1(\SLICE_83/SLICE_83_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_83_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5516) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_84 ( input C1, B1, A1, D0, C0, B0, A0, M1, FXB, FXA, output OFX0, 
    F1, OFX1 );
  wire   GNDI, \SLICE_84/mux_15_Mux_1_1_0_0_H0 ;

  lut40067 \U2/i934_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 mux_15_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_84/mux_15_Mux_1_1_0_0_H0 ));
  selmux20069 SLICE_84_K0K1MUX( .D0(\SLICE_84/mux_15_Mux_1_1_0_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_84_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20069 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SLICE_85 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_85/SLICE_85_K1_H1 , \SLICE_85/mux_15_Mux_1_1_0_1_H0 ;

  lut40070 SLICE_85_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_85/SLICE_85_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40071 mux_15_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_85/mux_15_Mux_1_1_0_1_H0 ));
  selmux2 SLICE_85_K0K1MUX( .D0(\SLICE_85/mux_15_Mux_1_1_0_1_H0 ), 
    .D1(\SLICE_85/SLICE_85_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_85_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8AA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_86 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_86/SLICE_86_K1_H1 , GNDI, \SLICE_86/mux_15_Mux_1_1_1_0_H0 ;

  lut40072 SLICE_86_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_86/SLICE_86_K1_H1 ));
  lut40073 mux_15_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_86/mux_15_Mux_1_1_1_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_86_K0K1MUX( .D0(\SLICE_86/mux_15_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_86/SLICE_86_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_86_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3ED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1414) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_87 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_87/SLICE_87_K1_H1 , \SLICE_87/mux_15_Mux_1_1_1_1_H0 ;

  lut40073 SLICE_87_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_87/SLICE_87_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 mux_15_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_87/mux_15_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_87_K0K1MUX( .D0(\SLICE_87/mux_15_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_87/SLICE_87_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_87_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5156) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_88 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_88/SLICE_88_K1_H1 , \SLICE_88/mux_15_Mux_2_0_0_0_H0 ;

  lut40075 SLICE_88_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_88/SLICE_88_K1_H1 ));
  lut40076 mux_15_Mux_2_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_88/mux_15_Mux_2_0_0_0_H0 ));
  selmux2 SLICE_88_K0K1MUX( .D0(\SLICE_88/mux_15_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_88/SLICE_88_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F17) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_89/SLICE_89_K1_H1 , \SLICE_89/mux_15_Mux_2_0_0_1_H0 ;

  lut40076 SLICE_89_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_89/SLICE_89_K1_H1 ));
  lut40077 mux_15_Mux_2_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_89/mux_15_Mux_2_0_0_1_H0 ));
  selmux2 SLICE_89_K0K1MUX( .D0(\SLICE_89/mux_15_Mux_2_0_0_1_H0 ), 
    .D1(\SLICE_89/SLICE_89_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_89_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h450B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_90 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_90/SLICE_90_K1_H1 , \SLICE_90/mux_15_Mux_2_0_1_0_H0 ;

  lut40078 SLICE_90_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_90/SLICE_90_K1_H1 ));
  lut40079 mux_15_Mux_2_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_90/mux_15_Mux_2_0_1_0_H0 ));
  selmux2 SLICE_90_K0K1MUX( .D0(\SLICE_90/mux_15_Mux_2_0_1_0_H0 ), 
    .D1(\SLICE_90/SLICE_90_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_90_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7EDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_91 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_91/SLICE_91_K1_H1 , \SLICE_91/mux_15_Mux_2_0_1_1_H0 ;

  lut40080 SLICE_91_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_91/SLICE_91_K1_H1 ));
  lut40081 mux_15_Mux_2_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_91/mux_15_Mux_2_0_1_1_H0 ));
  selmux2 SLICE_91_K0K1MUX( .D0(\SLICE_91/mux_15_Mux_2_0_1_1_H0 ), 
    .D1(\SLICE_91/SLICE_91_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_91_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_92/SLICE_92_K1_H1 , \SLICE_92/mux_15_Mux_2_1_0_0_H0 ;

  lut40082 SLICE_92_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_92/SLICE_92_K1_H1 ));
  lut40036 mux_15_Mux_2_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_92/mux_15_Mux_2_1_0_0_H0 ));
  selmux2 SLICE_92_K0K1MUX( .D0(\SLICE_92/mux_15_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_92/SLICE_92_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_92_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB56) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_93 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_93/SLICE_93_K1_H1 , \SLICE_93/mux_15_Mux_2_1_0_1_H0 ;

  lut40036 SLICE_93_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_93/SLICE_93_K1_H1 ));
  lut40083 mux_15_Mux_2_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_93/mux_15_Mux_2_1_0_1_H0 ));
  selmux2 SLICE_93_K0K1MUX( .D0(\SLICE_93/mux_15_Mux_2_1_0_1_H0 ), 
    .D1(\SLICE_93/SLICE_93_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_93_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5503) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_94 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_94/SLICE_94_K1_H1 , \SLICE_94/mux_15_Mux_2_1_1_0_H0 ;

  lut40038 SLICE_94_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_94/SLICE_94_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 mux_15_Mux_2_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_94/mux_15_Mux_2_1_1_0_H0 ));
  selmux2 SLICE_94_K0K1MUX( .D0(\SLICE_94/mux_15_Mux_2_1_1_0_H0 ), 
    .D1(\SLICE_94/SLICE_94_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_94_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEDFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_95 ( input D1, C1, B1, A1, B0, A0, M1, M0, FXB, FXA, output OFX0, 
    OFX1 );
  wire   \SLICE_95/SLICE_95_K1_H1 , GNDI, \SLICE_95/mux_15_Mux_2_1_1_1_H0 ;

  lut40085 SLICE_95_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_95/SLICE_95_K1_H1 ));
  lut40086 mux_15_Mux_2_1_1_1( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_95/mux_15_Mux_2_1_1_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_95_K0K1MUX( .D0(\SLICE_95/mux_15_Mux_2_1_1_1_H0 ), 
    .D1(\SLICE_95/SLICE_95_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_95_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4551) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_96 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_96/SLICE_96_K1_H1 , \SLICE_96/mux_16_Mux_1_0_0_0_H0 ;

  lut40087 SLICE_96_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_96/SLICE_96_K1_H1 ));
  lut40088 mux_16_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_96/mux_16_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_96_K0K1MUX( .D0(\SLICE_96/mux_16_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_96/SLICE_96_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1840) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_97 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_97/SLICE_97_K1_H1 , \SLICE_97/mux_16_Mux_1_0_0_1_H0 ;

  lut40061 SLICE_97_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_97/SLICE_97_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 mux_16_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_97/mux_16_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_97_K0K1MUX( .D0(\SLICE_97/mux_16_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_97/SLICE_97_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_97_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7A0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_98 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_98/SLICE_98_K1_H1 , GNDI, \SLICE_98/mux_16_Mux_1_0_1_0_H0 ;

  lut40040 SLICE_98_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_98/SLICE_98_K1_H1 ));
  lut40090 mux_16_Mux_1_0_1_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_98/mux_16_Mux_1_0_1_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_98_K0K1MUX( .D0(\SLICE_98/mux_16_Mux_1_0_1_0_H0 ), 
    .D1(\SLICE_98/SLICE_98_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_98_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_99 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_99/SLICE_99_K1_H1 , \SLICE_99/mux_16_Mux_1_0_1_1_H0 ;

  lut40038 SLICE_99_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_99/SLICE_99_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 mux_16_Mux_1_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_99/mux_16_Mux_1_0_1_1_H0 ));
  selmux2 SLICE_99_K0K1MUX( .D0(\SLICE_99/mux_16_Mux_1_0_1_1_H0 ), 
    .D1(\SLICE_99/SLICE_99_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_99_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8105) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_100 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_100/SLICE_100_K1_H1 , \SLICE_100/mux_16_Mux_1_1_0_0_H0 ;

  lut40087 SLICE_100_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_100/SLICE_100_K1_H1 ));
  lut40092 mux_16_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_100/mux_16_Mux_1_1_0_0_H0 ));
  selmux2 SLICE_100_K0K1MUX( .D0(\SLICE_100/mux_16_Mux_1_1_0_0_H0 ), 
    .D1(\SLICE_100/SLICE_100_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_100_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5840) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_101 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_101/SLICE_101_K1_H1 , \SLICE_101/mux_16_Mux_1_1_0_1_H0 ;

  lut40093 SLICE_101_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_101/SLICE_101_K1_H1 ));
  lut40094 mux_16_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_101/mux_16_Mux_1_1_0_1_H0 ));
  selmux2 SLICE_101_K0K1MUX( .D0(\SLICE_101/mux_16_Mux_1_1_0_1_H0 ), 
    .D1(\SLICE_101/SLICE_101_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_101_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7C86) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_102 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_102/SLICE_102_K1_H1 , \SLICE_102/mux_16_Mux_1_1_1_0_H0 ;

  lut40040 SLICE_102_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_102/SLICE_102_K1_H1 ));
  lut40095 mux_16_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_102/mux_16_Mux_1_1_1_0_H0 ));
  selmux2 SLICE_102_K0K1MUX( .D0(\SLICE_102/mux_16_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_102/SLICE_102_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_102_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_103 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_103/SLICE_103_K1_H1 , \SLICE_103/mux_16_Mux_1_1_1_1_H0 ;

  lut40038 SLICE_103_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_103/SLICE_103_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 mux_16_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_103/mux_16_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_103_K0K1MUX( .D0(\SLICE_103/mux_16_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_103/SLICE_103_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_103_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2041) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_104 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_104/SLICE_104_K1_H1 , \SLICE_104/mux_16_Mux_2_0_0_0_H0 ;

  lut40097 SLICE_104_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_104/SLICE_104_K1_H1 ));
  lut40098 mux_16_Mux_2_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_104/mux_16_Mux_2_0_0_0_H0 ));
  selmux2 SLICE_104_K0K1MUX( .D0(\SLICE_104/mux_16_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_104/SLICE_104_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1551) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9AD9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_105/SLICE_105_K1_H1 , \SLICE_105/mux_16_Mux_2_0_0_1_H0 ;

  lut40099 SLICE_105_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_105/SLICE_105_K1_H1 ));
  lut40100 mux_16_Mux_2_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_105/mux_16_Mux_2_0_0_1_H0 ));
  selmux2 SLICE_105_K0K1MUX( .D0(\SLICE_105/mux_16_Mux_2_0_0_1_H0 ), 
    .D1(\SLICE_105/SLICE_105_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_105_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1145) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7B49) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_106 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_106/SLICE_106_K1_H1 , \SLICE_106/mux_16_Mux_2_0_1_0_H0 ;

  lut40101 SLICE_106_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_106/SLICE_106_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 mux_16_Mux_2_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_106/mux_16_Mux_2_0_1_0_H0 ));
  selmux2 SLICE_106_K0K1MUX( .D0(\SLICE_106/mux_16_Mux_2_0_1_0_H0 ), 
    .D1(\SLICE_106/SLICE_106_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_106_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4141) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_107 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_107/SLICE_107_K1_H1 , \SLICE_107/mux_16_Mux_2_0_1_1_H0 ;

  lut40103 SLICE_107_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_107/SLICE_107_K1_H1 ));
  lut40104 mux_16_Mux_2_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_107/mux_16_Mux_2_0_1_1_H0 ));
  selmux2 SLICE_107_K0K1MUX( .D0(\SLICE_107/mux_16_Mux_2_0_1_1_H0 ), 
    .D1(\SLICE_107/SLICE_107_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_107_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0014) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1E9D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_108 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_108/SLICE_108_K1_H1 , \SLICE_108/mux_16_Mux_2_1_0_0_H0 ;

  lut40105 SLICE_108_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_108/SLICE_108_K1_H1 ));
  lut40106 mux_16_Mux_2_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_108/mux_16_Mux_2_1_0_0_H0 ));
  selmux2 SLICE_108_K0K1MUX( .D0(\SLICE_108/mux_16_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_108/SLICE_108_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_108_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5545) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78ED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_109 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_109/SLICE_109_K1_H1 , \SLICE_109/mux_16_Mux_2_1_0_1_H0 ;

  lut40107 SLICE_109_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_109/SLICE_109_K1_H1 ));
  lut40108 mux_16_Mux_2_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_109/mux_16_Mux_2_1_0_1_H0 ));
  selmux2 SLICE_109_K0K1MUX( .D0(\SLICE_109/mux_16_Mux_2_1_0_1_H0 ), 
    .D1(\SLICE_109/SLICE_109_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_109_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_110 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_110/SLICE_110_K1_H1 , \SLICE_110/mux_16_Mux_2_1_1_0_H0 ;

  lut40109 SLICE_110_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_110/SLICE_110_K1_H1 ));
  lut40110 mux_16_Mux_2_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_110/mux_16_Mux_2_1_1_0_H0 ));
  selmux2 SLICE_110_K0K1MUX( .D0(\SLICE_110/mux_16_Mux_2_1_1_0_H0 ), 
    .D1(\SLICE_110/SLICE_110_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_110_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDECB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_111 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_111/SLICE_111_K1_H1 , \SLICE_111/mux_16_Mux_2_1_1_1_H0 ;

  lut40090 SLICE_111_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_111/SLICE_111_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 mux_16_Mux_2_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_111/mux_16_Mux_2_1_1_1_H0 ));
  selmux2 SLICE_111_K0K1MUX( .D0(\SLICE_111/mux_16_Mux_2_1_1_1_H0 ), 
    .D1(\SLICE_111/SLICE_111_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_111_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1CBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_112 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40112 i1_4_lut_adj_9( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40113 n1220_bdd_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF6F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_113 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40114 tone_3__I_0_Mux_3_i7_3_lut_4_lut_3_lut( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 tone_3__I_0_Mux_3_i15_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9E9E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_114 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40116 tone_3__I_0_Mux_7_i15_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40117 i488_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0606) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_115 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 tone1_3__I_0_71_i3_3_lut_rep_23( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 i966_2_lut_rep_13_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0035) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_116 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40119 tone_3__I_0_Mux_10_i7_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 tone_3__I_0_Mux_10_i15_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA6A6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_117 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 tone1_3__I_0_71_i2_3_lut_rep_22( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40120 tone_3__I_0_Mux_9_i15_3_lut_3_lut_3_lut( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3434) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_118 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 tone1_3__I_0_71_i1_3_lut_rep_21( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 tone_1__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3426) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_119 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40122 \U2/i974_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 i979_2_lut_rep_11( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_120 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 tone1_3__I_0_71_i4_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 i513_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h001E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_121 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40124 \U1/i9_4_lut_rep_14 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_122 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40009 \U1/i7_4_lut_adj_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 i3_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_123 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40122 i971_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i387_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_124 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40126 \U2/i988_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40127 i989_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40128 \U1/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40124 \U1/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_126 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \U1/i958_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \U1/i954_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_127 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40124 \U1/i10_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \U1/i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40129 tone_2__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40130 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2242) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40131 tone_3__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40132 tone_1__bdd_4_lut_1008( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1418) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h316A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40133 tone_1__bdd_4_lut_1010( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40134 tone_0__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1120) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0726) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_131 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 \U2/tone2_3__I_2_1_lut_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \U2/mn_former_I_3_2_lut_rep_18 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U2_SLICE_132 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40135 \U2/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \U2/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_133 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40136 \U2/i333_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40137 \U2/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_134 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40009 \U1/i6_4_lut_adj_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \U1/i2_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40124 \U1/i7_4_lut_adj_5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40124 \U1/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module beep ( input PADDO, output beep );
  wire   GNDI;

  xo2iobuf beep_pad( .I(PADDO), .T(GNDI), .PAD(beep));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => beep) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module col_2_ ( output PADDI, input col2 );

  xo2iobuf0138 col_pad_2( .Z(PADDI), .PAD(col2));

  specify
    (col2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col2, 0:0:0);
    $width (negedge col2, 0:0:0);
  endspecify

endmodule

module xo2iobuf0138 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module col_3_ ( output PADDI, input col3 );

  xo2iobuf0138 col_pad_3( .Z(PADDI), .PAD(col3));

  specify
    (col3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col3, 0:0:0);
    $width (negedge col3, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0138 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module mode ( output PADDI, input mode );

  xo2iobuf0138 mode_pad( .Z(PADDI), .PAD(mode));

  specify
    (mode => PADDI) = (0:0:0,0:0:0);
    $width (posedge mode, 0:0:0);
    $width (negedge mode, 0:0:0);
  endspecify

endmodule

module switch ( output PADDI, input switch );

  xo2iobuf0138 switch_pad( .Z(PADDI), .PAD(switch));

  specify
    (switch => PADDI) = (0:0:0,0:0:0);
    $width (posedge switch, 0:0:0);
    $width (negedge switch, 0:0:0);
  endspecify

endmodule

module row_0_ ( input PADDO, output row0 );
  wire   GNDI;

  xo2iobuf row_pad_0( .I(PADDO), .T(GNDI), .PAD(row0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row0) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_1_ ( input PADDO, output row1 );
  wire   GNDI;

  xo2iobuf row_pad_1( .I(PADDO), .T(GNDI), .PAD(row1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row1) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_2_ ( input PADDO, output row2 );
  wire   GNDI;

  xo2iobuf row_pad_2( .I(PADDO), .T(GNDI), .PAD(row2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row2) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_3_ ( input PADDO, output row3 );
  wire   GNDI;

  xo2iobuf row_pad_3( .I(PADDO), .T(GNDI), .PAD(row3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row3) = (0:0:0,0:0:0);
  endspecify

endmodule

module col_0_ ( output PADDI, input col0 );

  xo2iobuf0138 col_pad_0( .Z(PADDI), .PAD(col0));

  specify
    (col0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col0, 0:0:0);
    $width (negedge col0, 0:0:0);
  endspecify

endmodule

module col_1_ ( output PADDI, input col1 );

  xo2iobuf0138 col_pad_1( .Z(PADDI), .PAD(col1));

  specify
    (col1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col1, 0:0:0);
    $width (negedge col1, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
