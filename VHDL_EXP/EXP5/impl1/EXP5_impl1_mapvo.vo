
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.13.0.56.2

// ldbanno -n Verilog -o EXP5_impl1_mapvo.vo -w -neg -gui -msgset E:/DESKTOP/VHDL_EXP/EXP5/promote.xml EXP5_impl1_map.ncd 
// Netlist created on Wed Dec 11 18:19:55 2024
// Netlist written on Wed Dec 11 18:19:58 2024
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module piano ( switch, mode, clk, col, row, beep );
  input  switch, mode, clk;
  input  [3:0] col;
  output [3:0] row;
  output beep;
  wire   cnt_16, cnt_15, n89, n90, cnt_19__N_59, clk_c, n1022, n1023, cnt_14, 
         cnt_13, n91, n92, n1021, cnt_12, cnt_11, n93, n94, n1020, cnt_10, 
         cnt_9, n95, n96, n1019, cnt_8, cnt_7, n97, n98, n1018, cnt_6, cnt_5, 
         n99, n100, n1017, cnt_4, cnt_3, n101, n102, n1016, cnt_2, cnt_1, n103, 
         n104, n1015, cnt_0, n105, cnt_19, n86, n1024, cnt_18, cnt_17, n87, 
         n88, n969, pitch_0, pitch_1, pitch_2, pitch_3, n968, pitch_4, pitch_5, 
         pitch_6, pitch_7, n967, \U2/ptr3_8 , ptr3_7, \U2/n42 , \U2/n43 , 
         clk_c_enable_29, n661, \U2/n1013 , ptr3_6, ptr3_5, \U2/n44 , \U2/n45 , 
         \U2/n1012 , ptr3_4, ptr3_3, \U2/n46 , \U2/n47 , \U2/n1011 , ptr3_2, 
         ptr3_1, \U2/n48 , \U2/n49 , \U2/n1010 , ptr3_0, \U2/n50 , ptr2_7, 
         \U2/n38 , n670, \U2/n1009 , ptr2_6, ptr2_5, \U2/n39 , \U2/n40 , 
         \U2/n1008 , ptr2_4, ptr2_3, \U2/n41 , \U2/n42_adj_302 , \U2/n1007 , 
         ptr2_2, ptr2_1, \U2/n43_adj_304 , \U2/n44_adj_303 , \U2/n1006 , 
         ptr2_0, \U2/n45_adj_305 , ptr1_7, \U2/n38_adj_306 , \U2/n678 , 
         \U2/n1005 , ptr1_6, ptr1_5, \U2/n39_adj_308 , \U2/n40_adj_307 , 
         \U2/n1004 , ptr1_4, ptr1_3, \U2/n41_adj_310 , \U2/n42_adj_309 , 
         \U2/n1003 , ptr1_2, ptr1_1, \U2/n43_adj_313 , \U2/n44_adj_312 , 
         \U2/n1002 , ptr1_0, \U2/n45_adj_311 , pitch_8, pitch_9, pitch_10, 
         pitch_11, n966, pitch_12, pitch_13, n965, \U1/cnt8_0 , \U1/n165 , 
         n655, \U1/n970 , \U1/cnt8_31 , \U1/n134 , \U1/n985 , \U1/cnt40_31 , 
         \U1/n134_adj_265 , n676, \U1/n1001 , \U1/cnt40_30 , \U1/cnt40_29 , 
         \U1/n135 , \U1/n136 , \U1/n1000 , \U1/cnt40_28 , \U1/cnt40_27 , 
         \U1/n137 , \U1/n138 , \U1/n999 , \U1/cnt40_26 , \U1/cnt40_25 , 
         \U1/n139 , \U1/n140 , \U1/n998 , \U1/cnt40_24 , \U1/cnt40_23 , 
         \U1/n141 , \U1/n142 , \U1/n997 , \U1/cnt40_22 , \U1/cnt40_21 , 
         \U1/n143 , \U1/n144 , \U1/n996 , \U1/cnt40_20 , \U1/cnt40_19 , 
         \U1/n145 , \U1/n146 , \U1/n995 , \U1/cnt40_18 , \U1/cnt40_17 , 
         \U1/n147 , \U1/n148 , \U1/n994 , \U1/cnt40_16 , \U1/cnt40_15 , 
         \U1/n149 , \U1/n150 , \U1/n993 , \U1/cnt40_14 , \U1/cnt40_13 , 
         \U1/n151 , \U1/n152 , \U1/n992 , \U1/cnt40_12 , \U1/cnt40_11 , 
         \U1/n153 , \U1/n154 , \U1/n991 , \U1/cnt40_10 , \U1/cnt40_9 , 
         \U1/n155 , \U1/n156 , \U1/n990 , \U1/cnt40_8 , \U1/cnt40_7 , 
         \U1/n157 , \U1/n158 , \U1/n989 , \U1/cnt40_6 , \U1/cnt40_5 , 
         \U1/n159 , \U1/n160 , \U1/n988 , \U1/cnt40_4 , \U1/cnt40_3 , 
         \U1/n161 , \U1/n162 , \U1/n987 , \U1/cnt40_2 , \U1/cnt40_1 , 
         \U1/n163 , \U1/n164 , \U1/n986 , \U1/cnt40_0 , \U1/n165_adj_266 , 
         \U1/cnt8_30 , \U1/cnt8_29 , \U1/n135_adj_271 , \U1/n136_adj_272 , 
         \U1/n984 , \U1/cnt8_28 , \U1/cnt8_27 , \U1/n137_adj_273 , 
         \U1/n138_adj_274 , \U1/n983 , \U1/cnt8_26 , \U1/cnt8_25 , 
         \U1/n139_adj_275 , \U1/n140_adj_276 , \U1/n982 , \U1/cnt8_24 , 
         \U1/cnt8_23 , \U1/n141_adj_277 , \U1/n142_adj_278 , \U1/n981 , 
         \U1/cnt8_22 , \U1/cnt8_21 , \U1/n143_adj_279 , \U1/n144_adj_280 , 
         \U1/n980 , \U1/cnt8_20 , \U1/cnt8_19 , \U1/n145_adj_281 , 
         \U1/n146_adj_282 , \U1/n979 , \U1/cnt8_18 , \U1/cnt8_17 , 
         \U1/n147_adj_283 , \U1/n148_adj_284 , \U1/n978 , \U1/cnt8_16 , 
         \U1/cnt8_15 , \U1/n149_adj_285 , \U1/n150_adj_286 , \U1/n977 , 
         \U1/cnt8_14 , \U1/cnt8_13 , \U1/n151_adj_287 , \U1/n152_adj_288 , 
         \U1/n976 , \U1/cnt8_12 , \U1/cnt8_11 , \U1/n153_adj_289 , 
         \U1/n154_adj_290 , \U1/n975 , \U1/cnt8_10 , \U1/cnt8_9 , 
         \U1/n155_adj_291 , \U1/n156_adj_292 , \U1/n974 , \U1/cnt8_8 , 
         \U1/cnt8_7 , \U1/n157_adj_293 , \U1/n158_adj_294 , \U1/n973 , 
         \U1/cnt8_6 , \U1/cnt8_5 , \U1/n159_adj_296 , \U1/n160_adj_295 , 
         \U1/n972 , \U1/cnt8_4 , \U1/cnt8_3 , \U1/n161_adj_297 , 
         \U1/n162_adj_298 , \U1/n971 , \U1/cnt8_2 , \U1/cnt8_1 , 
         \U1/n163_adj_300 , \U1/n164_adj_299 , music_num_1, music_num_0, n283, 
         \music_num[1]_derived_2 , \U2/mn_former_0 , \U2/mn_former_1 , 
         clk_music, VCC_net, beep_c, \U1/n10 , \U1/n1256 , \U1/n1284 , clk40hz, 
         \U1/clk40hz_N_194 , clk8hz, \U1/clk8hz_N_193 , \U1/n1272 , 
         clk_music_N_60, \U1/n38_adj_269 , col_c_3, clk_c_enable_18, mode_num, 
         n1456, mode_c, n791, music_num_1_N_31_0, switch_c, \U1/n36 , \U1/n30 , 
         \U1/n41 , tmp, tmp_N_62, row_c_1, col_c_0, col_c_2, col_c_1, n567, 
         n1217, tone1_0, tone1_1, n1454, n1455, tone1_3_N_35_2, tone1_2, n4, 
         tone1_3, n656, n1365, tone2_3_N_254_0, tone2_3_N_258_0, 
         tone2_3_N_262_0, tone2_3_N_195_0, \U2/tone2_3__N_199 , tone2_0, 
         tone2_3_N_254_1, tone2_3_N_258_1, tone2_3_N_262_1, tone2_3_N_195_1, 
         tone2_1, tone2_3_N_254_2, tone2_3_N_258_2, tone2_3_N_262_2, 
         tone2_3_N_195_2, tone2_2, \U2/n1417 , \U2/n1111 , n574, tone2_3, 
         tone_2, tone_3, tone_0, \U2/n6 , mux_19_Mux_0_0_0_0_f5a, 
         mux_19_Mux_0_0_0_1_f5b, mux_19_Mux_0_0_0_f5a, mux_19_Mux_0_0_1_f5b, 
         mux_19_Mux_0_0_1_0_f5a, mux_19_Mux_0_0_f5a, mux_19_Mux_0_0_1_1_f5b, 
         mux_19_Mux_0_1_f5b, mux_19_Mux_0_1_0_0_f5a, mux_19_Mux_0_1_0_1_f5b, 
         mux_19_Mux_0_1_0_f5a, mux_19_Mux_0_1_1_f5b, mux_19_Mux_0_1_1_0_f5a, 
         mux_19_Mux_0_1_1_1_f5b, mux_20_Mux_0_0_0_0_f5a, 
         mux_20_Mux_0_0_0_1_f5b, mux_20_Mux_0_0_0_f5a, mux_20_Mux_0_0_1_f5b, 
         mux_20_Mux_0_0_1_0_f5a, mux_20_Mux_0_0_f5a, mux_20_Mux_0_0_1_1_f5b, 
         mux_20_Mux_0_1_f5b, mux_20_Mux_0_1_0_0_f5a, mux_20_Mux_0_1_0_1_f5b, 
         mux_20_Mux_0_1_0_f5a, mux_20_Mux_0_1_1_f5b, mux_20_Mux_0_1_1_0_f5a, 
         mux_20_Mux_0_1_1_1_f5b, mux_19_Mux_1_0_0_0_f5a, 
         mux_19_Mux_1_0_0_1_f5b, mux_19_Mux_1_0_0_f5a, mux_19_Mux_1_0_1_f5b, 
         mux_19_Mux_1_0_1_0_f5a, mux_19_Mux_1_0_f5a, mux_19_Mux_1_0_1_1_f5b, 
         mux_19_Mux_1_1_f5b, mux_19_Mux_1_1_0_0_f5a, \U2/n1278 , 
         mux_19_Mux_1_1_0_1_f5b, mux_19_Mux_1_1_0_f5a, mux_19_Mux_1_1_1_f5b, 
         mux_19_Mux_1_1_1_0_f5a, mux_19_Mux_1_1_1_1_f5b, 
         mux_21_Mux_1_0_0_0_f5a, mux_21_Mux_1_0_0_1_f5b, mux_21_Mux_1_0_0_f5a, 
         mux_21_Mux_1_0_1_f5b, mux_21_Mux_1_0_1_0_f5a, mux_21_Mux_1_0_f5a, 
         mux_21_Mux_1_0_1_1_f5b, mux_21_Mux_1_1_f5b, mux_21_Mux_1_1_0_0_f5a, 
         \U2/n1282 , mux_21_Mux_1_1_0_1_f5b, mux_21_Mux_1_1_0_f5a, 
         mux_21_Mux_1_1_1_f5b, mux_21_Mux_1_1_1_0_f5a, mux_21_Mux_1_1_1_1_f5b, 
         mux_21_Mux_0_0_0_0_f5a, mux_21_Mux_0_0_0_1_f5b, mux_21_Mux_0_0_0_f5a, 
         mux_21_Mux_0_0_1_f5b, mux_21_Mux_0_0_1_0_f5a, mux_21_Mux_0_0_f5a, 
         mux_21_Mux_0_0_1_1_f5b, mux_21_Mux_0_1_f5b, mux_21_Mux_0_1_0_0_f5a, 
         mux_21_Mux_0_1_0_1_f5b, mux_21_Mux_0_1_0_f5a, mux_21_Mux_0_1_1_f5b, 
         mux_21_Mux_0_1_1_0_f5a, mux_21_Mux_0_1_1_1_f5b, 
         mux_19_Mux_2_0_0_0_f5a, mux_19_Mux_2_0_0_1_f5b, mux_19_Mux_2_0_0_f5a, 
         mux_19_Mux_2_0_1_f5b, mux_19_Mux_2_0_1_0_f5a, mux_19_Mux_2_0_f5a, 
         mux_19_Mux_2_0_1_1_f5b, mux_19_Mux_2_1_f5b, mux_19_Mux_2_1_0_0_f5a, 
         mux_19_Mux_2_1_0_1_f5b, mux_19_Mux_2_1_0_f5a, mux_19_Mux_2_1_1_f5b, 
         mux_19_Mux_2_1_1_0_f5a, mux_19_Mux_2_1_1_1_f5b, 
         mux_20_Mux_1_0_0_0_f5a, mux_20_Mux_1_0_0_1_f5b, mux_20_Mux_1_0_0_f5a, 
         mux_20_Mux_1_0_1_f5b, mux_20_Mux_1_0_1_0_f5a, mux_20_Mux_1_0_f5a, 
         mux_20_Mux_1_0_1_1_f5b, mux_20_Mux_1_1_f5b, mux_20_Mux_1_1_0_0_f5a, 
         mux_20_Mux_1_1_0_1_f5b, mux_20_Mux_1_1_0_f5a, mux_20_Mux_1_1_1_f5b, 
         mux_20_Mux_1_1_1_0_f5a, mux_20_Mux_1_1_1_1_f5b, 
         mux_20_Mux_2_0_0_0_f5a, mux_20_Mux_2_0_0_1_f5b, mux_20_Mux_2_0_0_f5a, 
         mux_20_Mux_2_0_1_f5b, mux_20_Mux_2_0_1_0_f5a, mux_20_Mux_2_0_f5a, 
         mux_20_Mux_2_0_1_1_f5b, mux_20_Mux_2_1_f5b, mux_20_Mux_2_1_0_0_f5a, 
         mux_20_Mux_2_1_0_1_f5b, mux_20_Mux_2_1_0_f5a, mux_20_Mux_2_1_1_f5b, 
         mux_20_Mux_2_1_1_0_f5a, mux_20_Mux_2_1_1_1_f5b, 
         mux_21_Mux_2_0_0_0_f5a, mux_21_Mux_2_0_0_1_f5b, \U2/n1280 , 
         mux_21_Mux_2_0_0_f5a, mux_21_Mux_2_0_1_f5b, mux_21_Mux_2_0_1_0_f5a, 
         mux_21_Mux_2_0_f5a, mux_21_Mux_2_0_1_1_f5b, mux_21_Mux_2_1_f5b, 
         mux_21_Mux_2_1_0_0_f5a, mux_21_Mux_2_1_0_1_f5b, \U2/n15 , 
         mux_21_Mux_2_1_0_f5a, mux_21_Mux_2_1_1_f5b, mux_21_Mux_2_1_1_0_f5a, 
         mux_21_Mux_2_1_1_1_f5b, n1366, n1260, n1225, n1457, n7_adj_316, n1451, 
         n7, n14, \U1/n1228 , n1314, n1312, \U2/n1268 , \U2/n13 , \U1/n26 , 
         \U1/n38 , \U1/n44 , \U1/n25 , \U1/n46 , \U1/n40 , \U1/n28 , \U1/n42 , 
         \U1/n1276 , \U1/n1288 , \U1/n32 , \U1/n40_adj_268 , \U1/n44_adj_267 , 
         \U1/n31 , \U1/n24 , \U1/n42_adj_270 ;

  SLICE_0 SLICE_0( .A1(cnt_16), .A0(cnt_15), .DI1(n89), .DI0(n90), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1022), .F0(n90), .Q0(cnt_15), 
    .F1(n89), .Q1(cnt_16), .FCO(n1023));
  SLICE_1 SLICE_1( .A1(cnt_14), .A0(cnt_13), .DI1(n91), .DI0(n92), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1021), .F0(n92), .Q0(cnt_13), 
    .F1(n91), .Q1(cnt_14), .FCO(n1022));
  SLICE_2 SLICE_2( .A1(cnt_12), .A0(cnt_11), .DI1(n93), .DI0(n94), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1020), .F0(n94), .Q0(cnt_11), 
    .F1(n93), .Q1(cnt_12), .FCO(n1021));
  SLICE_3 SLICE_3( .A1(cnt_10), .A0(cnt_9), .DI1(n95), .DI0(n96), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1019), .F0(n96), .Q0(cnt_9), 
    .F1(n95), .Q1(cnt_10), .FCO(n1020));
  SLICE_4 SLICE_4( .A1(cnt_8), .A0(cnt_7), .DI1(n97), .DI0(n98), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1018), .F0(n98), .Q0(cnt_7), 
    .F1(n97), .Q1(cnt_8), .FCO(n1019));
  SLICE_5 SLICE_5( .A1(cnt_6), .A0(cnt_5), .DI1(n99), .DI0(n100), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1017), .F0(n100), .Q0(cnt_5), 
    .F1(n99), .Q1(cnt_6), .FCO(n1018));
  SLICE_6 SLICE_6( .A1(cnt_4), .A0(cnt_3), .DI1(n101), .DI0(n102), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1016), .F0(n102), .Q0(cnt_3), 
    .F1(n101), .Q1(cnt_4), .FCO(n1017));
  SLICE_7 SLICE_7( .A1(cnt_2), .A0(cnt_1), .DI1(n103), .DI0(n104), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1015), .F0(n104), .Q0(cnt_1), 
    .F1(n103), .Q1(cnt_2), .FCO(n1016));
  SLICE_8 SLICE_8( .A1(cnt_0), .DI1(n105), .LSR(cnt_19__N_59), .CLK(clk_c), 
    .F1(n105), .Q1(cnt_0), .FCO(n1015));
  SLICE_9 SLICE_9( .A0(cnt_19), .DI0(n86), .LSR(cnt_19__N_59), .CLK(clk_c), 
    .FCI(n1024), .F0(n86), .Q0(cnt_19));
  SLICE_10 SLICE_10( .A1(cnt_18), .A0(cnt_17), .DI1(n87), .DI0(n88), 
    .LSR(cnt_19__N_59), .CLK(clk_c), .FCI(n1023), .F0(n88), .Q0(cnt_17), 
    .F1(n87), .Q1(cnt_18), .FCO(n1024));
  SLICE_11 SLICE_11( .FCI(n969), .F0(cnt_19__N_59));
  SLICE_12 SLICE_12( .D1(pitch_0), .C1(cnt_0), .B1(pitch_1), .A1(cnt_1), 
    .D0(pitch_2), .C0(cnt_2), .B0(pitch_3), .A0(cnt_3), .FCI(n968), .FCO(n969));
  SLICE_13 SLICE_13( .D1(pitch_4), .C1(cnt_4), .B1(pitch_5), .A1(cnt_5), 
    .D0(pitch_6), .C0(cnt_6), .B0(pitch_7), .A0(cnt_7), .FCI(n967), .FCO(n968));
  U2_SLICE_14 \U2/SLICE_14 ( .A1(\U2/ptr3_8 ), .A0(ptr3_7), .DI1(\U2/n42 ), 
    .DI0(\U2/n43 ), .CE(clk_c_enable_29), .LSR(n661), .CLK(clk_c), 
    .FCI(\U2/n1013 ), .F0(\U2/n43 ), .Q0(ptr3_7), .F1(\U2/n42 ), 
    .Q1(\U2/ptr3_8 ));
  U2_SLICE_15 \U2/SLICE_15 ( .A1(ptr3_6), .A0(ptr3_5), .DI1(\U2/n44 ), 
    .DI0(\U2/n45 ), .CE(clk_c_enable_29), .LSR(n661), .CLK(clk_c), 
    .FCI(\U2/n1012 ), .F0(\U2/n45 ), .Q0(ptr3_5), .F1(\U2/n44 ), .Q1(ptr3_6), 
    .FCO(\U2/n1013 ));
  U2_SLICE_16 \U2/SLICE_16 ( .A1(ptr3_4), .A0(ptr3_3), .DI1(\U2/n46 ), 
    .DI0(\U2/n47 ), .CE(clk_c_enable_29), .LSR(n661), .CLK(clk_c), 
    .FCI(\U2/n1011 ), .F0(\U2/n47 ), .Q0(ptr3_3), .F1(\U2/n46 ), .Q1(ptr3_4), 
    .FCO(\U2/n1012 ));
  U2_SLICE_17 \U2/SLICE_17 ( .A1(ptr3_2), .A0(ptr3_1), .DI1(\U2/n48 ), 
    .DI0(\U2/n49 ), .CE(clk_c_enable_29), .LSR(n661), .CLK(clk_c), 
    .FCI(\U2/n1010 ), .F0(\U2/n49 ), .Q0(ptr3_1), .F1(\U2/n48 ), .Q1(ptr3_2), 
    .FCO(\U2/n1011 ));
  U2_SLICE_18 \U2/SLICE_18 ( .A1(ptr3_0), .DI1(\U2/n50 ), .CE(clk_c_enable_29), 
    .LSR(n661), .CLK(clk_c), .F1(\U2/n50 ), .Q1(ptr3_0), .FCO(\U2/n1010 ));
  U2_SLICE_19 \U2/SLICE_19 ( .A0(ptr2_7), .DI0(\U2/n38 ), .CE(clk_c_enable_29), 
    .LSR(n670), .CLK(clk_c), .FCI(\U2/n1009 ), .F0(\U2/n38 ), .Q0(ptr2_7));
  U2_SLICE_20 \U2/SLICE_20 ( .A1(ptr2_6), .A0(ptr2_5), .DI1(\U2/n39 ), 
    .DI0(\U2/n40 ), .CE(clk_c_enable_29), .LSR(n670), .CLK(clk_c), 
    .FCI(\U2/n1008 ), .F0(\U2/n40 ), .Q0(ptr2_5), .F1(\U2/n39 ), .Q1(ptr2_6), 
    .FCO(\U2/n1009 ));
  U2_SLICE_21 \U2/SLICE_21 ( .A1(ptr2_4), .A0(ptr2_3), .DI1(\U2/n41 ), 
    .DI0(\U2/n42_adj_302 ), .CE(clk_c_enable_29), .LSR(n670), .CLK(clk_c), 
    .FCI(\U2/n1007 ), .F0(\U2/n42_adj_302 ), .Q0(ptr2_3), .F1(\U2/n41 ), 
    .Q1(ptr2_4), .FCO(\U2/n1008 ));
  U2_SLICE_22 \U2/SLICE_22 ( .A1(ptr2_2), .A0(ptr2_1), .DI1(\U2/n43_adj_304 ), 
    .DI0(\U2/n44_adj_303 ), .CE(clk_c_enable_29), .LSR(n670), .CLK(clk_c), 
    .FCI(\U2/n1006 ), .F0(\U2/n44_adj_303 ), .Q0(ptr2_1), 
    .F1(\U2/n43_adj_304 ), .Q1(ptr2_2), .FCO(\U2/n1007 ));
  U2_SLICE_23 \U2/SLICE_23 ( .A1(ptr2_0), .DI1(\U2/n45_adj_305 ), 
    .CE(clk_c_enable_29), .LSR(n670), .CLK(clk_c), .F1(\U2/n45_adj_305 ), 
    .Q1(ptr2_0), .FCO(\U2/n1006 ));
  U2_SLICE_24 \U2/SLICE_24 ( .A0(ptr1_7), .DI0(\U2/n38_adj_306 ), 
    .CE(clk_c_enable_29), .LSR(\U2/n678 ), .CLK(clk_c), .FCI(\U2/n1005 ), 
    .F0(\U2/n38_adj_306 ), .Q0(ptr1_7));
  U2_SLICE_25 \U2/SLICE_25 ( .A1(ptr1_6), .A0(ptr1_5), .DI1(\U2/n39_adj_308 ), 
    .DI0(\U2/n40_adj_307 ), .CE(clk_c_enable_29), .LSR(\U2/n678 ), .CLK(clk_c), 
    .FCI(\U2/n1004 ), .F0(\U2/n40_adj_307 ), .Q0(ptr1_5), 
    .F1(\U2/n39_adj_308 ), .Q1(ptr1_6), .FCO(\U2/n1005 ));
  U2_SLICE_26 \U2/SLICE_26 ( .A1(ptr1_4), .A0(ptr1_3), .DI1(\U2/n41_adj_310 ), 
    .DI0(\U2/n42_adj_309 ), .CE(clk_c_enable_29), .LSR(\U2/n678 ), .CLK(clk_c), 
    .FCI(\U2/n1003 ), .F0(\U2/n42_adj_309 ), .Q0(ptr1_3), 
    .F1(\U2/n41_adj_310 ), .Q1(ptr1_4), .FCO(\U2/n1004 ));
  U2_SLICE_27 \U2/SLICE_27 ( .A1(ptr1_2), .A0(ptr1_1), .DI1(\U2/n43_adj_313 ), 
    .DI0(\U2/n44_adj_312 ), .CE(clk_c_enable_29), .LSR(\U2/n678 ), .CLK(clk_c), 
    .FCI(\U2/n1002 ), .F0(\U2/n44_adj_312 ), .Q0(ptr1_1), 
    .F1(\U2/n43_adj_313 ), .Q1(ptr1_2), .FCO(\U2/n1003 ));
  U2_SLICE_28 \U2/SLICE_28 ( .A1(ptr1_0), .DI1(\U2/n45_adj_311 ), 
    .CE(clk_c_enable_29), .LSR(\U2/n678 ), .CLK(clk_c), .F1(\U2/n45_adj_311 ), 
    .Q1(ptr1_0), .FCO(\U2/n1002 ));
  SLICE_29 SLICE_29( .D1(pitch_8), .C1(cnt_8), .B1(pitch_9), .A1(cnt_9), 
    .D0(pitch_10), .C0(cnt_10), .B0(pitch_11), .A0(cnt_11), .FCI(n966), 
    .FCO(n967));
  SLICE_30 SLICE_30( .D1(pitch_12), .C1(cnt_12), .B1(pitch_13), .A1(cnt_13), 
    .D0(cnt_14), .C0(cnt_15), .B0(cnt_16), .A0(cnt_17), .FCI(n965), .FCO(n966));
  SLICE_31 SLICE_31( .B1(cnt_18), .A1(cnt_19), .FCO(n965));
  U1_SLICE_32 \U1/SLICE_32 ( .A1(\U1/cnt8_0 ), .DI1(\U1/n165 ), .LSR(n655), 
    .CLK(clk_c), .F1(\U1/n165 ), .Q1(\U1/cnt8_0 ), .FCO(\U1/n970 ));
  U1_SLICE_33 \U1/SLICE_33 ( .A0(\U1/cnt8_31 ), .DI0(\U1/n134 ), .LSR(n655), 
    .CLK(clk_c), .FCI(\U1/n985 ), .F0(\U1/n134 ), .Q0(\U1/cnt8_31 ));
  U1_SLICE_34 \U1/SLICE_34 ( .A0(\U1/cnt40_31 ), .DI0(\U1/n134_adj_265 ), 
    .LSR(n676), .CLK(clk_c), .FCI(\U1/n1001 ), .F0(\U1/n134_adj_265 ), 
    .Q0(\U1/cnt40_31 ));
  U1_SLICE_35 \U1/SLICE_35 ( .A1(\U1/cnt40_30 ), .A0(\U1/cnt40_29 ), 
    .DI1(\U1/n135 ), .DI0(\U1/n136 ), .LSR(n676), .CLK(clk_c), 
    .FCI(\U1/n1000 ), .F0(\U1/n136 ), .Q0(\U1/cnt40_29 ), .F1(\U1/n135 ), 
    .Q1(\U1/cnt40_30 ), .FCO(\U1/n1001 ));
  U1_SLICE_36 \U1/SLICE_36 ( .A1(\U1/cnt40_28 ), .A0(\U1/cnt40_27 ), 
    .DI1(\U1/n137 ), .DI0(\U1/n138 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n999 ), 
    .F0(\U1/n138 ), .Q0(\U1/cnt40_27 ), .F1(\U1/n137 ), .Q1(\U1/cnt40_28 ), 
    .FCO(\U1/n1000 ));
  U1_SLICE_37 \U1/SLICE_37 ( .A1(\U1/cnt40_26 ), .A0(\U1/cnt40_25 ), 
    .DI1(\U1/n139 ), .DI0(\U1/n140 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n998 ), 
    .F0(\U1/n140 ), .Q0(\U1/cnt40_25 ), .F1(\U1/n139 ), .Q1(\U1/cnt40_26 ), 
    .FCO(\U1/n999 ));
  U1_SLICE_38 \U1/SLICE_38 ( .A1(\U1/cnt40_24 ), .A0(\U1/cnt40_23 ), 
    .DI1(\U1/n141 ), .DI0(\U1/n142 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n997 ), 
    .F0(\U1/n142 ), .Q0(\U1/cnt40_23 ), .F1(\U1/n141 ), .Q1(\U1/cnt40_24 ), 
    .FCO(\U1/n998 ));
  U1_SLICE_39 \U1/SLICE_39 ( .A1(\U1/cnt40_22 ), .A0(\U1/cnt40_21 ), 
    .DI1(\U1/n143 ), .DI0(\U1/n144 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n996 ), 
    .F0(\U1/n144 ), .Q0(\U1/cnt40_21 ), .F1(\U1/n143 ), .Q1(\U1/cnt40_22 ), 
    .FCO(\U1/n997 ));
  U1_SLICE_40 \U1/SLICE_40 ( .A1(\U1/cnt40_20 ), .A0(\U1/cnt40_19 ), 
    .DI1(\U1/n145 ), .DI0(\U1/n146 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n995 ), 
    .F0(\U1/n146 ), .Q0(\U1/cnt40_19 ), .F1(\U1/n145 ), .Q1(\U1/cnt40_20 ), 
    .FCO(\U1/n996 ));
  U1_SLICE_41 \U1/SLICE_41 ( .A1(\U1/cnt40_18 ), .A0(\U1/cnt40_17 ), 
    .DI1(\U1/n147 ), .DI0(\U1/n148 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n994 ), 
    .F0(\U1/n148 ), .Q0(\U1/cnt40_17 ), .F1(\U1/n147 ), .Q1(\U1/cnt40_18 ), 
    .FCO(\U1/n995 ));
  U1_SLICE_42 \U1/SLICE_42 ( .A1(\U1/cnt40_16 ), .A0(\U1/cnt40_15 ), 
    .DI1(\U1/n149 ), .DI0(\U1/n150 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n993 ), 
    .F0(\U1/n150 ), .Q0(\U1/cnt40_15 ), .F1(\U1/n149 ), .Q1(\U1/cnt40_16 ), 
    .FCO(\U1/n994 ));
  U1_SLICE_43 \U1/SLICE_43 ( .A1(\U1/cnt40_14 ), .A0(\U1/cnt40_13 ), 
    .DI1(\U1/n151 ), .DI0(\U1/n152 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n992 ), 
    .F0(\U1/n152 ), .Q0(\U1/cnt40_13 ), .F1(\U1/n151 ), .Q1(\U1/cnt40_14 ), 
    .FCO(\U1/n993 ));
  U1_SLICE_44 \U1/SLICE_44 ( .A1(\U1/cnt40_12 ), .A0(\U1/cnt40_11 ), 
    .DI1(\U1/n153 ), .DI0(\U1/n154 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n991 ), 
    .F0(\U1/n154 ), .Q0(\U1/cnt40_11 ), .F1(\U1/n153 ), .Q1(\U1/cnt40_12 ), 
    .FCO(\U1/n992 ));
  U1_SLICE_45 \U1/SLICE_45 ( .A1(\U1/cnt40_10 ), .A0(\U1/cnt40_9 ), 
    .DI1(\U1/n155 ), .DI0(\U1/n156 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n990 ), 
    .F0(\U1/n156 ), .Q0(\U1/cnt40_9 ), .F1(\U1/n155 ), .Q1(\U1/cnt40_10 ), 
    .FCO(\U1/n991 ));
  U1_SLICE_46 \U1/SLICE_46 ( .A1(\U1/cnt40_8 ), .A0(\U1/cnt40_7 ), 
    .DI1(\U1/n157 ), .DI0(\U1/n158 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n989 ), 
    .F0(\U1/n158 ), .Q0(\U1/cnt40_7 ), .F1(\U1/n157 ), .Q1(\U1/cnt40_8 ), 
    .FCO(\U1/n990 ));
  U1_SLICE_47 \U1/SLICE_47 ( .A1(\U1/cnt40_6 ), .A0(\U1/cnt40_5 ), 
    .DI1(\U1/n159 ), .DI0(\U1/n160 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n988 ), 
    .F0(\U1/n160 ), .Q0(\U1/cnt40_5 ), .F1(\U1/n159 ), .Q1(\U1/cnt40_6 ), 
    .FCO(\U1/n989 ));
  U1_SLICE_48 \U1/SLICE_48 ( .A1(\U1/cnt40_4 ), .A0(\U1/cnt40_3 ), 
    .DI1(\U1/n161 ), .DI0(\U1/n162 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n987 ), 
    .F0(\U1/n162 ), .Q0(\U1/cnt40_3 ), .F1(\U1/n161 ), .Q1(\U1/cnt40_4 ), 
    .FCO(\U1/n988 ));
  U1_SLICE_49 \U1/SLICE_49 ( .A1(\U1/cnt40_2 ), .A0(\U1/cnt40_1 ), 
    .DI1(\U1/n163 ), .DI0(\U1/n164 ), .LSR(n676), .CLK(clk_c), .FCI(\U1/n986 ), 
    .F0(\U1/n164 ), .Q0(\U1/cnt40_1 ), .F1(\U1/n163 ), .Q1(\U1/cnt40_2 ), 
    .FCO(\U1/n987 ));
  U1_SLICE_50 \U1/SLICE_50 ( .A1(\U1/cnt40_0 ), .DI1(\U1/n165_adj_266 ), 
    .LSR(n676), .CLK(clk_c), .F1(\U1/n165_adj_266 ), .Q1(\U1/cnt40_0 ), 
    .FCO(\U1/n986 ));
  U1_SLICE_51 \U1/SLICE_51 ( .A1(\U1/cnt8_30 ), .A0(\U1/cnt8_29 ), 
    .DI1(\U1/n135_adj_271 ), .DI0(\U1/n136_adj_272 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n984 ), .F0(\U1/n136_adj_272 ), .Q0(\U1/cnt8_29 ), 
    .F1(\U1/n135_adj_271 ), .Q1(\U1/cnt8_30 ), .FCO(\U1/n985 ));
  U1_SLICE_52 \U1/SLICE_52 ( .A1(\U1/cnt8_28 ), .A0(\U1/cnt8_27 ), 
    .DI1(\U1/n137_adj_273 ), .DI0(\U1/n138_adj_274 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n983 ), .F0(\U1/n138_adj_274 ), .Q0(\U1/cnt8_27 ), 
    .F1(\U1/n137_adj_273 ), .Q1(\U1/cnt8_28 ), .FCO(\U1/n984 ));
  U1_SLICE_53 \U1/SLICE_53 ( .A1(\U1/cnt8_26 ), .A0(\U1/cnt8_25 ), 
    .DI1(\U1/n139_adj_275 ), .DI0(\U1/n140_adj_276 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n982 ), .F0(\U1/n140_adj_276 ), .Q0(\U1/cnt8_25 ), 
    .F1(\U1/n139_adj_275 ), .Q1(\U1/cnt8_26 ), .FCO(\U1/n983 ));
  U1_SLICE_54 \U1/SLICE_54 ( .A1(\U1/cnt8_24 ), .A0(\U1/cnt8_23 ), 
    .DI1(\U1/n141_adj_277 ), .DI0(\U1/n142_adj_278 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n981 ), .F0(\U1/n142_adj_278 ), .Q0(\U1/cnt8_23 ), 
    .F1(\U1/n141_adj_277 ), .Q1(\U1/cnt8_24 ), .FCO(\U1/n982 ));
  U1_SLICE_55 \U1/SLICE_55 ( .A1(\U1/cnt8_22 ), .A0(\U1/cnt8_21 ), 
    .DI1(\U1/n143_adj_279 ), .DI0(\U1/n144_adj_280 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n980 ), .F0(\U1/n144_adj_280 ), .Q0(\U1/cnt8_21 ), 
    .F1(\U1/n143_adj_279 ), .Q1(\U1/cnt8_22 ), .FCO(\U1/n981 ));
  U1_SLICE_56 \U1/SLICE_56 ( .A1(\U1/cnt8_20 ), .A0(\U1/cnt8_19 ), 
    .DI1(\U1/n145_adj_281 ), .DI0(\U1/n146_adj_282 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n979 ), .F0(\U1/n146_adj_282 ), .Q0(\U1/cnt8_19 ), 
    .F1(\U1/n145_adj_281 ), .Q1(\U1/cnt8_20 ), .FCO(\U1/n980 ));
  U1_SLICE_57 \U1/SLICE_57 ( .A1(\U1/cnt8_18 ), .A0(\U1/cnt8_17 ), 
    .DI1(\U1/n147_adj_283 ), .DI0(\U1/n148_adj_284 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n978 ), .F0(\U1/n148_adj_284 ), .Q0(\U1/cnt8_17 ), 
    .F1(\U1/n147_adj_283 ), .Q1(\U1/cnt8_18 ), .FCO(\U1/n979 ));
  U1_SLICE_58 \U1/SLICE_58 ( .A1(\U1/cnt8_16 ), .A0(\U1/cnt8_15 ), 
    .DI1(\U1/n149_adj_285 ), .DI0(\U1/n150_adj_286 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n977 ), .F0(\U1/n150_adj_286 ), .Q0(\U1/cnt8_15 ), 
    .F1(\U1/n149_adj_285 ), .Q1(\U1/cnt8_16 ), .FCO(\U1/n978 ));
  U1_SLICE_59 \U1/SLICE_59 ( .A1(\U1/cnt8_14 ), .A0(\U1/cnt8_13 ), 
    .DI1(\U1/n151_adj_287 ), .DI0(\U1/n152_adj_288 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n976 ), .F0(\U1/n152_adj_288 ), .Q0(\U1/cnt8_13 ), 
    .F1(\U1/n151_adj_287 ), .Q1(\U1/cnt8_14 ), .FCO(\U1/n977 ));
  U1_SLICE_60 \U1/SLICE_60 ( .A1(\U1/cnt8_12 ), .A0(\U1/cnt8_11 ), 
    .DI1(\U1/n153_adj_289 ), .DI0(\U1/n154_adj_290 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n975 ), .F0(\U1/n154_adj_290 ), .Q0(\U1/cnt8_11 ), 
    .F1(\U1/n153_adj_289 ), .Q1(\U1/cnt8_12 ), .FCO(\U1/n976 ));
  U1_SLICE_61 \U1/SLICE_61 ( .A1(\U1/cnt8_10 ), .A0(\U1/cnt8_9 ), 
    .DI1(\U1/n155_adj_291 ), .DI0(\U1/n156_adj_292 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n974 ), .F0(\U1/n156_adj_292 ), .Q0(\U1/cnt8_9 ), 
    .F1(\U1/n155_adj_291 ), .Q1(\U1/cnt8_10 ), .FCO(\U1/n975 ));
  U1_SLICE_62 \U1/SLICE_62 ( .A1(\U1/cnt8_8 ), .A0(\U1/cnt8_7 ), 
    .DI1(\U1/n157_adj_293 ), .DI0(\U1/n158_adj_294 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n973 ), .F0(\U1/n158_adj_294 ), .Q0(\U1/cnt8_7 ), 
    .F1(\U1/n157_adj_293 ), .Q1(\U1/cnt8_8 ), .FCO(\U1/n974 ));
  U1_SLICE_63 \U1/SLICE_63 ( .A1(\U1/cnt8_6 ), .A0(\U1/cnt8_5 ), 
    .DI1(\U1/n159_adj_296 ), .DI0(\U1/n160_adj_295 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n972 ), .F0(\U1/n160_adj_295 ), .Q0(\U1/cnt8_5 ), 
    .F1(\U1/n159_adj_296 ), .Q1(\U1/cnt8_6 ), .FCO(\U1/n973 ));
  U1_SLICE_64 \U1/SLICE_64 ( .A1(\U1/cnt8_4 ), .A0(\U1/cnt8_3 ), 
    .DI1(\U1/n161_adj_297 ), .DI0(\U1/n162_adj_298 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n971 ), .F0(\U1/n162_adj_298 ), .Q0(\U1/cnt8_3 ), 
    .F1(\U1/n161_adj_297 ), .Q1(\U1/cnt8_4 ), .FCO(\U1/n972 ));
  U1_SLICE_65 \U1/SLICE_65 ( .A1(\U1/cnt8_2 ), .A0(\U1/cnt8_1 ), 
    .DI1(\U1/n163_adj_300 ), .DI0(\U1/n164_adj_299 ), .LSR(n655), .CLK(clk_c), 
    .FCI(\U1/n970 ), .F0(\U1/n164_adj_299 ), .Q0(\U1/cnt8_1 ), 
    .F1(\U1/n163_adj_300 ), .Q1(\U1/cnt8_2 ), .FCO(\U1/n971 ));
  SLICE_66 SLICE_66( .B0(music_num_1), .A0(music_num_0), .DI0(n283), 
    .M1(music_num_1), .CLK(\music_num[1]_derived_2 ), .F0(n283), 
    .Q0(\U2/mn_former_0 ), .Q1(\U2/mn_former_1 ));
  SLICE_67 SLICE_67( .M0(clk_music), .CLK(clk_c), .F0(VCC_net), .Q0(beep_c));
  U1_SLICE_68 \U1/SLICE_68 ( .D1(\U1/n10 ), .C1(\U1/cnt40_7 ), .B1(\U1/n1256 ), 
    .A1(\U1/n1284 ), .B0(n676), .A0(clk40hz), .DI0(\U1/clk40hz_N_194 ), 
    .CLK(clk_c), .F0(\U1/clk40hz_N_194 ), .Q0(clk40hz), .F1(n676));
  U1_SLICE_69 \U1/SLICE_69 ( .B1(\U1/cnt8_13 ), .A1(\U1/cnt8_4 ), .B0(n655), 
    .A0(clk8hz), .DI0(\U1/clk8hz_N_193 ), .CLK(clk_c), .F0(\U1/clk8hz_N_193 ), 
    .Q0(clk8hz), .F1(\U1/n1272 ));
  SLICE_70 SLICE_70( .D1(\U1/cnt8_22 ), .C1(\U1/cnt8_27 ), .B1(\U1/cnt8_30 ), 
    .A1(\U1/cnt8_1 ), .B0(cnt_19__N_59), .A0(clk_music), .DI0(clk_music_N_60), 
    .CLK(clk_c), .F0(clk_music_N_60), .Q0(clk_music), .F1(\U1/n38_adj_269 ));
  SLICE_71 SLICE_71( .B1(col_c_3), .A1(clk_c_enable_18), .A0(mode_num), 
    .DI0(n1456), .CLK(mode_c), .F0(n1456), .Q0(mode_num), .F1(n791));
  SLICE_72 SLICE_72( .D1(\U1/cnt8_21 ), .C1(\U1/cnt8_2 ), .B1(\U1/cnt8_11 ), 
    .A1(\U1/cnt8_18 ), .A0(music_num_1), .DI0(music_num_1_N_31_0), 
    .CLK(switch_c), .F0(music_num_1_N_31_0), .Q0(music_num_0), .F1(\U1/n36 ));
  SLICE_73 SLICE_73( .D1(\U1/cnt40_21 ), .C1(\U1/cnt40_0 ), .B1(\U1/cnt40_19 ), 
    .A1(\U1/cnt40_20 ), .B0(\U1/cnt40_22 ), .A0(\U1/cnt40_23 ), 
    .M0(music_num_0), .LSR(music_num_1), .CLK(switch_c), .F0(\U1/n30 ), 
    .Q0(music_num_1), .F1(\U1/n41 ));
  SLICE_74 SLICE_74( .B1(clk40hz), .A1(tmp), .A0(tmp), .DI0(tmp_N_62), 
    .CLK(clk40hz), .F0(tmp_N_62), .Q0(tmp), .F1(row_c_1));
  SLICE_75 SLICE_75( .C1(col_c_0), .B1(col_c_2), .A1(col_c_1), .C0(col_c_2), 
    .B0(col_c_1), .A0(col_c_0), .DI1(n567), .DI0(n1217), .CE(clk_c_enable_18), 
    .LSR(n791), .CLK(clk_c), .F0(n1217), .Q0(tone1_0), .F1(n567), .Q1(tone1_1));
  SLICE_76 SLICE_76( .B1(col_c_2), .A1(col_c_1), .D0(col_c_0), .C0(col_c_3), 
    .B0(n1454), .A0(n1455), .DI0(tone1_3_N_35_2), .CE(clk_c_enable_18), 
    .CLK(clk_c), .F0(tone1_3_N_35_2), .Q0(tone1_2), .F1(n1454));
  SLICE_77 SLICE_77( .D1(n4), .C1(n1455), .B1(tone1_2), .A1(tone1_3), 
    .B0(clk40hz), .A0(tmp), .DI0(n1455), .CE(clk_c_enable_18), .LSR(n656), 
    .CLK(clk_c), .F0(n1455), .Q0(tone1_3), .F1(n1365));
  SLICE_78 SLICE_78( .B1(tone2_3_N_254_0), .A1(music_num_0), .C0(music_num_0), 
    .B0(tone2_3_N_258_0), .A0(tone2_3_N_262_0), .DI0(tone2_3_N_195_0), 
    .M0(music_num_1), .CLK(\U2/tone2_3__N_199 ), .OFX0(tone2_3_N_195_0), 
    .Q0(tone2_0));
  SLICE_79 SLICE_79( .B1(tone2_3_N_254_1), .A1(music_num_0), .C0(music_num_0), 
    .B0(tone2_3_N_258_1), .A0(tone2_3_N_262_1), .DI0(tone2_3_N_195_1), 
    .M0(music_num_1), .CLK(\U2/tone2_3__N_199 ), .OFX0(tone2_3_N_195_1), 
    .Q0(tone2_1));
  SLICE_80 SLICE_80( .B1(tone2_3_N_254_2), .A1(music_num_0), .C0(music_num_0), 
    .B0(tone2_3_N_258_2), .A0(tone2_3_N_262_2), .DI0(tone2_3_N_195_2), 
    .M0(music_num_1), .CLK(\U2/tone2_3__N_199 ), .OFX0(tone2_3_N_195_2), 
    .Q0(tone2_2));
  SLICE_81 SLICE_81( .D1(ptr3_4), .C1(ptr3_3), .B1(ptr3_6), .A1(\U2/n1417 ), 
    .C0(ptr2_7), .B0(\U2/n1111 ), .A0(ptr2_4), .DI0(n574), .M0(music_num_1), 
    .LSR(music_num_0), .CLK(\U2/tone2_3__N_199 ), .OFX0(n574), .Q0(tone2_3));
  i1092_SLICE_82 \i1092/SLICE_82 ( .D1(tone1_1), .C1(tone_2), .B1(tone_3), 
    .A1(tone_0), .D0(tone_2), .C0(tone_3), .B0(tone2_1), .A0(tone_0), 
    .M0(mode_num), .OFX0(pitch_4));
  i1090_SLICE_83 \i1090/SLICE_83 ( .D1(tone1_1), .C1(tone_0), .B1(tone_2), 
    .A1(tone_3), .D0(tone_0), .C0(tone_2), .B0(tone_3), .A0(tone2_1), 
    .M0(mode_num), .OFX0(pitch_12));
  U2_i1086_SLICE_84 \U2/i1086/SLICE_84 ( .A1(ptr3_2), .D0(ptr3_5), .C0(ptr3_7), 
    .B0(ptr3_2), .A0(ptr3_0), .M0(ptr3_1), .OFX0(\U2/n1417 ));
  U2_i842_SLICE_85 \U2/i842/SLICE_85 ( .D1(ptr2_5), .C1(ptr2_3), .B1(ptr2_1), 
    .A1(ptr2_2), .D0(ptr2_1), .C0(ptr2_2), .B0(\U2/n6 ), .A0(ptr2_0), 
    .M0(ptr2_6), .OFX0(\U2/n1111 ));
  SLICE_86 SLICE_86( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_19_Mux_0_0_0_0_f5a));
  SLICE_87 SLICE_87( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_0_0_1_f5b), .FXA(mux_19_Mux_0_0_0_0_f5a), 
    .OFX0(mux_19_Mux_0_0_0_1_f5b), .OFX1(mux_19_Mux_0_0_0_f5a));
  SLICE_88 SLICE_88( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_0_1_f5b), .FXA(mux_19_Mux_0_0_0_f5a), 
    .OFX0(mux_19_Mux_0_0_1_0_f5a), .OFX1(mux_19_Mux_0_0_f5a));
  SLICE_89 SLICE_89( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_0_1_1_f5b), .FXA(mux_19_Mux_0_0_1_0_f5a), 
    .OFX0(mux_19_Mux_0_0_1_1_f5b), .OFX1(mux_19_Mux_0_0_1_f5b));
  SLICE_90 SLICE_90( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_0), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_1_f5b), .FXA(mux_19_Mux_0_0_f5a), 
    .OFX0(mux_19_Mux_0_1_0_0_f5a), .OFX1(tone2_3_N_262_0));
  SLICE_91 SLICE_91( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_1_0_1_f5b), .FXA(mux_19_Mux_0_1_0_0_f5a), 
    .OFX0(mux_19_Mux_0_1_0_1_f5b), .OFX1(mux_19_Mux_0_1_0_f5a));
  SLICE_92 SLICE_92( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_1_1_f5b), .FXA(mux_19_Mux_0_1_0_f5a), 
    .OFX0(mux_19_Mux_0_1_1_0_f5a), .OFX1(mux_19_Mux_0_1_f5b));
  SLICE_93 SLICE_93( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_0_1_1_1_f5b), .FXA(mux_19_Mux_0_1_1_0_f5a), 
    .OFX0(mux_19_Mux_0_1_1_1_f5b), .OFX1(mux_19_Mux_0_1_1_f5b));
  SLICE_94 SLICE_94( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_20_Mux_0_0_0_0_f5a));
  SLICE_95 SLICE_95( .C1(ptr2_3), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_20_Mux_0_0_0_1_f5b), .FXA(mux_20_Mux_0_0_0_0_f5a), 
    .OFX0(mux_20_Mux_0_0_0_1_f5b), .OFX1(mux_20_Mux_0_0_0_f5a));
  SLICE_96 SLICE_96( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_20_Mux_0_0_1_f5b), .FXA(mux_20_Mux_0_0_0_f5a), 
    .OFX0(mux_20_Mux_0_0_1_0_f5a), .OFX1(mux_20_Mux_0_0_f5a));
  SLICE_97 SLICE_97( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_20_Mux_0_0_1_1_f5b), 
    .FXA(mux_20_Mux_0_0_1_0_f5a), .OFX0(mux_20_Mux_0_0_1_1_f5b), 
    .OFX1(mux_20_Mux_0_0_1_f5b));
  SLICE_98 SLICE_98( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_20_Mux_0_1_f5b), .FXA(mux_20_Mux_0_0_f5a), 
    .OFX0(mux_20_Mux_0_1_0_0_f5a), .OFX1(tone2_3_N_258_0));
  SLICE_99 SLICE_99( .C1(ptr2_3), .B1(ptr2_2), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_20_Mux_0_1_0_1_f5b), .FXA(mux_20_Mux_0_1_0_0_f5a), 
    .OFX0(mux_20_Mux_0_1_0_1_f5b), .OFX1(mux_20_Mux_0_1_0_f5a));
  SLICE_100 SLICE_100( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_20_Mux_0_1_1_f5b), .FXA(mux_20_Mux_0_1_0_f5a), 
    .OFX0(mux_20_Mux_0_1_1_0_f5a), .OFX1(mux_20_Mux_0_1_f5b));
  SLICE_101 SLICE_101( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_20_Mux_0_1_1_1_f5b), 
    .FXA(mux_20_Mux_0_1_1_0_f5a), .OFX0(mux_20_Mux_0_1_1_1_f5b), 
    .OFX1(mux_20_Mux_0_1_1_f5b));
  SLICE_102 SLICE_102( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_19_Mux_1_0_0_0_f5a));
  SLICE_103 SLICE_103( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_1_0_0_1_f5b), .FXA(mux_19_Mux_1_0_0_0_f5a), 
    .OFX0(mux_19_Mux_1_0_0_1_f5b), .OFX1(mux_19_Mux_1_0_0_f5a));
  SLICE_104 SLICE_104( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_19_Mux_1_0_1_f5b), .FXA(mux_19_Mux_1_0_0_f5a), 
    .OFX0(mux_19_Mux_1_0_1_0_f5a), .OFX1(mux_19_Mux_1_0_f5a));
  SLICE_105 SLICE_105( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_1_0_1_1_f5b), .FXA(mux_19_Mux_1_0_1_0_f5a), 
    .OFX0(mux_19_Mux_1_0_1_1_f5b), .OFX1(mux_19_Mux_1_0_1_f5b));
  SLICE_106 SLICE_106( .D1(ptr1_7), .C1(ptr1_3), .B1(ptr1_5), .A1(ptr1_2), 
    .D0(ptr1_7), .C0(ptr1_3), .B0(ptr1_2), .A0(ptr1_6), .M1(ptr1_0), 
    .FXB(mux_19_Mux_1_1_f5b), .FXA(mux_19_Mux_1_0_f5a), 
    .OFX0(mux_19_Mux_1_1_0_0_f5a), .F1(\U2/n1278 ), .OFX1(tone2_3_N_262_1));
  SLICE_107 SLICE_107( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_19_Mux_1_1_0_1_f5b), .FXA(mux_19_Mux_1_1_0_0_f5a), 
    .OFX0(mux_19_Mux_1_1_0_1_f5b), .OFX1(mux_19_Mux_1_1_0_f5a));
  SLICE_108 SLICE_108( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .C0(ptr1_3), .B0(ptr1_2), .A0(ptr1_6), .M1(ptr1_4), .M0(ptr1_7), 
    .FXB(mux_19_Mux_1_1_1_f5b), .FXA(mux_19_Mux_1_1_0_f5a), 
    .OFX0(mux_19_Mux_1_1_1_0_f5a), .OFX1(mux_19_Mux_1_1_f5b));
  SLICE_109 SLICE_109( .C1(ptr1_3), .B1(ptr1_2), .A1(ptr1_6), .D0(ptr1_3), 
    .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_19_Mux_1_1_1_1_f5b), .FXA(mux_19_Mux_1_1_1_0_f5a), 
    .OFX0(mux_19_Mux_1_1_1_1_f5b), .OFX1(mux_19_Mux_1_1_1_f5b));
  SLICE_110 SLICE_110( .C1(ptr3_3), .B1(ptr3_2), .A1(ptr3_6), .D0(ptr3_3), 
    .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M0(ptr3_7), 
    .OFX0(mux_21_Mux_1_0_0_0_f5a));
  SLICE_111 SLICE_111( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_0_0_1_f5b), .FXA(mux_21_Mux_1_0_0_0_f5a), 
    .OFX0(mux_21_Mux_1_0_0_1_f5b), .OFX1(mux_21_Mux_1_0_0_f5a));
  SLICE_112 SLICE_112( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_0_1_f5b), .FXA(mux_21_Mux_1_0_0_f5a), 
    .OFX0(mux_21_Mux_1_0_1_0_f5a), .OFX1(mux_21_Mux_1_0_f5a));
  SLICE_113 SLICE_113( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_0_1_1_f5b), .FXA(mux_21_Mux_1_0_1_0_f5a), 
    .OFX0(mux_21_Mux_1_0_1_1_f5b), .OFX1(mux_21_Mux_1_0_1_f5b));
  SLICE_114 SLICE_114( .C1(ptr3_2), .B1(ptr3_7), .A1(ptr3_3), .C0(ptr3_3), 
    .B0(ptr3_2), .A0(ptr3_6), .M1(ptr3_0), .FXB(mux_21_Mux_1_1_f5b), 
    .FXA(mux_21_Mux_1_0_f5a), .OFX0(mux_21_Mux_1_1_0_0_f5a), .F1(\U2/n1282 ), 
    .OFX1(tone2_3_N_254_1));
  SLICE_115 SLICE_115( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_1_0_1_f5b), .FXA(mux_21_Mux_1_1_0_0_f5a), 
    .OFX0(mux_21_Mux_1_1_0_1_f5b), .OFX1(mux_21_Mux_1_1_0_f5a));
  SLICE_116 SLICE_116( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_1_1_f5b), .FXA(mux_21_Mux_1_1_0_f5a), 
    .OFX0(mux_21_Mux_1_1_1_0_f5a), .OFX1(mux_21_Mux_1_1_f5b));
  SLICE_117 SLICE_117( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_1_1_1_1_f5b), .FXA(mux_21_Mux_1_1_1_0_f5a), 
    .OFX0(mux_21_Mux_1_1_1_1_f5b), .OFX1(mux_21_Mux_1_1_1_f5b));
  SLICE_118 SLICE_118( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M0(ptr3_7), 
    .OFX0(mux_21_Mux_0_0_0_0_f5a));
  SLICE_119 SLICE_119( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_0_0_1_f5b), .FXA(mux_21_Mux_0_0_0_0_f5a), 
    .OFX0(mux_21_Mux_0_0_0_1_f5b), .OFX1(mux_21_Mux_0_0_0_f5a));
  SLICE_120 SLICE_120( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_0_1_f5b), .FXA(mux_21_Mux_0_0_0_f5a), 
    .OFX0(mux_21_Mux_0_0_1_0_f5a), .OFX1(mux_21_Mux_0_0_f5a));
  SLICE_121 SLICE_121( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_0_1_1_f5b), .FXA(mux_21_Mux_0_0_1_0_f5a), 
    .OFX0(mux_21_Mux_0_0_1_1_f5b), .OFX1(mux_21_Mux_0_0_1_f5b));
  SLICE_122 SLICE_122( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .C0(ptr3_3), .B0(ptr3_2), .A0(ptr3_6), .M1(ptr3_0), .M0(ptr3_7), 
    .FXB(mux_21_Mux_0_1_f5b), .FXA(mux_21_Mux_0_0_f5a), 
    .OFX0(mux_21_Mux_0_1_0_0_f5a), .OFX1(tone2_3_N_254_0));
  SLICE_123 SLICE_123( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_1_0_1_f5b), .FXA(mux_21_Mux_0_1_0_0_f5a), 
    .OFX0(mux_21_Mux_0_1_0_1_f5b), .OFX1(mux_21_Mux_0_1_0_f5a));
  SLICE_124 SLICE_124( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_1_1_f5b), .FXA(mux_21_Mux_0_1_0_f5a), 
    .OFX0(mux_21_Mux_0_1_1_0_f5a), .OFX1(mux_21_Mux_0_1_f5b));
  SLICE_125 SLICE_125( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_0_1_1_1_f5b), .FXA(mux_21_Mux_0_1_1_0_f5a), 
    .OFX0(mux_21_Mux_0_1_1_1_f5b), .OFX1(mux_21_Mux_0_1_1_f5b));
  SLICE_126 SLICE_126( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M0(ptr1_7), 
    .OFX0(mux_19_Mux_2_0_0_0_f5a));
  SLICE_127 SLICE_127( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_2_0_0_1_f5b), .FXA(mux_19_Mux_2_0_0_0_f5a), 
    .OFX0(mux_19_Mux_2_0_0_1_f5b), .OFX1(mux_19_Mux_2_0_0_f5a));
  SLICE_128 SLICE_128( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_4), 
    .M0(ptr1_7), .FXB(mux_19_Mux_2_0_1_f5b), .FXA(mux_19_Mux_2_0_0_f5a), 
    .OFX0(mux_19_Mux_2_0_1_0_f5a), .OFX1(mux_19_Mux_2_0_f5a));
  SLICE_129 SLICE_129( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_2_0_1_1_f5b), .FXA(mux_19_Mux_2_0_1_0_f5a), 
    .OFX0(mux_19_Mux_2_0_1_1_f5b), .OFX1(mux_19_Mux_2_0_1_f5b));
  SLICE_130 SLICE_130( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_0), 
    .M0(ptr1_7), .FXB(mux_19_Mux_2_1_f5b), .FXA(mux_19_Mux_2_0_f5a), 
    .OFX0(mux_19_Mux_2_1_0_0_f5a), .OFX1(tone2_3_N_262_2));
  SLICE_131 SLICE_131( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), .M1(ptr1_5), 
    .M0(ptr1_7), .FXB(mux_19_Mux_2_1_0_1_f5b), .FXA(mux_19_Mux_2_1_0_0_f5a), 
    .OFX0(mux_19_Mux_2_1_0_1_f5b), .OFX1(mux_19_Mux_2_1_0_f5a));
  SLICE_132 SLICE_132( .D0(ptr1_3), .C0(ptr1_2), .B0(ptr1_1), .A0(ptr1_6), 
    .M1(ptr1_4), .M0(ptr1_7), .FXB(mux_19_Mux_2_1_1_f5b), 
    .FXA(mux_19_Mux_2_1_0_f5a), .OFX0(mux_19_Mux_2_1_1_0_f5a), 
    .OFX1(mux_19_Mux_2_1_f5b));
  SLICE_133 SLICE_133( .D1(ptr1_3), .C1(ptr1_2), .B1(ptr1_1), .A1(ptr1_6), 
    .B0(ptr1_3), .A0(ptr1_6), .M1(ptr1_5), .M0(ptr1_7), 
    .FXB(mux_19_Mux_2_1_1_1_f5b), .FXA(mux_19_Mux_2_1_1_0_f5a), 
    .OFX0(mux_19_Mux_2_1_1_1_f5b), .OFX1(mux_19_Mux_2_1_1_f5b));
  SLICE_134 SLICE_134( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_20_Mux_1_0_0_0_f5a));
  SLICE_135 SLICE_135( .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_20_Mux_1_0_0_1_f5b), .FXA(mux_20_Mux_1_0_0_0_f5a), 
    .OFX0(mux_20_Mux_1_0_0_1_f5b), .OFX1(mux_20_Mux_1_0_0_f5a));
  SLICE_136 SLICE_136( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .C0(ptr2_3), .B0(ptr2_2), .A0(ptr2_6), .M1(ptr2_4), .M0(ptr2_7), 
    .FXB(mux_20_Mux_1_0_1_f5b), .FXA(mux_20_Mux_1_0_0_f5a), 
    .OFX0(mux_20_Mux_1_0_1_0_f5a), .OFX1(mux_20_Mux_1_0_f5a));
  SLICE_137 SLICE_137( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_20_Mux_1_0_1_1_f5b), 
    .FXA(mux_20_Mux_1_0_1_0_f5a), .OFX0(mux_20_Mux_1_0_1_1_f5b), 
    .OFX1(mux_20_Mux_1_0_1_f5b));
  SLICE_138 SLICE_138( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_20_Mux_1_1_f5b), .FXA(mux_20_Mux_1_0_f5a), 
    .OFX0(mux_20_Mux_1_1_0_0_f5a), .OFX1(tone2_3_N_258_1));
  SLICE_139 SLICE_139( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_20_Mux_1_1_0_1_f5b), .FXA(mux_20_Mux_1_1_0_0_f5a), 
    .OFX0(mux_20_Mux_1_1_0_1_f5b), .OFX1(mux_20_Mux_1_1_0_f5a));
  SLICE_140 SLICE_140( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_20_Mux_1_1_1_f5b), .FXA(mux_20_Mux_1_1_0_f5a), 
    .OFX0(mux_20_Mux_1_1_1_0_f5a), .OFX1(mux_20_Mux_1_1_f5b));
  SLICE_141 SLICE_141( .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), 
    .M1(ptr2_5), .M0(ptr2_7), .FXB(mux_20_Mux_1_1_1_1_f5b), 
    .FXA(mux_20_Mux_1_1_1_0_f5a), .OFX0(mux_20_Mux_1_1_1_1_f5b), 
    .OFX1(mux_20_Mux_1_1_1_f5b));
  SLICE_142 SLICE_142( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M0(ptr2_7), 
    .OFX0(mux_20_Mux_2_0_0_0_f5a));
  SLICE_143 SLICE_143( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_20_Mux_2_0_0_1_f5b), .FXA(mux_20_Mux_2_0_0_0_f5a), 
    .OFX0(mux_20_Mux_2_0_0_1_f5b), .OFX1(mux_20_Mux_2_0_0_f5a));
  SLICE_144 SLICE_144( .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), .M0(ptr2_7), 
    .FXB(mux_20_Mux_2_0_1_f5b), .FXA(mux_20_Mux_2_0_0_f5a), 
    .OFX0(mux_20_Mux_2_0_1_0_f5a), .OFX1(mux_20_Mux_2_0_f5a));
  SLICE_145 SLICE_145( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_20_Mux_2_0_1_1_f5b), .FXA(mux_20_Mux_2_0_1_0_f5a), 
    .OFX0(mux_20_Mux_2_0_1_1_f5b), .OFX1(mux_20_Mux_2_0_1_f5b));
  SLICE_146 SLICE_146( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_0), 
    .M0(ptr2_7), .FXB(mux_20_Mux_2_1_f5b), .FXA(mux_20_Mux_2_0_f5a), 
    .OFX0(mux_20_Mux_2_1_0_0_f5a), .OFX1(tone2_3_N_258_2));
  SLICE_147 SLICE_147( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), 
    .M0(ptr2_7), .FXB(mux_20_Mux_2_1_0_1_f5b), .FXA(mux_20_Mux_2_1_0_0_f5a), 
    .OFX0(mux_20_Mux_2_1_0_1_f5b), .OFX1(mux_20_Mux_2_1_0_f5a));
  SLICE_148 SLICE_148( .D1(ptr2_3), .C1(ptr2_2), .B1(ptr2_1), .A1(ptr2_6), 
    .D0(ptr2_3), .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_4), 
    .M0(ptr2_7), .FXB(mux_20_Mux_2_1_1_f5b), .FXA(mux_20_Mux_2_1_0_f5a), 
    .OFX0(mux_20_Mux_2_1_1_0_f5a), .OFX1(mux_20_Mux_2_1_f5b));
  SLICE_149 SLICE_149( .C1(ptr2_3), .B1(ptr2_2), .A1(ptr2_6), .D0(ptr2_3), 
    .C0(ptr2_2), .B0(ptr2_1), .A0(ptr2_6), .M1(ptr2_5), .M0(ptr2_7), 
    .FXB(mux_20_Mux_2_1_1_1_f5b), .FXA(mux_20_Mux_2_1_1_0_f5a), 
    .OFX0(mux_20_Mux_2_1_1_1_f5b), .OFX1(mux_20_Mux_2_1_1_f5b));
  SLICE_150 SLICE_150( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_5), 
    .M0(ptr3_6), .OFX0(mux_21_Mux_2_0_0_0_f5a));
  SLICE_151 SLICE_151( .C1(ptr1_6), .B1(ptr1_0), .A1(ptr1_1), .M1(ptr3_7), 
    .FXB(mux_21_Mux_2_0_0_1_f5b), .FXA(mux_21_Mux_2_0_0_0_f5a), 
    .OFX0(mux_21_Mux_2_0_0_1_f5b), .F1(\U2/n1280 ), 
    .OFX1(mux_21_Mux_2_0_0_f5a));
  SLICE_152 SLICE_152( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_2_0_1_f5b), .FXA(mux_21_Mux_2_0_0_f5a), 
    .OFX0(mux_21_Mux_2_0_1_0_f5a), .OFX1(mux_21_Mux_2_0_f5a));
  SLICE_153 SLICE_153( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_5), 
    .M0(ptr3_7), .FXB(mux_21_Mux_2_0_1_1_f5b), .FXA(mux_21_Mux_2_0_1_0_f5a), 
    .OFX0(mux_21_Mux_2_0_1_1_f5b), .OFX1(mux_21_Mux_2_0_1_f5b));
  SLICE_154 SLICE_154( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_5), 
    .M1(ptr3_0), .M0(ptr3_6), .FXB(mux_21_Mux_2_1_f5b), 
    .FXA(mux_21_Mux_2_0_f5a), .OFX0(mux_21_Mux_2_1_0_0_f5a), 
    .OFX1(tone2_3_N_254_2));
  SLICE_155 SLICE_155( .D1(ptr3_5), .C1(ptr3_1), .B1(ptr3_0), .A1(\U2/ptr3_8 ), 
    .M1(ptr3_7), .FXB(mux_21_Mux_2_1_0_1_f5b), .FXA(mux_21_Mux_2_1_0_0_f5a), 
    .OFX0(mux_21_Mux_2_1_0_1_f5b), .F1(\U2/n15 ), .OFX1(mux_21_Mux_2_1_0_f5a));
  SLICE_156 SLICE_156( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .D0(ptr3_3), .C0(ptr3_2), .B0(ptr3_1), .A0(ptr3_6), .M1(ptr3_4), 
    .M0(ptr3_7), .FXB(mux_21_Mux_2_1_1_f5b), .FXA(mux_21_Mux_2_1_0_f5a), 
    .OFX0(mux_21_Mux_2_1_1_0_f5a), .OFX1(mux_21_Mux_2_1_f5b));
  SLICE_157 SLICE_157( .D1(ptr3_3), .C1(ptr3_2), .B1(ptr3_1), .A1(ptr3_6), 
    .C0(ptr3_3), .B0(ptr3_2), .A0(ptr3_6), .M1(ptr3_5), .M0(ptr3_7), 
    .FXB(mux_21_Mux_2_1_1_1_f5b), .FXA(mux_21_Mux_2_1_1_0_f5a), 
    .OFX0(mux_21_Mux_2_1_1_1_f5b), .OFX1(mux_21_Mux_2_1_1_f5b));
  SLICE_158 SLICE_158( .D1(col_c_3), .C1(col_c_0), .B1(col_c_2), .A1(col_c_1), 
    .D0(col_c_0), .C0(col_c_3), .B0(n1366), .A0(n1260), .F0(n1225), .F1(n1366));
  SLICE_159 SLICE_159( .C1(tone_2), .B1(n1457), .A1(tone_0), .D0(tone_0), 
    .C0(tone_3), .B0(n7_adj_316), .A0(n1451), .F0(pitch_10), .F1(n7_adj_316));
  SLICE_160 SLICE_160( .D1(tone_2), .C1(mode_num), .B1(tone1_1), .A1(tone2_1), 
    .C0(mode_num), .B0(tone1_2), .A0(tone2_2), .F0(tone_2), .F1(n1451));
  SLICE_161 SLICE_161( .C1(tone_2), .B1(n1457), .A1(tone_0), .D0(tone_0), 
    .C0(tone_3), .B0(n7), .A0(n1451), .F0(pitch_3), .F1(n7));
  SLICE_162 SLICE_162( .D1(tone_0), .C1(tone_3), .B1(n14), .A1(n1451), 
    .C0(tone_2), .B0(n1457), .A0(tone_0), .F0(n14), .F1(pitch_7));
  SLICE_163 SLICE_163( .D1(tone_0), .C1(tone_2), .B1(tone_3), .A1(n1457), 
    .C0(mode_num), .B0(tone1_3), .A0(tone2_3), .F0(tone_3), .F1(pitch_11));
  SLICE_164 SLICE_164( .C1(mode_num), .B1(tone1_0), .A1(tone2_0), .D0(tone_2), 
    .C0(tone_0), .B0(tone_3), .A0(n1457), .F0(pitch_8), .F1(tone_0));
  SLICE_165 SLICE_165( .D1(\U1/cnt8_14 ), .C1(\U1/n1272 ), .B1(\U1/cnt8_8 ), 
    .A1(\U1/n1228 ), .C0(n1314), .B0(n655), .A0(clk8hz), .F0(n670), .F1(n655));
  SLICE_166 SLICE_166( .D1(ptr3_4), .C1(\U2/n1282 ), .B1(ptr3_6), 
    .A1(\U2/n15 ), .C0(n1312), .B0(n655), .A0(clk8hz), .F0(n661), .F1(n1312));
  SLICE_167 SLICE_167( .D1(\U2/n1278 ), .C1(\U2/n1280 ), .B1(ptr1_4), 
    .A1(clk_c_enable_29), .B0(n655), .A0(clk8hz), .F0(clk_c_enable_29), 
    .F1(\U2/n678 ));
  SLICE_168 SLICE_168( .C1(mode_num), .B1(tone1_1), .A1(tone2_1), .C0(tone_2), 
    .B0(tone_3), .A0(n1457), .F0(pitch_9), .F1(n1457));
  SLICE_169 SLICE_169( .D1(clk40hz), .C1(n676), .B1(n1225), .A1(mode_num), 
    .B0(col_c_3), .A0(clk_c_enable_18), .F0(n656), .F1(clk_c_enable_18));
  U2_SLICE_170 \U2/SLICE_170 ( .B1(ptr2_7), .A1(ptr2_2), .D0(ptr2_5), 
    .C0(\U2/n1268 ), .B0(ptr2_1), .A0(\U2/n13 ), .F0(n1314), .F1(\U2/n1268 ));
  U1_SLICE_171 \U1/SLICE_171 ( .D1(\U1/n26 ), .C1(\U1/n38 ), .B1(\U1/n44 ), 
    .A1(\U1/n25 ), .D0(\U1/cnt40_24 ), .C0(\U1/cnt40_3 ), .B0(\U1/cnt40_18 ), 
    .A0(\U1/cnt40_29 ), .F0(\U1/n38 ), .F1(\U1/n46 ));
  U1_SLICE_172 \U1/SLICE_172 ( .D1(\U1/cnt40_31 ), .C1(\U1/n30 ), 
    .B1(\U1/n40 ), .A1(\U1/cnt40_1 ), .D0(\U1/cnt40_12 ), .C0(\U1/cnt40_28 ), 
    .B0(\U1/cnt40_10 ), .A0(\U1/cnt40_26 ), .F0(\U1/n40 ), .F1(\U1/n44 ));
  U1_SLICE_173 \U1/SLICE_173 ( .D1(\U1/cnt8_26 ), .C1(\U1/n28 ), 
    .B1(\U1/n38_adj_269 ), .A1(\U1/cnt8_25 ), .B0(\U1/cnt8_24 ), 
    .A0(\U1/cnt8_9 ), .F0(\U1/n28 ), .F1(\U1/n42 ));
  U1_SLICE_174 \U1/SLICE_174 ( .C1(\U1/cnt8_5 ), .B1(\U1/n1276 ), 
    .A1(\U1/cnt8_19 ), .D0(\U1/cnt8_7 ), .C0(\U1/cnt8_12 ), .B0(\U1/cnt8_17 ), 
    .A0(\U1/cnt8_16 ), .F0(\U1/n1276 ), .F1(\U1/n1288 ));
  U1_SLICE_175 \U1/SLICE_175 ( .B1(\U1/cnt8_15 ), .A1(\U1/cnt8_20 ), 
    .D0(\U1/n32 ), .C0(\U1/n40_adj_268 ), .B0(\U1/n44_adj_267 ), .A0(\U1/n31 ), 
    .F0(\U1/n1228 ), .F1(\U1/n32 ));
  U1_SLICE_176 \U1/SLICE_176 ( .B1(\U1/cnt8_28 ), .A1(\U1/cnt8_0 ), 
    .D0(\U1/n24 ), .C0(\U1/n36 ), .B0(\U1/n42 ), .A0(\U1/n1288 ), 
    .F0(\U1/n44_adj_267 ), .F1(\U1/n24 ));
  U1_SLICE_177 \U1/SLICE_177 ( .D1(\U1/cnt40_13 ), .C1(\U1/cnt40_9 ), 
    .B1(\U1/cnt40_16 ), .A1(\U1/cnt40_25 ), .D0(\U1/n42_adj_270 ), 
    .C0(\U1/n46 ), .B0(\U1/cnt40_8 ), .A0(\U1/n41 ), .F0(\U1/n10 ), 
    .F1(\U1/n42_adj_270 ));
  SLICE_178 SLICE_178( .D1(n1457), .C1(tone_0), .B1(tone_3), .A1(tone_2), 
    .D0(tone_3), .C0(tone_2), .B0(n1457), .A0(tone_0), .F0(pitch_6), 
    .F1(pitch_1));
  SLICE_179 SLICE_179( .D1(tone_0), .C1(tone_2), .B1(n1457), .A1(tone_3), 
    .D0(tone_0), .C0(tone_2), .B0(tone_3), .A0(n1457), .F0(pitch_5), 
    .F1(pitch_2));
  SLICE_180 SLICE_180( .D1(tone_3), .C1(tone_0), .B1(tone_2), .A1(n1457), 
    .D0(tone_3), .C0(tone_2), .B0(n1457), .A0(tone_0), .F0(pitch_13), 
    .F1(pitch_0));
  U2_SLICE_181 \U2/SLICE_181 ( .D1(music_num_1), .C1(\U2/mn_former_0 ), 
    .B1(\U2/mn_former_1 ), .A1(music_num_0), .D0(music_num_1), 
    .C0(\U2/mn_former_0 ), .B0(\U2/mn_former_1 ), .A0(music_num_0), 
    .F0(\U2/tone2_3__N_199 ), .F1(\music_num[1]_derived_2 ));
  U2_SLICE_182 \U2/SLICE_182 ( .B1(ptr2_3), .A1(ptr2_5), .D0(ptr2_4), 
    .C0(ptr2_0), .B0(ptr2_3), .A0(ptr2_6), .F0(\U2/n13 ), .F1(\U2/n6 ));
  U1_SLICE_183 \U1/SLICE_183 ( .B1(\U1/cnt8_10 ), .A1(\U1/cnt8_6 ), 
    .D0(\U1/cnt8_31 ), .C0(\U1/cnt8_29 ), .B0(\U1/cnt8_3 ), .A0(\U1/cnt8_23 ), 
    .F0(\U1/n40_adj_268 ), .F1(\U1/n31 ));
  U1_SLICE_184 \U1/SLICE_184 ( .D1(\U1/cnt40_11 ), .C1(\U1/cnt40_17 ), 
    .B1(\U1/cnt40_4 ), .A1(\U1/cnt40_5 ), .B0(\U1/cnt40_6 ), 
    .A0(\U1/cnt40_14 ), .F0(\U1/n1256 ), .F1(\U1/n1284 ));
  U1_SLICE_185 \U1/SLICE_185 ( .B1(\U1/cnt40_27 ), .A1(\U1/cnt40_15 ), 
    .B0(\U1/cnt40_2 ), .A0(\U1/cnt40_30 ), .F0(\U1/n25 ), .F1(\U1/n26 ));
  SLICE_186 SLICE_186( .B1(tone1_1), .A1(tone1_0), .C0(col_c_2), .B0(n1365), 
    .A0(col_c_1), .F0(n1260), .F1(n4));
  switch switch_I( .PADDI(switch_c), .switch(switch));
  col_0_ \col[0]_I ( .PADDI(col_c_0), .col0(col[0]));
  col_1_ \col[1]_I ( .PADDI(col_c_1), .col1(col[1]));
  col_2_ \col[2]_I ( .PADDI(col_c_2), .col2(col[2]));
  col_3_ \col[3]_I ( .PADDI(col_c_3), .col3(col[3]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  mode mode_I( .PADDI(mode_c), .mode(mode));
  beep beep_I( .PADDO(beep_c), .beep(beep));
  row_0_ \row[0]_I ( .PADDO(n1455), .row0(row[0]));
  row_1_ \row[1]_I ( .PADDO(row_c_1), .row1(row[1]));
  row_2_ \row[2]_I ( .PADDO(VCC_net), .row2(row[2]));
  row_3_ \row[3]_I ( .PADDO(VCC_net), .row3(row[3]));
  GSR_INST GSR_INST( .GSRNET(\U2/tone2_3__N_199 ));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module SLICE_0 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_5 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_8 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_261__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 cnt_261_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_9 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_261__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 cnt_261_add_4_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_10 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_261__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_261__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_261_add_4_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_11 ( input FCI, output F0 );
  wire   GNDI;

  ccu20003 equal_74_20( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hFFFF;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_12 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_20_755( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_13 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_18( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module U2_SLICE_14 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr3_266__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr3_266__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr3_266_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0005 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module U2_SLICE_15 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr3_266__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr3_266__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr3_266_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_16 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr3_266__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr3_266__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr3_266_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_17 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr3_266__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr3_266__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr3_266_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_18 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr3_266__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \U2/ptr3_266_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_19 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr2_265__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \U2/ptr2_265_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_20 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr2_265__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr2_265__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr2_265_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_21 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr2_265__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr2_265__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr2_265_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_22 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr2_265__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr2_265__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr2_265_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_23 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr2_265__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \U2/ptr2_265_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_24 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr1_264__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \U2/ptr1_264_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_25 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr1_264__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr1_264__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr1_264_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_26 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr1_264__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr1_264__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr1_264_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_27 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr1_264__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0005 \U2/ptr1_264__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U2/ptr1_264_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U2_SLICE_28 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0005 \U2/ptr1_264__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \U2/ptr1_264_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_29 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20004 equal_74_16( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_30 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20006 equal_74_14( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module SLICE_31 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20007 equal_74_0( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h1111;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module U1_SLICE_32 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \U1/cnt8_262_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_33 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \U1/cnt8_262_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_34 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \U1/cnt40_263_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_35 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_37 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_38 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_39 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_40 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_41 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_43 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_44 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_45 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_46 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_47 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_48 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_49 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt40_263__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt40_263_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_50 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \U1/cnt40_263__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \U1/cnt40_263_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_51 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_52 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_53 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_54 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_55 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_56 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_57 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_58 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_59 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_60 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_61 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_62 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_63 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_64 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module U1_SLICE_65 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \U1/cnt8_262__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \U1/cnt8_262__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \U1/cnt8_262_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_66 ( input B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut4 i107_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0008 \U2/music_num_1__I_0_68_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 \U2/music_num_1__I_0_68_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0008 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   GATE;

  AND2 INST50( .A(SP), .B(CK), .Z(GATE));
  FL1S1D INST01( .D0(D0), .D1(D1), .CK(GATE), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_67 ( input M0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40009 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 beep_68( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0010 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module U1_SLICE_68 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40011 \U1/i1057_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \U1/i1_2_lut_adj_4 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \U1/clk40hz_28 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_69 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40012 \U1/i1003_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \U1/i1_2_lut_adj_3 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0010 \U1/clk8hz_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_70 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40013 \U1/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 clk_music_I_0_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 clk_music_67( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_71 ( input B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40014 i1038_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 mode_num_I_0_1_lut_rep_20( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0010 mode_num_62( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_72 ( input D1, C1, B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40013 \U1/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i324_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 music_num_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_73 ( input D1, C1, B1, A1, B0, A0, M0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, M0_dly, CLK_dly, LSR_dly;

  lut40013 \U1/i17_4_lut_adj_5 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \U1/i6_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre music_num_i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_74 ( input B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40017 row_num_I_0_1_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 tmp_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0008 tmp_I_0_72( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_75 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 i356_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre tone1_i0_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre tone1_i0_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_76 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut4 i20_2_lut_rep_18( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i358_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 tone1_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h85A5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_77 ( input D1, C1, B1, A1, B0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40021 tone1_3__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 tmp_I_1_2_lut_rep_19( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre tone1_i0_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4124) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_78 ( input B1, A1, C0, B0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, \SLICE_78/SLICE_78_K1_H1 , \SLICE_78/mux_105_Mux_0_i3/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly;

  lut40022 SLICE_78_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_78/SLICE_78_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \mux_105_Mux_0_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_78/mux_105_Mux_0_i3/GATE_H0 ));
  vmuxregsre0008 \U2/tone2_3__I_0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_78_K0K1MUX( .D0(\SLICE_78/mux_105_Mux_0_i3/GATE_H0 ), 
    .D1(\SLICE_78/SLICE_78_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_79 ( input B1, A1, C0, B0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, \SLICE_79/SLICE_79_K1_H1 , \SLICE_79/mux_105_Mux_1_i3/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly;

  lut40022 SLICE_79_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_79/SLICE_79_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \mux_105_Mux_1_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_79/mux_105_Mux_1_i3/GATE_H0 ));
  vmuxregsre0008 \U2/tone2_3__I_0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_79_K0K1MUX( .D0(\SLICE_79/mux_105_Mux_1_i3/GATE_H0 ), 
    .D1(\SLICE_79/SLICE_79_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input B1, A1, C0, B0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, \SLICE_80/SLICE_80_K1_H1 , \SLICE_80/mux_105_Mux_2_i3/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly;

  lut40022 SLICE_80_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_80/SLICE_80_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \mux_105_Mux_2_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_80/mux_105_Mux_2_i3/GATE_H0 ));
  vmuxregsre0008 \U2/tone2_3__I_0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_80_K0K1MUX( .D0(\SLICE_80/mux_105_Mux_2_i3/GATE_H0 ), 
    .D1(\SLICE_80/SLICE_80_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, LSR, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_81/SLICE_81_K1_H1 , GNDI, \SLICE_81/i363/GATE_H0 , VCCI, 
         LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40024 SLICE_81_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_81/SLICE_81_K1_H1 ));
  lut40025 \i363/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_81/i363/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0026 \U2/tone2_3__I_0_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  selmux2 SLICE_81_K0K1MUX( .D0(\SLICE_81/i363/GATE_H0 ), 
    .D1(\SLICE_81/SLICE_81_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0026 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   Q_INT, D_INT, LSRB, L_IN;

  MUX41 INST10( .D0(Q_INT), .D1(Q_INT), .D2(D0), .D3(D1), .SD1(SD), .SD2(SP), 
    .Z(D_INT));
  INV INST20( .A(LSR), .Z(LSRB));
  AND2 INST30( .A(LSRB), .B(D_INT), .Z(L_IN));
  FD1S1A INST50( .D(L_IN), .CK(CK), .Q(Q_INT));
  defparam INST50.GSR = "DISABLED";
  BUFBA INST80( .A(Q_INT), .Z(Q));
endmodule

module i1092_SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1092/SLICE_82/i1092/SLICE_82_K1_H1 , \i1092/SLICE_82/i1092/GATE_H0 ;

  lut40027 \i1092/SLICE_82_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1092/SLICE_82/i1092/SLICE_82_K1_H1 ));
  lut40028 \i1092/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1092/SLICE_82/i1092/GATE_H0 ));
  selmux2 \i1092/SLICE_82_K0K1MUX ( .D0(\i1092/SLICE_82/i1092/GATE_H0 ), 
    .D1(\i1092/SLICE_82/i1092/SLICE_82_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0820) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i1090_SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1090/SLICE_83/i1090/SLICE_83_K1_H1 , \i1090/SLICE_83/i1090/GATE_H0 ;

  lut40029 \i1090/SLICE_83_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1090/SLICE_83/i1090/SLICE_83_K1_H1 ));
  lut40030 \i1090/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1090/SLICE_83/i1090/GATE_H0 ));
  selmux2 \i1090/SLICE_83_K0K1MUX ( .D0(\i1090/SLICE_83/i1090/GATE_H0 ), 
    .D1(\i1090/SLICE_83/i1090/SLICE_83_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4662) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h342C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_i1086_SLICE_84 ( input A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \U2/i1086/SLICE_84/U2/i1086/SLICE_84_K1_H1 , 
         \U2/i1086/SLICE_84/U2/i1086/GATE_H0 ;

  lut40031 \U2/i1086/SLICE_84_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\U2/i1086/SLICE_84/U2/i1086/SLICE_84_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \U2/i1086/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\U2/i1086/SLICE_84/U2/i1086/GATE_H0 ));
  selmux2 \U2/i1086/SLICE_84_K0K1MUX ( 
    .D0(\U2/i1086/SLICE_84/U2/i1086/GATE_H0 ), 
    .D1(\U2/i1086/SLICE_84/U2/i1086/SLICE_84_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h36C3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_i842_SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \U2/i842/SLICE_85/U2/i842/SLICE_85_K1_H1 , 
         \U2/i842/SLICE_85/U2/i842/GATE_H0 ;

  lut40033 \U2/i842/SLICE_85_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\U2/i842/SLICE_85/U2/i842/SLICE_85_K1_H1 ));
  lut40034 \U2/i842/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\U2/i842/SLICE_85/U2/i842/GATE_H0 ));
  selmux2 \U2/i842/SLICE_85_K0K1MUX ( .D0(\U2/i842/SLICE_85/U2/i842/GATE_H0 ), 
    .D1(\U2/i842/SLICE_85/U2/i842/SLICE_85_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0408) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_86 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_86/SLICE_86_K1_H1 , \SLICE_86/mux_19_Mux_0_0_0_0_H0 ;

  lut40035 SLICE_86_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_86/SLICE_86_K1_H1 ));
  lut40036 mux_19_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_86/mux_19_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_86_K0K1MUX( .D0(\SLICE_86/mux_19_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_86/SLICE_86_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5003) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h17C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_87 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_87/SLICE_87_K1_H1 , \SLICE_87/mux_19_Mux_0_0_0_1_H0 ;

  lut40036 SLICE_87_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_87/SLICE_87_K1_H1 ));
  lut40037 mux_19_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_87/mux_19_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_87_K0K1MUX( .D0(\SLICE_87/mux_19_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_87/SLICE_87_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_87_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h28A1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_88 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_88/SLICE_88_K1_H1 , \SLICE_88/mux_19_Mux_0_0_1_0_H0 ;

  lut40038 SLICE_88_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_88/SLICE_88_K1_H1 ));
  lut40039 mux_19_Mux_0_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_88/mux_19_Mux_0_0_1_0_H0 ));
  selmux2 SLICE_88_K0K1MUX( .D0(\SLICE_88/mux_19_Mux_0_0_1_0_H0 ), 
    .D1(\SLICE_88/SLICE_88_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_88_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h428F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_89/SLICE_89_K1_H1 , \SLICE_89/mux_19_Mux_0_0_1_1_H0 ;

  lut40040 SLICE_89_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_89/SLICE_89_K1_H1 ));
  lut40041 mux_19_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_89/mux_19_Mux_0_0_1_1_H0 ));
  selmux2 SLICE_89_K0K1MUX( .D0(\SLICE_89/mux_19_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_89/SLICE_89_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_89_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F14) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_90 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_90/SLICE_90_K1_H1 , \SLICE_90/mux_19_Mux_0_1_0_0_H0 ;

  lut40042 SLICE_90_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_90/SLICE_90_K1_H1 ));
  lut40043 mux_19_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_90/mux_19_Mux_0_1_0_0_H0 ));
  selmux2 SLICE_90_K0K1MUX( .D0(\SLICE_90/mux_19_Mux_0_1_0_0_H0 ), 
    .D1(\SLICE_90/SLICE_90_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_90_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_91 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_91/SLICE_91_K1_H1 , \SLICE_91/mux_19_Mux_0_1_0_1_H0 ;

  lut40044 SLICE_91_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_91/SLICE_91_K1_H1 ));
  lut40045 mux_19_Mux_0_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_91/mux_19_Mux_0_1_0_1_H0 ));
  selmux2 SLICE_91_K0K1MUX( .D0(\SLICE_91/mux_19_Mux_0_1_0_1_H0 ), 
    .D1(\SLICE_91/SLICE_91_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_91_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0AA1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_92 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_92/SLICE_92_K1_H1 , \SLICE_92/mux_19_Mux_0_1_1_0_H0 ;

  lut40046 SLICE_92_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_92/SLICE_92_K1_H1 ));
  lut40047 mux_19_Mux_0_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_92/mux_19_Mux_0_1_1_0_H0 ));
  selmux2 SLICE_92_K0K1MUX( .D0(\SLICE_92/mux_19_Mux_0_1_1_0_H0 ), 
    .D1(\SLICE_92/SLICE_92_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_92_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h02AD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40AB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_93 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_93/SLICE_93_K1_H1 , \SLICE_93/mux_19_Mux_0_1_1_1_H0 ;

  lut40048 SLICE_93_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_93/SLICE_93_K1_H1 ));
  lut40049 mux_19_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_93/mux_19_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_93_K0K1MUX( .D0(\SLICE_93/mux_19_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_93/SLICE_93_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_93_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_94 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_94/SLICE_94_K1_H1 , \SLICE_94/mux_20_Mux_0_0_0_0_H0 ;

  lut40050 SLICE_94_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_94/SLICE_94_K1_H1 ));
  lut40051 mux_20_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_94/mux_20_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_94_K0K1MUX( .D0(\SLICE_94/mux_20_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_94/SLICE_94_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8018) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_95 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_95/SLICE_95_K1_H1 , \SLICE_95/mux_20_Mux_0_0_0_1_H0 ;

  lut40052 SLICE_95_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_95/SLICE_95_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 mux_20_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_95/mux_20_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_95_K0K1MUX( .D0(\SLICE_95/mux_20_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_95/SLICE_95_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_95_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_96 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_96/SLICE_96_K1_H1 , \SLICE_96/mux_20_Mux_0_0_1_0_H0 ;

  lut40054 SLICE_96_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_96/SLICE_96_K1_H1 ));
  lut40055 mux_20_Mux_0_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_96/mux_20_Mux_0_0_1_0_H0 ));
  selmux2 SLICE_96_K0K1MUX( .D0(\SLICE_96/mux_20_Mux_0_0_1_0_H0 ), 
    .D1(\SLICE_96/SLICE_96_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_96_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h96D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_97 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_97/SLICE_97_K1_H1 , \SLICE_97/mux_20_Mux_0_0_1_1_H0 ;

  lut40056 SLICE_97_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_97/SLICE_97_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 mux_20_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_97/mux_20_Mux_0_0_1_1_H0 ));
  selmux2 SLICE_97_K0K1MUX( .D0(\SLICE_97/mux_20_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_97/SLICE_97_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_97_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0280) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_98 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_98/SLICE_98_K1_H1 , \SLICE_98/mux_20_Mux_0_1_0_0_H0 ;

  lut40058 SLICE_98_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_98/SLICE_98_K1_H1 ));
  lut40059 mux_20_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_98/mux_20_Mux_0_1_0_0_H0 ));
  selmux2 SLICE_98_K0K1MUX( .D0(\SLICE_98/mux_20_Mux_0_1_0_0_H0 ), 
    .D1(\SLICE_98/SLICE_98_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_98_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h200E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_99 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_99/SLICE_99_K1_H1 , \SLICE_99/mux_20_Mux_0_1_0_1_H0 ;

  lut40052 SLICE_99_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_99/SLICE_99_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 mux_20_Mux_0_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_99/mux_20_Mux_0_1_0_1_H0 ));
  selmux2 SLICE_99_K0K1MUX( .D0(\SLICE_99/mux_20_Mux_0_1_0_1_H0 ), 
    .D1(\SLICE_99/SLICE_99_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_99_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_100 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_100/SLICE_100_K1_H1 , \SLICE_100/mux_20_Mux_0_1_1_0_H0 ;

  lut40061 SLICE_100_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_100/SLICE_100_K1_H1 ));
  lut40062 mux_20_Mux_0_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_100/mux_20_Mux_0_1_1_0_H0 ));
  selmux2 SLICE_100_K0K1MUX( .D0(\SLICE_100/mux_20_Mux_0_1_1_0_H0 ), 
    .D1(\SLICE_100/SLICE_100_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_100_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9682) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_101 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_101/SLICE_101_K1_H1 , \SLICE_101/mux_20_Mux_0_1_1_1_H0 ;

  lut40056 SLICE_101_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_101/SLICE_101_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 mux_20_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_101/mux_20_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_101_K0K1MUX( .D0(\SLICE_101/mux_20_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_101/SLICE_101_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_101_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_102 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SLICE_102/SLICE_102_K1_H1 , \SLICE_102/mux_19_Mux_1_0_0_0_H0 ;

  lut40064 SLICE_102_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_102/SLICE_102_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 mux_19_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_102/mux_19_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_102_K0K1MUX( .D0(\SLICE_102/mux_19_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_102/SLICE_102_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0028) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_103 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_103/SLICE_103_K1_H1 , \SLICE_103/mux_19_Mux_1_0_0_1_H0 ;

  lut40065 SLICE_103_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_103/SLICE_103_K1_H1 ));
  lut40066 mux_19_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_103/mux_19_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_103_K0K1MUX( .D0(\SLICE_103/mux_19_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_103/SLICE_103_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_103_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_104 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_104/SLICE_104_K1_H1 , \SLICE_104/mux_19_Mux_1_0_1_0_H0 ;

  lut40067 SLICE_104_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_104/SLICE_104_K1_H1 ));
  lut40068 mux_19_Mux_1_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_104/mux_19_Mux_1_0_1_0_H0 ));
  selmux2 SLICE_104_K0K1MUX( .D0(\SLICE_104/mux_19_Mux_1_0_1_0_H0 ), 
    .D1(\SLICE_104/SLICE_104_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_104_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1450) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_105/SLICE_105_K1_H1 , \SLICE_105/mux_19_Mux_1_0_1_1_H0 ;

  lut40068 SLICE_105_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_105/SLICE_105_K1_H1 ));
  lut40069 mux_19_Mux_1_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_105/mux_19_Mux_1_0_1_1_H0 ));
  selmux2 SLICE_105_K0K1MUX( .D0(\SLICE_105/mux_19_Mux_1_0_1_1_H0 ), 
    .D1(\SLICE_105/SLICE_105_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_105_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5516) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_106 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, FXB, FXA, output 
    OFX0, F1, OFX1 );
  wire   \SLICE_106/mux_19_Mux_1_1_0_0_H0 ;

  lut40070 \U2/i1009_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 mux_19_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_106/mux_19_Mux_1_1_0_0_H0 ));
  selmux20072 SLICE_106_K0K1MUX( .D0(\SLICE_106/mux_19_Mux_1_1_0_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_106_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20072 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SLICE_107 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_107/SLICE_107_K1_H1 , \SLICE_107/mux_19_Mux_1_1_0_1_H0 ;

  lut40073 SLICE_107_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_107/SLICE_107_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 mux_19_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_107/mux_19_Mux_1_1_0_1_H0 ));
  selmux2 SLICE_107_K0K1MUX( .D0(\SLICE_107/mux_19_Mux_1_1_0_1_H0 ), 
    .D1(\SLICE_107/SLICE_107_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_107_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8AA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_108 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_108/SLICE_108_K1_H1 , GNDI, \SLICE_108/mux_19_Mux_1_1_1_0_H0 ;

  lut40075 SLICE_108_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_108/SLICE_108_K1_H1 ));
  lut40076 mux_19_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_108/mux_19_Mux_1_1_1_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_108_K0K1MUX( .D0(\SLICE_108/mux_19_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_108/SLICE_108_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_108_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3ED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1414) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_109 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_109/SLICE_109_K1_H1 , \SLICE_109/mux_19_Mux_1_1_1_1_H0 ;

  lut40076 SLICE_109_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_109/SLICE_109_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 mux_19_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_109/mux_19_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_109_K0K1MUX( .D0(\SLICE_109/mux_19_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_109/SLICE_109_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_109_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5156) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_110 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \SLICE_110/SLICE_110_K1_H1 , \SLICE_110/mux_21_Mux_1_0_0_0_H0 ;

  lut40078 SLICE_110_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_110/SLICE_110_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40079 mux_21_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_110/mux_21_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_110_K0K1MUX( .D0(\SLICE_110/mux_21_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_110/SLICE_110_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0282) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_111 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_111/SLICE_111_K1_H1 , \SLICE_111/mux_21_Mux_1_0_0_1_H0 ;

  lut40080 SLICE_111_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_111/SLICE_111_K1_H1 ));
  lut40081 mux_21_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_111/mux_21_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_111_K0K1MUX( .D0(\SLICE_111/mux_21_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_111/SLICE_111_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_111_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2969) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h82D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_112 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_112/SLICE_112_K1_H1 , \SLICE_112/mux_21_Mux_1_0_1_0_H0 ;

  lut40082 SLICE_112_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_112/SLICE_112_K1_H1 ));
  lut40083 mux_21_Mux_1_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_112/mux_21_Mux_1_0_1_0_H0 ));
  selmux2 SLICE_112_K0K1MUX( .D0(\SLICE_112/mux_21_Mux_1_0_1_0_H0 ), 
    .D1(\SLICE_112/SLICE_112_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_112_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6368) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h72D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_113 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_113/SLICE_113_K1_H1 , \SLICE_113/mux_21_Mux_1_0_1_1_H0 ;

  lut40084 SLICE_113_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_113/SLICE_113_K1_H1 ));
  lut40085 mux_21_Mux_1_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_113/mux_21_Mux_1_0_1_1_H0 ));
  selmux2 SLICE_113_K0K1MUX( .D0(\SLICE_113/mux_21_Mux_1_0_1_1_H0 ), 
    .D1(\SLICE_113/SLICE_113_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_113_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7AD0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4142) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_114 ( input C1, B1, A1, C0, B0, A0, M1, FXB, FXA, output OFX0, F1, 
    OFX1 );
  wire   GNDI, \SLICE_114/mux_21_Mux_1_1_0_0_H0 ;

  lut40086 \U2/i1013_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40087 mux_21_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_114/mux_21_Mux_1_1_0_0_H0 ));
  selmux20072 SLICE_114_K0K1MUX( .D0(\SLICE_114/mux_21_Mux_1_1_0_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_114_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_115 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_115/SLICE_115_K1_H1 , \SLICE_115/mux_21_Mux_1_1_0_1_H0 ;

  lut40080 SLICE_115_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_115/SLICE_115_K1_H1 ));
  lut40081 mux_21_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_115/mux_21_Mux_1_1_0_1_H0 ));
  selmux2 SLICE_115_K0K1MUX( .D0(\SLICE_115/mux_21_Mux_1_1_0_1_H0 ), 
    .D1(\SLICE_115/SLICE_115_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_115_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_116 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_116/SLICE_116_K1_H1 , \SLICE_116/mux_21_Mux_1_1_1_0_H0 ;

  lut40082 SLICE_116_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_116/SLICE_116_K1_H1 ));
  lut40083 mux_21_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_116/mux_21_Mux_1_1_1_0_H0 ));
  selmux2 SLICE_116_K0K1MUX( .D0(\SLICE_116/mux_21_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_116/SLICE_116_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_116_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_117 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_117/SLICE_117_K1_H1 , \SLICE_117/mux_21_Mux_1_1_1_1_H0 ;

  lut40084 SLICE_117_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_117/SLICE_117_K1_H1 ));
  lut40088 mux_21_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_117/mux_21_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_117_K0K1MUX( .D0(\SLICE_117/mux_21_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_117/SLICE_117_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_117_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5052) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_118 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_118/SLICE_118_K1_H1 , \SLICE_118/mux_21_Mux_0_0_0_0_H0 ;

  lut40089 SLICE_118_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_118/SLICE_118_K1_H1 ));
  lut40090 mux_21_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_118/mux_21_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_118_K0K1MUX( .D0(\SLICE_118/mux_21_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_118/SLICE_118_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B4B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_119/SLICE_119_K1_H1 , \SLICE_119/mux_21_Mux_0_0_0_1_H0 ;

  lut40091 SLICE_119_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_119/SLICE_119_K1_H1 ));
  lut40092 mux_21_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_119/mux_21_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_119_K0K1MUX( .D0(\SLICE_119/mux_21_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_119/SLICE_119_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_119_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9694) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7D05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_120 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_120/SLICE_120_K1_H1 , \SLICE_120/mux_21_Mux_0_0_1_0_H0 ;

  lut40093 SLICE_120_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_120/SLICE_120_K1_H1 ));
  lut40094 mux_21_Mux_0_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_120/mux_21_Mux_0_0_1_0_H0 ));
  selmux2 SLICE_120_K0K1MUX( .D0(\SLICE_120/mux_21_Mux_0_0_1_0_H0 ), 
    .D1(\SLICE_120/SLICE_120_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_120_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0094) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0807) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_121 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_121/SLICE_121_K1_H1 , \SLICE_121/mux_21_Mux_0_0_1_1_H0 ;

  lut40095 SLICE_121_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_121/SLICE_121_K1_H1 ));
  lut40096 mux_21_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_121/mux_21_Mux_0_0_1_1_H0 ));
  selmux2 SLICE_121_K0K1MUX( .D0(\SLICE_121/mux_21_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_121/SLICE_121_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_121_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A82) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA828) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_122 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_122/SLICE_122_K1_H1 , GNDI, \SLICE_122/mux_21_Mux_0_1_0_0_H0 ;

  lut40089 SLICE_122_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_122/SLICE_122_K1_H1 ));
  lut40097 mux_21_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_122/mux_21_Mux_0_1_0_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_122_K0K1MUX( .D0(\SLICE_122/mux_21_Mux_0_1_0_0_H0 ), 
    .D1(\SLICE_122/SLICE_122_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_122_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA6A6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_123 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_123/SLICE_123_K1_H1 , \SLICE_123/mux_21_Mux_0_1_0_1_H0 ;

  lut40091 SLICE_123_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_123/SLICE_123_K1_H1 ));
  lut40092 mux_21_Mux_0_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_123/mux_21_Mux_0_1_0_1_H0 ));
  selmux2 SLICE_123_K0K1MUX( .D0(\SLICE_123/mux_21_Mux_0_1_0_1_H0 ), 
    .D1(\SLICE_123/SLICE_123_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_123_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_124/SLICE_124_K1_H1 , \SLICE_124/mux_21_Mux_0_1_1_0_H0 ;

  lut40093 SLICE_124_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_124/SLICE_124_K1_H1 ));
  lut40098 mux_21_Mux_0_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_124/mux_21_Mux_0_1_1_0_H0 ));
  selmux2 SLICE_124_K0K1MUX( .D0(\SLICE_124/mux_21_Mux_0_1_1_0_H0 ), 
    .D1(\SLICE_124/SLICE_124_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_124_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0805) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_125/SLICE_125_K1_H1 , \SLICE_125/mux_21_Mux_0_1_1_1_H0 ;

  lut40095 SLICE_125_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_125/SLICE_125_K1_H1 ));
  lut40096 mux_21_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_125/mux_21_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_125_K0K1MUX( .D0(\SLICE_125/mux_21_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_125/SLICE_125_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_125_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_126/SLICE_126_K1_H1 , \SLICE_126/mux_19_Mux_2_0_0_0_H0 ;

  lut40099 SLICE_126_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_126/SLICE_126_K1_H1 ));
  lut40100 mux_19_Mux_2_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_126/mux_19_Mux_2_0_0_0_H0 ));
  selmux2 SLICE_126_K0K1MUX( .D0(\SLICE_126/mux_19_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_126/SLICE_126_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F17) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_127/SLICE_127_K1_H1 , \SLICE_127/mux_19_Mux_2_0_0_1_H0 ;

  lut40100 SLICE_127_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_127/SLICE_127_K1_H1 ));
  lut40101 mux_19_Mux_2_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_127/mux_19_Mux_2_0_0_1_H0 ));
  selmux2 SLICE_127_K0K1MUX( .D0(\SLICE_127/mux_19_Mux_2_0_0_1_H0 ), 
    .D1(\SLICE_127/SLICE_127_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_127_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h450B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_128/SLICE_128_K1_H1 , \SLICE_128/mux_19_Mux_2_0_1_0_H0 ;

  lut40102 SLICE_128_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_128/SLICE_128_K1_H1 ));
  lut40103 mux_19_Mux_2_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_128/mux_19_Mux_2_0_1_0_H0 ));
  selmux2 SLICE_128_K0K1MUX( .D0(\SLICE_128/mux_19_Mux_2_0_1_0_H0 ), 
    .D1(\SLICE_128/SLICE_128_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_128_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7EDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_129/SLICE_129_K1_H1 , \SLICE_129/mux_19_Mux_2_0_1_1_H0 ;

  lut40104 SLICE_129_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_129/SLICE_129_K1_H1 ));
  lut40105 mux_19_Mux_2_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_129/mux_19_Mux_2_0_1_1_H0 ));
  selmux2 SLICE_129_K0K1MUX( .D0(\SLICE_129/mux_19_Mux_2_0_1_1_H0 ), 
    .D1(\SLICE_129/SLICE_129_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_129_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_130/SLICE_130_K1_H1 , \SLICE_130/mux_19_Mux_2_1_0_0_H0 ;

  lut40106 SLICE_130_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_130/SLICE_130_K1_H1 ));
  lut40054 mux_19_Mux_2_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_130/mux_19_Mux_2_1_0_0_H0 ));
  selmux2 SLICE_130_K0K1MUX( .D0(\SLICE_130/mux_19_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_130/SLICE_130_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_130_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB56) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_131 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_131/SLICE_131_K1_H1 , \SLICE_131/mux_19_Mux_2_1_0_1_H0 ;

  lut40054 SLICE_131_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_131/SLICE_131_K1_H1 ));
  lut40107 mux_19_Mux_2_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_131/mux_19_Mux_2_1_0_1_H0 ));
  selmux2 SLICE_131_K0K1MUX( .D0(\SLICE_131/mux_19_Mux_2_1_0_1_H0 ), 
    .D1(\SLICE_131/SLICE_131_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_131_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5503) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_132 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_132/SLICE_132_K1_H1 , \SLICE_132/mux_19_Mux_2_1_1_0_H0 ;

  lut40056 SLICE_132_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_132/SLICE_132_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 mux_19_Mux_2_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_132/mux_19_Mux_2_1_1_0_H0 ));
  selmux2 SLICE_132_K0K1MUX( .D0(\SLICE_132/mux_19_Mux_2_1_1_0_H0 ), 
    .D1(\SLICE_132/SLICE_132_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_132_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEDFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, B0, A0, M1, M0, FXB, FXA, output OFX0, 
    OFX1 );
  wire   \SLICE_133/SLICE_133_K1_H1 , GNDI, \SLICE_133/mux_19_Mux_2_1_1_1_H0 ;

  lut40109 SLICE_133_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_133/SLICE_133_K1_H1 ));
  lut40022 mux_19_Mux_2_1_1_1( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_133/mux_19_Mux_2_1_1_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_133_K0K1MUX( .D0(\SLICE_133/mux_19_Mux_2_1_1_1_H0 ), 
    .D1(\SLICE_133/SLICE_133_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_133_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4551) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_134/SLICE_134_K1_H1 , \SLICE_134/mux_20_Mux_1_0_0_0_H0 ;

  lut40110 SLICE_134_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_134/SLICE_134_K1_H1 ));
  lut40111 mux_20_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_134/mux_20_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_134_K0K1MUX( .D0(\SLICE_134/mux_20_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_134/SLICE_134_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1840) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_135 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_135/SLICE_135_K1_H1 , \SLICE_135/mux_20_Mux_1_0_0_1_H0 ;

  lut40064 SLICE_135_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_135/SLICE_135_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40112 mux_20_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_135/mux_20_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_135_K0K1MUX( .D0(\SLICE_135/mux_20_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_135/SLICE_135_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_135_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7A0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_136 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_136/SLICE_136_K1_H1 , GNDI, \SLICE_136/mux_20_Mux_1_0_1_0_H0 ;

  lut40058 SLICE_136_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_136/SLICE_136_K1_H1 ));
  lut40113 mux_20_Mux_1_0_1_0( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_136/mux_20_Mux_1_0_1_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_136_K0K1MUX( .D0(\SLICE_136/mux_20_Mux_1_0_1_0_H0 ), 
    .D1(\SLICE_136/SLICE_136_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_136_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_137 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_137/SLICE_137_K1_H1 , \SLICE_137/mux_20_Mux_1_0_1_1_H0 ;

  lut40056 SLICE_137_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_137/SLICE_137_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 mux_20_Mux_1_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_137/mux_20_Mux_1_0_1_1_H0 ));
  selmux2 SLICE_137_K0K1MUX( .D0(\SLICE_137/mux_20_Mux_1_0_1_1_H0 ), 
    .D1(\SLICE_137/SLICE_137_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_137_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8105) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_138/SLICE_138_K1_H1 , \SLICE_138/mux_20_Mux_1_1_0_0_H0 ;

  lut40110 SLICE_138_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_138/SLICE_138_K1_H1 ));
  lut40115 mux_20_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_138/mux_20_Mux_1_1_0_0_H0 ));
  selmux2 SLICE_138_K0K1MUX( .D0(\SLICE_138/mux_20_Mux_1_1_0_0_H0 ), 
    .D1(\SLICE_138/SLICE_138_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_138_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5840) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_139/SLICE_139_K1_H1 , \SLICE_139/mux_20_Mux_1_1_0_1_H0 ;

  lut40116 SLICE_139_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_139/SLICE_139_K1_H1 ));
  lut40117 mux_20_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_139/mux_20_Mux_1_1_0_1_H0 ));
  selmux2 SLICE_139_K0K1MUX( .D0(\SLICE_139/mux_20_Mux_1_1_0_1_H0 ), 
    .D1(\SLICE_139/SLICE_139_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_139_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7C86) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_140/SLICE_140_K1_H1 , \SLICE_140/mux_20_Mux_1_1_1_0_H0 ;

  lut40058 SLICE_140_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_140/SLICE_140_K1_H1 ));
  lut40118 mux_20_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_140/mux_20_Mux_1_1_1_0_H0 ));
  selmux2 SLICE_140_K0K1MUX( .D0(\SLICE_140/mux_20_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_140/SLICE_140_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_140_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_141 ( input D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_141/SLICE_141_K1_H1 , \SLICE_141/mux_20_Mux_1_1_1_1_H0 ;

  lut40056 SLICE_141_K1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_141/SLICE_141_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40119 mux_20_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_141/mux_20_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_141_K0K1MUX( .D0(\SLICE_141/mux_20_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_141/SLICE_141_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_141_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2041) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_142/SLICE_142_K1_H1 , \SLICE_142/mux_20_Mux_2_0_0_0_H0 ;

  lut40120 SLICE_142_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_142/SLICE_142_K1_H1 ));
  lut40121 mux_20_Mux_2_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_142/mux_20_Mux_2_0_0_0_H0 ));
  selmux2 SLICE_142_K0K1MUX( .D0(\SLICE_142/mux_20_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_142/SLICE_142_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1551) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9AD9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_143/SLICE_143_K1_H1 , \SLICE_143/mux_20_Mux_2_0_0_1_H0 ;

  lut40122 SLICE_143_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_143/SLICE_143_K1_H1 ));
  lut40123 mux_20_Mux_2_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_143/mux_20_Mux_2_0_0_1_H0 ));
  selmux2 SLICE_143_K0K1MUX( .D0(\SLICE_143/mux_20_Mux_2_0_0_1_H0 ), 
    .D1(\SLICE_143/SLICE_143_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_143_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1145) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7B49) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_144 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_144/SLICE_144_K1_H1 , \SLICE_144/mux_20_Mux_2_0_1_0_H0 ;

  lut40124 SLICE_144_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_144/SLICE_144_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 mux_20_Mux_2_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_144/mux_20_Mux_2_0_1_0_H0 ));
  selmux2 SLICE_144_K0K1MUX( .D0(\SLICE_144/mux_20_Mux_2_0_1_0_H0 ), 
    .D1(\SLICE_144/SLICE_144_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_144_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4141) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_145/SLICE_145_K1_H1 , \SLICE_145/mux_20_Mux_2_0_1_1_H0 ;

  lut40126 SLICE_145_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_145/SLICE_145_K1_H1 ));
  lut40127 mux_20_Mux_2_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_145/mux_20_Mux_2_0_1_1_H0 ));
  selmux2 SLICE_145_K0K1MUX( .D0(\SLICE_145/mux_20_Mux_2_0_1_1_H0 ), 
    .D1(\SLICE_145/SLICE_145_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_145_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0014) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1E9D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_146/SLICE_146_K1_H1 , \SLICE_146/mux_20_Mux_2_1_0_0_H0 ;

  lut40128 SLICE_146_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_146/SLICE_146_K1_H1 ));
  lut40129 mux_20_Mux_2_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_146/mux_20_Mux_2_1_0_0_H0 ));
  selmux2 SLICE_146_K0K1MUX( .D0(\SLICE_146/mux_20_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_146/SLICE_146_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_146_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5545) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78ED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_147/SLICE_147_K1_H1 , \SLICE_147/mux_20_Mux_2_1_0_1_H0 ;

  lut40130 SLICE_147_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_147/SLICE_147_K1_H1 ));
  lut40131 mux_20_Mux_2_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_147/mux_20_Mux_2_1_0_1_H0 ));
  selmux2 SLICE_147_K0K1MUX( .D0(\SLICE_147/mux_20_Mux_2_1_0_1_H0 ), 
    .D1(\SLICE_147/SLICE_147_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_147_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD92) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_148/SLICE_148_K1_H1 , \SLICE_148/mux_20_Mux_2_1_1_0_H0 ;

  lut40132 SLICE_148_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_148/SLICE_148_K1_H1 ));
  lut40133 mux_20_Mux_2_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_148/mux_20_Mux_2_1_1_0_H0 ));
  selmux2 SLICE_148_K0K1MUX( .D0(\SLICE_148/mux_20_Mux_2_1_1_0_H0 ), 
    .D1(\SLICE_148/SLICE_148_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_148_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDECB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_149 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   GNDI, \SLICE_149/SLICE_149_K1_H1 , \SLICE_149/mux_20_Mux_2_1_1_1_H0 ;

  lut40113 SLICE_149_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_149/SLICE_149_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40134 mux_20_Mux_2_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_149/mux_20_Mux_2_1_1_1_H0 ));
  selmux2 SLICE_149_K0K1MUX( .D0(\SLICE_149/mux_20_Mux_2_1_1_1_H0 ), 
    .D1(\SLICE_149/SLICE_149_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_149_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1CBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_150 ( input D1, C1, B1, A1, M0, output OFX0 );
  wire   \SLICE_150/SLICE_150_K1_H1 , GNDI, \SLICE_150/mux_21_Mux_2_0_0_0_H0 ;

  lut40135 SLICE_150_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_150/SLICE_150_K1_H1 ));
  lut40009 mux_21_Mux_2_0_0_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_150/mux_21_Mux_2_0_0_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_150_K0K1MUX( .D0(\SLICE_150/mux_21_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_150/SLICE_150_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_151 ( input C1, B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_151/mux_21_Mux_2_0_0_1_H0 ;

  lut40086 \U2/i1011_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 mux_21_Mux_2_0_0_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_151/mux_21_Mux_2_0_0_1_H0 ));
  selmux20072 SLICE_151_K0K1MUX( .D0(\SLICE_151/mux_21_Mux_2_0_0_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_151_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_152/SLICE_152_K1_H1 , \SLICE_152/mux_21_Mux_2_0_1_0_H0 ;

  lut40136 SLICE_152_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_152/SLICE_152_K1_H1 ));
  lut40137 mux_21_Mux_2_0_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_152/mux_21_Mux_2_0_1_0_H0 ));
  selmux2 SLICE_152_K0K1MUX( .D0(\SLICE_152/mux_21_Mux_2_0_1_0_H0 ), 
    .D1(\SLICE_152/SLICE_152_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_152_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC955) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD07F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_153/SLICE_153_K1_H1 , \SLICE_153/mux_21_Mux_2_0_1_1_H0 ;

  lut40138 SLICE_153_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_153/SLICE_153_K1_H1 ));
  lut40139 mux_21_Mux_2_0_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_153/mux_21_Mux_2_0_1_1_H0 ));
  selmux2 SLICE_153_K0K1MUX( .D0(\SLICE_153/mux_21_Mux_2_0_1_1_H0 ), 
    .D1(\SLICE_153/SLICE_153_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_153_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h507B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   \SLICE_154/SLICE_154_K1_H1 , GNDI, \SLICE_154/mux_21_Mux_2_1_0_0_H0 ;

  lut40135 SLICE_154_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_154/SLICE_154_K1_H1 ));
  lut40009 mux_21_Mux_2_1_0_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_154/mux_21_Mux_2_1_0_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_154_K0K1MUX( .D0(\SLICE_154/mux_21_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_154/SLICE_154_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_154_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_155 ( input D1, C1, B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_155/mux_21_Mux_2_1_0_1_H0 ;

  lut40140 \U2/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 mux_21_Mux_2_1_0_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_155/mux_21_Mux_2_1_0_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux20072 SLICE_155_K0K1MUX( .D0(\SLICE_155/mux_21_Mux_2_1_0_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_155_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_156/SLICE_156_K1_H1 , \SLICE_156/mux_21_Mux_2_1_1_0_H0 ;

  lut40136 SLICE_156_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_156/SLICE_156_K1_H1 ));
  lut40141 mux_21_Mux_2_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_156/mux_21_Mux_2_1_1_0_H0 ));
  selmux2 SLICE_156_K0K1MUX( .D0(\SLICE_156/mux_21_Mux_2_1_1_0_H0 ), 
    .D1(\SLICE_156/SLICE_156_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_156_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD05F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_157 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_157/SLICE_157_K1_H1 , GNDI, \SLICE_157/mux_21_Mux_2_1_1_1_H0 ;

  lut40138 SLICE_157_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_157/SLICE_157_K1_H1 ));
  lut40142 mux_21_Mux_2_1_1_1( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_157/mux_21_Mux_2_1_1_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_157_K0K1MUX( .D0(\SLICE_157/mux_21_Mux_2_1_1_1_H0 ), 
    .D1(\SLICE_157/SLICE_157_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_157_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40143 col_c_1_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_159 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40145 tone_3__I_0_Mux_10_i7_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 tone_3__I_0_Mux_10_i15_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA6A6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_160 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40147 i1042_2_lut_rep_15_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40148 tone1_3__I_0_71_i3_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0035) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_161 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40149 tone_3__I_0_Mux_3_i7_3_lut_4_lut_3_lut( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40146 tone_3__I_0_Mux_3_i15_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9E9E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_162 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40150 tone_3__I_0_Mux_7_i15_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40151 i584_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0606) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_163 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40152 tone_1__bdd_4_lut_1085( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40148 tone1_3__I_0_71_i4_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1120) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_164 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40148 tone1_3__I_0_71_i1_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40153 tone_1__bdd_4_lut_1084( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h316A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_165 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40154 \U1/i1035_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40155 i1053_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_166 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40154 \U2/i1050_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40155 i1051_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_167 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40156 \U2/i1049_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40157 i1047_2_lut_rep_14( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_168 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40148 tone1_3__I_0_71_i2_3_lut_rep_21( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40158 tone_3__I_0_Mux_9_i15_3_lut_4_lut_3_lut( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2626) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_169 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40159 i1064_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 i444_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_170 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40012 \U2/i999_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40160 \U2/i1052_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40013 \U1/i22_4_lut_adj_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \U1/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40013 \U1/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \U1/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_173 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40013 \U1/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \U1/i5_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_174 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 \U1/i1019_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 \U1/i1007_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_175 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \U1/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \U1/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_176 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \U1/i1_2_lut_adj_7 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40161 \U1/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40013 \U1/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \U1/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40163 tone_2__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 tone_0__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2242) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0726) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40165 tone_3__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40166 tone_1__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1418) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3426) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40167 i2_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40168 i597_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h001E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40169 \U2/mn_former_1__I_0_i3_4_lut_rep_22 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40170 \U2/mn_former_1__I_0_i4_1_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB7DE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4821) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U2_SLICE_182 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40157 \U2/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 \U2/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module U1_SLICE_183 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \U1/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \U1/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_184 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40070 \U1/i1015_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \U1/i987_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module U1_SLICE_185 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \U1/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \U1/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_186 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 i301_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 i991_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDEDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module switch ( output PADDI, input switch );

  xo2iobuf switch_pad( .Z(PADDI), .PAD(switch));

  specify
    (switch => PADDI) = (0:0:0,0:0:0);
    $width (posedge switch, 0:0:0);
    $width (negedge switch, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module col_0_ ( output PADDI, input col0 );

  xo2iobuf col_pad_0( .Z(PADDI), .PAD(col0));

  specify
    (col0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col0, 0:0:0);
    $width (negedge col0, 0:0:0);
  endspecify

endmodule

module col_1_ ( output PADDI, input col1 );

  xo2iobuf col_pad_1( .Z(PADDI), .PAD(col1));

  specify
    (col1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col1, 0:0:0);
    $width (negedge col1, 0:0:0);
  endspecify

endmodule

module col_2_ ( output PADDI, input col2 );

  xo2iobuf col_pad_2( .Z(PADDI), .PAD(col2));

  specify
    (col2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col2, 0:0:0);
    $width (negedge col2, 0:0:0);
  endspecify

endmodule

module col_3_ ( output PADDI, input col3 );

  xo2iobuf col_pad_3( .Z(PADDI), .PAD(col3));

  specify
    (col3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge col3, 0:0:0);
    $width (negedge col3, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module mode ( output PADDI, input mode );

  xo2iobuf mode_pad( .Z(PADDI), .PAD(mode));

  specify
    (mode => PADDI) = (0:0:0,0:0:0);
    $width (posedge mode, 0:0:0);
    $width (negedge mode, 0:0:0);
  endspecify

endmodule

module beep ( input PADDO, output beep );
  wire   GNDI;

  xo2iobuf0173 beep_pad( .I(PADDO), .T(GNDI), .PAD(beep));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => beep) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0173 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module row_0_ ( input PADDO, output row0 );
  wire   GNDI;

  xo2iobuf0173 row_pad_0( .I(PADDO), .T(GNDI), .PAD(row0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row0) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_1_ ( input PADDO, output row1 );
  wire   GNDI;

  xo2iobuf0173 row_pad_1( .I(PADDO), .T(GNDI), .PAD(row1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row1) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_2_ ( input PADDO, output row2 );
  wire   GNDI;

  xo2iobuf0173 row_pad_2( .I(PADDO), .T(GNDI), .PAD(row2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row2) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_3_ ( input PADDO, output row3 );
  wire   GNDI;

  xo2iobuf0173 row_pad_3( .I(PADDO), .T(GNDI), .PAD(row3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row3) = (0:0:0,0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
